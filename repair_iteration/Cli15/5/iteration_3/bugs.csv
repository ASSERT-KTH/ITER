bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  null.clear();  [CE]  <null>  cannot  be  dereferenced  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  null.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	null.clear();	          valueList.clear();    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  <null>  cannot  be  dereferenced	31	None	replace
2	[BUG]  [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  value);  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  defaultValues.put(option,  value);  }	  if(valueList!=    null)    {    values.put(option,    value);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
3	[BUG]  [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  value);  }  else  {  defaultValues.add(option);  }  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  value);  }  else  {  defaultValues.add(option);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  defaultValues.put(option,  value);  }  else  {  defaultValues.add(option);  }	  if(valueList!=    null)    {    values.put(option,    value);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
4	[BUG]  [BUGGY]  valueList.addAll(defaultValues,  value);  [CE]  no  suitable  method  found  for  addAll(Map,Object)  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(defaultValues,  value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(defaultValues,  value);	  valueList.addAll(defaultValues);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map,Object)	27	None	replace
5	[BUG]  [BUGGY]  valueList.addAll(defaultValues,  values);  [CE]  no  suitable  method  found  for  addAll(Map,Map)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(defaultValues,  values);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(defaultValues,  values);	  valueList.addAll(defaultValues);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map,Map)	27	None	replace
6	[BUG]  [BUGGY]  valueList.addAll(defaultValues,  valueList);  [CE]  no  suitable  method  found  for  addAll(Map,List)  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(defaultValues,  valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(defaultValues,  valueList);	  valueList.addAll(defaultValues);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map,List)	27	None	replace
7	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
8	[BUG]  [BUGGY]  if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
9	[BUG]  [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
10	[BUG]  [BUGGY]  valueList.clear();  expected  =  true;  [CE]  cannot  find  symbol  expected  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected  =  true;	          valueList.clear();    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expected	32	None	replace
11	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  =  true;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expected  =  true;	          valueList.clear();    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  not  a  statement	32	None	replace
12	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  ComparisonFailure:  expected  =  true;  }  [CE]  cannot  find  symbol  expected  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  ComparisonFailure:  expected  =  true;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.clear();  ComparisonFailure:  expected  =  true;  }	          valueList.clear();    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expected	32	None	replace
13	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  System.arraycopy(valueList,  0,  valueList,  0,  valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.clear();  System.arraycopy(valueList,  0,  valueList,  0,  valueList.size());  }	          valueList.clear();    junit.framework.ComparisonFailure:    expected    =    true;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	32	2	replace
14	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  System.arraycopy(valueList,  0,  valueList,  0,  valueList.size());  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  System.arraycopy(valueList,  0,  valueList,  0,  valueList.size());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.clear();  System.arraycopy(valueList,  0,  valueList,  0,  valueList.size());  }	          valueList.clear();    junit.framework.ComparisonFailure:    expected    =    true;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	32	2	replace
15	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expected;  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expected;	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	35	None	replace
16	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  defaultValues.put(option,  valueList);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	defaultValues.put(option,  valueList);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	35	2	replace
17	[BUG]  [BUGGY]  defaultValues.put(option,  valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  defaultValues.put(option,  valueList);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	defaultValues.put(option,  valueList);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	35	2	replace
18	[BUG]  [BUGGY]  DefaultValues.put(option,  valueList);  [CE]  cannot  find  symbol  DefaultValues  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  DefaultValues.put(option,  valueList);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	DefaultValues.put(option,  valueList);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  DefaultValues	35	None	replace
19	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  ClassCastException  	16	2	replace
20	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  ClassCastException  	16	2	replace
21	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	16	2	replace
22	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	16	2	replace
23	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  ClassCastException  	16	2	replace
24	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }  [FE]  ClassCastException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }  else  {  values.put(option,  value);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  ClassCastException  	16	2	replace
25	[BUG]  [BUGGY]  defaultValues  =(List)defaultSwitches.get(option);  [CE]  cannot  assign  a  value  to  final  variable  defaultValues  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  defaultValues  =(List)defaultSwitches.get(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	defaultValues  =(List)defaultSwitches.get(option);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  defaultValues	79	None	replace
26	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
27	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
28	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
29	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
30	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
31	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
32	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
33	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
34	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
35	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
36	[BUG]  [BUGGY]  valueList.add(value);  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  expected;	          valueList.add(value);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	5	None	replace
37	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  ComparisonFailure:  expected;  }	          valueList.add(value);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	5	None	replace
38	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.add(option);  valueList.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList.add(option);    valueList.add(option);  valueList.add(option);	  	compilable	  [FE]  ClassCastException  	15	2	add
39	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.add(option);  valueList.add(option);  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.add(option);  valueList.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList.add(option);    valueList.add(option);  valueList.add(option);	  	compilable	  [FE]  ClassCastException  	15	2	add
40	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
41	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  [FE]  ClassCastException  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
42	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
43	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  ClassCastException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
44	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultSwitches.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultSwitches.put(option,  defaultValues);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
45	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultSwitches.put(option,  defaultValues);  }  [FE]  ClassCastException  [FE]          OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultSwitches.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultSwitches.put(option,  defaultValues);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
46	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  options);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  options);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
47	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  options);  }  [FE]  ClassCastException  [FE]            OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  options);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList.add(option);    if(valueList.size()  >  0)  {  valueList.add(option);  valueList.add(option);  }  else  {  defaultValues.put(option,  options);  }	  	compilable	  [FE]  ClassCastException  	15	2	add
48	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  ClassCastException  	4	2	replace
49	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  ClassCastException  	4	2	replace
50	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(value);  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	4	2	replace
51	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(value);  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	4	2	replace
52	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList  =  new  ArrayList();	          valueList.addAll(valueList);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	69	2	replace
53	[BUG]  [BUGGY]  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList  =  new  ArrayList();	          valueList.addAll(valueList);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	69	2	replace
54	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }	          valueList.addAll(valueList);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	69	2	replace
55	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }	          valueList.addAll(valueList);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	69	2	replace
56	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          valueList.addAll(valueList);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	69	2	replace
57	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.addAll(valueList);  valueList  =  new  ArrayList();  }  else  {  throw  new  IllegalArgumentException( " ");  }	          valueList.addAll(valueList);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	69	2	replace
58	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  values.put(option,  value);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	values.put(option,  value);	  if(valueList!=    null)    {    values.put(option,    value);    }    	compilable	  [FE]  ClassCastException  	22	2	replace
59	[BUG]  [BUGGY]  values.put(option,  value);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  values.put(option,  value);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	values.put(option,  value);	  if(valueList!=    null)    {    values.put(option,    value);    }    	compilable	  [FE]  ClassCastException  	22	2	replace
60	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  ||  valueList.size()  ==  1;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expected  ||  valueList.size()  ==  1;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expected  ||  valueList.size()  ==  1;	          valueList.add(this);    junit.framework.ComparisonFailure:    expected    ||    valueList.size()    ==    1;    	non-compiled	[CE]  not  a  statement	57	None	replace
61	[BUG]  [BUGGY]  valueList.add(this);  valueList.size()  ==  1;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  valueList.size()  ==  1;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  valueList.size()  ==  1;	          valueList.add(this);    junit.framework.ComparisonFailure:    expected    ||    valueList.size()    ==    1;    	non-compiled	[CE]  not  a  statement	57	None	replace
62	[BUG]  [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.remove(option);  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.remove(option);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.remove(option);  }	  valueList!=    null)    {    defaultValues.put(option,    valueList);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
63	[BUG]  [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.clear();  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.clear();  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.clear();  }	  valueList!=    null)    {    defaultValues.put(option,    valueList);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
64	[BUG]  [BUGGY]  valueList!=  null)  {  values.put(option,  value);  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  values.put(option,  value);  }	  valueList!=    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
65	[BUG]  [BUGGY]  valueList  ==  null)  {  values.put(option,  valueList);  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList  ==  null)  {  values.put(option,  valueList);  }	  valueList!=    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
66	[BUG]  [BUGGY]  valueList!=  null)  {  values.put(option,  new  ArrayList());  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  values.put(option,  new  ArrayList());  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  values.put(option,  new  ArrayList());  }	  valueList!=    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
67	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues!=  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues!=  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.get(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
68	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.get(option,    valueList);    }    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	39	None	replace
69	[BUG]  [BUGGY]  if(valueList!=  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.get(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
70	[BUG]  [BUGGY]  valueList.add(option);  expected;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(option);  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(option);  expected;	          valueList.add(option);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	18	None	replace
71	[BUG]  [BUGGY]  if(valueList.size()  ==  1)  {  valueList.add(option);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  ==  1)  {  valueList.add(option);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  ==  1)  {  valueList.add(option);  }  else  {  ComparisonFailure:  expected;  }	          valueList.add(option);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	18	None	replace
72	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.clear();  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.clear();  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
73	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.clear();  valueList.clear();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.clear();  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.clear();  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
74	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.clear();  }  else  {  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.clear();  }  else  {  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
75	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.clear();  }  else  {  valueList.clear();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.clear();  }  else  {  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.clear();  }  else  {  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
76	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  }  else  {  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.clear();  }  else  {  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
77	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  }  else  {  valueList.clear();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  }  else  {  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.clear();  }  else  {  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
78	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  valueList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.clear();        valueList.clear();    valueList.clear();  valueList.clear();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	add
79	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  valueList.clear();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  valueList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    valueList.clear();  valueList.clear();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	add
80	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  if(valueList.size()  >  0)  {  valueList.clear();  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.clear();        valueList.clear();    if(valueList.size()  >  0)  {  valueList.clear();  valueList.clear();  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	add
81	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  if(valueList.size()  >  0)  {  valueList.clear();  valueList.clear();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  if(valueList.size()  >  0)  {  valueList.clear();  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    if(valueList.size()  >  0)  {  valueList.clear();  valueList.clear();  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	add
82	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  ValueList.clear();  valueList.clear();  [CE]  cannot  find  symbol  ValueList  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  ValueList.clear();  valueList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    ValueList.clear();  valueList.clear();	  	non-compiled	[CE]  cannot  find  symbol  ValueList	28	None	add
83	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	28	None	add
84	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	28	None	add
85	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	75	2	replace
86	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	75	2	replace
87	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	75	2	replace
88	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList  ==  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }	          valueList.add(option);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	75	2	replace
89	[BUG]  [BUGGY]  valueList.add(value);  expected:  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  expected:  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  expected:	          valueList.add(value);    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
90	[BUG]  [BUGGY]  valueList.addAll(values);  [CE]  no  suitable  method  found  for  addAll(Map)  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(values);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(values);	  valueList.addAll(value);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map)	88	None	replace
91	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.addAll(valueList);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  defaultValues.addAll(valueList);	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues.addAll(valueList);    	non-compiled	[CE]  not  a  statement	93	None	replace
92	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.addAll(valueList);  }  else  {  defaultValues.addAll(valueList);  }  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues!=  null)  {  valueList.addAll(valueList);  }  else  {  defaultValues.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues!=  null)  {  valueList.addAll(valueList);  }  else  {  defaultValues.addAll(valueList);  }	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues.addAll(valueList);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
93	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.getClass()!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  if(option  instanceof  Comparison)  {  final  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparison)  {  final  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparison)  {  final  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.getClass()!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
95	[BUG]  [BUGGY]  Value  value  =(Value)option;  if(value.getClass()!=  null)  {  return;  }  [CE]  cannot  find  symbol  [FE]                    junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  Value  value  =(Value)option;  if(value.getClass()!=  null)  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	Value  value  =(Value)option;  if(value.getClass()!=  null)  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.getClass()!=    null)    {    return;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
96	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.addAll(option);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.addAll(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  defaultValues.addAll(option);	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues.addAll(option);    	non-compiled	[CE]  not  a  statement	94	None	replace
97	[BUG]  [BUGGY]  valueList.addAll(valueList);  defaultValues.addAll(option);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  defaultValues.addAll(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  defaultValues.addAll(option);	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues.addAll(option);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
98	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.addAll(valueList);  }  else  {  defaultValues.addAll(option);  }  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues!=  null)  {  valueList.addAll(valueList);  }  else  {  defaultValues.addAll(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues!=  null)  {  valueList.addAll(valueList);  }  else  {  defaultValues.addAll(option);  }	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues.addAll(option);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
99	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
100	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
101	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
102	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
103	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	36	None	add
104	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
105	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
106	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
107	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
108	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
109	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
110	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
111	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
112	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  defaultValues;	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues;    	non-compiled	[CE]  not  a  statement	95	None	replace
113	[BUG]  [BUGGY]  valueList.addAll(valueList);  defaultValues.addAll(valueList);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  defaultValues.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  defaultValues.addAll(valueList);	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues;    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
114	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  defaultValues.put(option,  value);  }	  if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  ClassCastException  	11	2	replace
115	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  value);  }  [FE]  ClassCastException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  defaultValues.put(option,  value);  }	  if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  ClassCastException  	11	2	replace
116	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	11	2	replace
117	[BUG]  [BUGGY]  if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	11	2	replace
118	[BUG]  [BUGGY]  valueList.addAll(valueList);  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  expected;	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	48	None	replace
119	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  expected;  }	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	48	None	replace
120	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  expected;  }	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	48	None	replace
121	[BUG]  [BUGGY]  DefaultValues.put(option,  value);  [CE]  cannot  find  symbol  DefaultValues  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  DefaultValues.put(option,  value);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	DefaultValues.put(option,  value);	  if(valueList!=    null)    {    defaultValues.put(option,    value);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  cannot  find  symbol  DefaultValues	14	None	replace
122	[BUG]  [BUGGY]  valueList.add(this);  expected;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  expected;	          valueList.add(this);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	55	None	replace
123	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  ComparisonFailure:  expected;  }	          valueList.add(this);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	55	None	replace
124	[BUG]  [BUGGY]  ValueList  valueList  =(ValueList)this.defaultSwitches.get(option);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  ValueList  valueList  =(ValueList)this.defaultSwitches.get(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	ValueList  valueList  =(ValueList)this.defaultSwitches.get(option);	          valueList.addAll(valueList);    ValueList    valueList    =(ValueList)this.defaultSwitches.get(option);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
125	[BUG]  [BUGGY]  valueList.addAll(valueList);  ValueList  valueList  =(ValueList)defaultSwitches.get(option);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  ValueList  valueList  =(ValueList)defaultSwitches.get(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  ValueList  valueList  =(ValueList)defaultSwitches.get(option);	          valueList.addAll(valueList);    ValueList    valueList    =(ValueList)this.defaultSwitches.get(option);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
126	[BUG]  [BUGGY]  null.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  null.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	null.framework.ComparisonFailure:  expected	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	49	None	replace
127	[BUG]  [BUGGY]  valueList.addAll(valueList);  expected  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  expected	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	49	None	replace
128	[BUG]  [BUGGY]  valueList.put(option,  value);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.put(option,  value);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.put(option,  value);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=    null)    {    values.get(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
129	[BUG]  [BUGGY]  valueList.addAll(valueList);  expected  =  true;  [CE]  cannot  find  symbol  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  expected  =  true;	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expected	51	None	replace
130	[BUG]  [BUGGY]  valueList.addAll(valueList);  expect  =  true;  [CE]  cannot  find  symbol  expect  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  expect  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  expect  =  true;	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expect	51	None	replace
131	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
132	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
133	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	34	None	add
134	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
135	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
136	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
137	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
138	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
139	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
140	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.clear();  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  defaultValues.clear();	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues.clear();    	non-compiled	[CE]  not  a  statement	86	None	replace
141	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.clear();  defaultValues.clear();	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	86	2	replace
142	[BUG]  [BUGGY]  valueList.clear();  defaultValues.clear();  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  defaultValues.clear();	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	86	2	replace
143	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  valueList.clear();  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  valueList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  valueList.clear();	          valueList.clear();    junit.framework.ComparisonFailure:    valueList.clear();    	non-compiled	[CE]  not  a  statement	81	None	replace
144	[BUG]  [BUGGY]  null.clear();  junit.framework.ComparisonFailure:  valueList.clear();  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  null.clear();  junit.framework.ComparisonFailure:  valueList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	null.clear();  junit.framework.ComparisonFailure:  valueList.clear();	          valueList.clear();    junit.framework.ComparisonFailure:    valueList.clear();    	non-compiled	[CE]  not  a  statement	81	None	replace
145	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
146	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
147	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
148	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
149	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
150	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
151	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
152	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
153	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
154	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
155	[BUG]  [BUGGY]  valueList!=  null  &&  defaultValues.contains(value);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null  &&  defaultValues.contains(value);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null  &&  defaultValues.contains(value);	  valueList!=    null    &&    defaultValues.contains(option);    	non-compiled	[CE]  not  a  statement	90	None	replace
156	[BUG]  [BUGGY]  valueList!=  null  ||  defaultValues.contains(option);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null  ||  defaultValues.contains(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null  ||  defaultValues.contains(option);	  valueList!=    null    &&    defaultValues.contains(option);    	non-compiled	[CE]  not  a  statement	90	None	replace
157	[BUG]  [BUGGY]  valueList!=  null  &&  defaultValues.get(option);  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null  &&  defaultValues.get(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null  &&  defaultValues.get(option);	  valueList!=    null    &&    defaultValues.contains(option);    	non-compiled	[CE]  not  a  statement	90	None	replace
158	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
159	[BUG]  [BUGGY]  if(option  instanceof  Comparable  <?>)  {  final  Comparable  <?>  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable  <?>)  {  final  Comparable  <?>  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable  <?>)  {  final  Comparable  <?>  value  =(Comparison)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
160	[BUG]  [BUGGY]  valueList.add(this);  expected:  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  expected:  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  expected:	          valueList.add(this);    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
161	[BUG]  [BUGGY]  Values.put(option,  valueList);  [CE]  cannot  find  symbol  Values  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  Values.put(option,  valueList);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	Values.put(option,  valueList);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.add(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  Values	80	None	replace
162	[BUG]  [BUGGY]  valueList.put(option,  valueList);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.put(option,  valueList);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.put(option,  valueList);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.add(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
163	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  values;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  values;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  values;	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    values;    	non-compiled	[CE]  not  a  statement	70	None	replace
164	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  values;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  values;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.addAll(valueList);  }  else  {  ComparisonFailure:  values;  }	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    values;    	non-compiled	[CE]  not  a  statement	70	None	replace
165	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(value);  valueList.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    valueList.add(value);  valueList.add(value);	  	compilable	  [FE]  OptionException  	3	2	add
166	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(value);  valueList.add(value);  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  valueList.add(value);  valueList.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    valueList.add(value);  valueList.add(value);	  	compilable	  [FE]  OptionException  	3	2	add
167	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  OptionException  	3	2	add
168	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  OptionException  	3	2	add
169	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  OptionException  	3	2	add
170	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList.size()  >  0)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  OptionException  	3	2	add
171	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  OptionException  	3	2	add
172	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  [FE]  OptionException  [FE]          OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  OptionException  	3	2	add
173	[BUG]  [BUGGY]  [FE]  OptionException  [FE]            OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  OptionException  	3	2	add
174	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [FE]  OptionException  [FE]            OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }	  	compilable	  [FE]  OptionException  	3	2	add
175	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	84	2	replace
176	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	84	2	replace
177	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList  ==  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	84	2	replace
178	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList  ==  null)  {  valueList.add(this);  valueList  =  new  ArrayList();  }	          valueList.add(this);    valueList    =    new    ArrayList();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	84	2	replace
179	[BUG]  [BUGGY]  valueList.clear();  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected;	          valueList.clear();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	30	None	replace
180	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  compilerFailure:  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  compilerFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.clear();  compilerFailure:  expected;  }	          valueList.clear();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	30	None	replace
181	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expect  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expect  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expect	  junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	9	None	replace
182	[BUG]  [BUGGY]  this.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  this.framework.ComparisonFailure:  expected  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	this.framework.ComparisonFailure:  expected	  junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	9	None	replace
183	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  defaultValues.put(option,  valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.add(this);  defaultValues.put(option,  valueList);	          valueList.add(this);    junit.framework.ComparisonFailure:    defaultValues;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	85	2	replace
184	[BUG]  [BUGGY]  valueList.add(this);  defaultValues.put(option,  valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  defaultValues.put(option,  valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  defaultValues.put(option,  valueList);	          valueList.add(this);    junit.framework.ComparisonFailure:    defaultValues;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	85	2	replace
185	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
186	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
187	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
188	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
189	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	78	None	add
190	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
191	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
192	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
193	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
194	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(value);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  defaultValues.add(value);	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues.add(value);    	non-compiled	[CE]  not  a  statement	87	None	replace
195	[BUG]  [BUGGY]  valueList.clear();  defaultValues.add(value);  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  defaultValues.add(value);	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues.add(value);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
196	[BUG]  [BUGGY]  null.clear();  defaultValues.add(value);  [CE]  <null>  cannot  be  dereferenced  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  null.clear();  defaultValues.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	null.clear();  defaultValues.add(value);	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues.add(value);    	non-compiled	[CE]  <null>  cannot  be  dereferenced	87	None	replace
197	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList    ==    null)    {    values.put(option,    value);    }    if(valueList  ==  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	add
198	[BUG]  [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.put(option,  value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList    ==    null)    {    values.put(option,    value);    }    if(valueList  ==  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	add
199	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList!=  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList    ==    null)    {    values.put(option,    value);    }    if(valueList!=  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	add
200	[BUG]  [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList!=  null)  {  values.put(option,  value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList!=  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList    ==    null)    {    values.put(option,    value);    }    if(valueList!=  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	add
201	[BUG]  [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList  >=  null)  {  values.put(option,  value);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList  >=  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList    ==    null)    {    values.put(option,    value);    }    if(valueList  >=  null)  {  values.put(option,  value);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	23	None	add
202	[BUG]  [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  If(valueList  ==  null)  {  values.put(option,  value);  }  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  If(valueList  ==  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList    ==    null)    {    values.put(option,    value);    }    If(valueList  ==  null)  {  values.put(option,  value);  }	  	non-compiled	[CE]  ';'  expected	23	None	add
203	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(option);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  defaultValues.add(option);	          valueList.add(option);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  not  a  statement	76	None	replace
204	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }	          valueList.add(option);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
205	[BUG]  [BUGGY]  if(defaultValues.contains(option))  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues.contains(option))  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues.contains(option))  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }	          valueList.add(option);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
206	[BUG]  [BUGGY]  valueList.add(option);  defaultValues.add(option);  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(option);  defaultValues.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(option);  defaultValues.add(option);	          valueList.add(option);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
207	[BUG]  [BUGGY]  Value  value  =(Value)this.defaultSwitches.get(option);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  Value  value  =(Value)this.defaultSwitches.get(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	Value  value  =(Value)this.defaultSwitches.get(option);	          valueList.add(value);    Value    value    =(Value)this.defaultSwitches.get(option);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
208	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  +  1;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expected  +  1;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expected  +  1;	          valueList.clear();    junit.framework.ComparisonFailure:    expected    +    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
209	[BUG]  [BUGGY]  valueList.clear();  expected  +  1;  [CE]  not  a  statement  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected  +  1;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected  +  1;	          valueList.clear();    junit.framework.ComparisonFailure:    expected    +    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
210	[BUG]  [BUGGY]  valueList.clear();  expected:  expected  +  1;  [CE]  not  a  statement  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected:  expected  +  1;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected:  expected  +  1;	          valueList.clear();    junit.framework.ComparisonFailure:    expected    +    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
211	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	64	2	add
212	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	64	2	add
213	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	64	2	add
214	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  valueList.add(value);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    valueList.add(value);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	64	2	add
215	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	64	None	add
216	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	64	None	add
217	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  =  true;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected  =  true;	  	non-compiled	[CE]  not  a  statement	64	None	add
218	[BUG]  [BUGGY]  valueList.add(this);  expected  =  true;  [CE]  cannot  find  symbol  expected  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  expected  =  true;	          valueList.add(this);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expected	56	None	replace
219	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  =  false;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expected  =  false;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expected  =  false;	          valueList.add(this);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  not  a  statement	56	None	replace
220	[BUG]  [BUGGY]  Value  value  =(Value)option.clone();  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  Value  value  =(Value)option.clone();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	Value  value  =(Value)option.clone();	          valueList.add(value);    Value    value    =(Value)option.clone();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
221	[BUG]  [BUGGY]  Value  value  =(Value)valueList.clone();  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  Value  value  =(Value)valueList.clone();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	Value  value  =(Value)valueList.clone();	          valueList.add(value);    Value    value    =(Value)option.clone();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
222	[BUG]  [BUGGY]  if(valueList  ==  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList  ==  null)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
223	[BUG]  [BUGGY]  valueList.addAll(this.defaultValues,  value);  [CE]  no  suitable  method  found  for  addAll(Map,Object)  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(this.defaultValues,  value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(this.defaultValues,  value);	  valueList.addAll(this.defaultValues);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map,Object)	26	None	replace
224	[BUG]  [BUGGY]  valueList.addAll(this.defaultValues,  this.defaultSwitches);  [CE]  no  suitable  method  found  for  addAll(Map,Map)  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(this.defaultValues,  this.defaultSwitches);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(this.defaultValues,  this.defaultSwitches);	  valueList.addAll(this.defaultValues);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map,Map)	26	None	replace
225	[BUG]  [BUGGY]  valueList.addAll(this.defaultValues,  valueList);  [CE]  no  suitable  method  found  for  addAll(Map,List)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(this.defaultValues,  valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(this.defaultValues,  valueList);	  valueList.addAll(this.defaultValues);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map,List)	26	None	replace
226	[BUG]  [BUGGY]  valueList.add(this);  defaultValues.add(option);  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  defaultValues.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  defaultValues.add(option);	          valueList.add(this);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
227	[BUG]  [BUGGY]  if(defaultValues!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }	          valueList.add(this);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
228	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  valueList.add(null);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.add(null);    valueList.add(null);	  	compilable	  [FE]  OptionException  	1	2	add
229	[BUG]  [BUGGY]  valueList.add(null);  valueList.add(null);  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  valueList.add(null);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    valueList.add(null);	  	compilable	  [FE]  OptionException  	1	2	add
230	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	1	None	add
231	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	1	None	add
232	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  expected  =  true;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure:  expected  =  true;	  	non-compiled	[CE]  not  a  statement	1	None	add
233	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure(value,  null);  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure(value,  null);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure(value,  null);	  	non-compiled	[CE]  package  junit  does  not  exist	1	None	add
234	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
235	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
236	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
237	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
238	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
239	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
240	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
241	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
242	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
243	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
244	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	add
245	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	add
246	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	add
247	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  defaultValues.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	add
248	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList  >=  null)  {  defaultValues.put(option,  valueList);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList  >=  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    if(valueList  >=  null)  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
249	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  defaultValues.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	add
250	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	53	2	replace
251	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	53	2	replace
252	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	53	2	replace
253	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  null);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	53	2	replace
254	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  ClassCastException  	53	2	replace
255	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  value);  }  [FE]  ClassCastException  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(this);  }  else  {  defaultValues.put(option,  value);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  ClassCastException  	53	2	replace
256	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(this);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	83	2	add
257	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	83	2	add
258	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	83	None	add
259	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	83	None	add
260	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	83	2	add
261	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	83	2	add
262	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	83	2	add
263	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  valueList.add(this);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    valueList.add(this);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  	83	2	add
264	[BUG]  [BUGGY]  valueList.add(option);  expected:  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(option);  expected:  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(option);  expected:	          valueList.add(option);    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
265	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
266	[BUG]  [BUGGY]  if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
267	[BUG]  [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
268	[BUG]  [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparableFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
269	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
270	[BUG]  [BUGGY]  if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparisonFailure)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
271	[BUG]  [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparableFailure)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
272	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  +  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expected  +  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expected  +	          valueList.add(value);    junit.framework.ComparisonFailure:    expected    +    	non-compiled	[CE]  not  a  statement	66	None	replace
273	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
274	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
275	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
276	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
277	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
278	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
279	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
280	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
281	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
282	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
283	[BUG]  [BUGGY]  if(valueList!=  null)  {  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    If(valueList    ==    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
284	[BUG]  [BUGGY]  if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  values.put(option,  valueList);  }	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    If(valueList    ==    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
285	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.addAll(valueList);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	68	2	add
286	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	68	2	add
287	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  valueList.addAll(valueList);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.addAll(valueList);        valueList    =    new    ArrayList();    valueList.addAll(valueList);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	68	2	add
288	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  valueList.addAll(valueList);  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  valueList.addAll(valueList);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList    =    new    ArrayList();    valueList.addAll(valueList);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	68	2	add
289	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	68	None	add
290	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	68	None	add
291	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  ValueList.addAll(valueList);  valueList  =  new  ArrayList();  [CE]  cannot  find  symbol  ValueList  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList  =  new  ArrayList();  ValueList.addAll(valueList);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList    =    new    ArrayList();    ValueList.addAll(valueList);  valueList  =  new  ArrayList();	  	non-compiled	[CE]  cannot  find  symbol  ValueList	68	None	add
292	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList!=  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=    null)    {    values.put(option,    value);    }    if(valueList!=  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	21	2	add
293	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList!=  null)  {  values.put(option,  value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList!=  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    values.put(option,    value);    }    if(valueList!=  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	21	2	add
294	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=    null)    {    values.put(option,    value);    }    if(valueList  ==  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	21	2	add
295	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.put(option,  value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    values.put(option,    value);    }    if(valueList  ==  null)  {  values.put(option,  value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	21	2	add
296	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList  >=  null)  {  values.put(option,  value);  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList  >=  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    values.put(option,    value);    }    if(valueList  >=  null)  {  values.put(option,  value);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	21	None	add
297	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList  >>  null)  {  values.put(option,  value);  }  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.put(option,  value);  }  if(valueList  >>  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=    null)    {    values.put(option,    value);    }    if(valueList  >>  null)  {  values.put(option,  value);  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	21	None	add
298	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);  valueList.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
299	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);  valueList.addAll(valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);  valueList.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
300	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	46	None	add
301	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	46	None	add
302	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList.addAll(valueList);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
303	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList.addAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList.addAll(valueList);	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
304	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  junit.framework.ComparisonFailure:  expected  =  true;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  junit.framework.ComparisonFailure:  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    junit.framework.ComparisonFailure:  expected  =  true;	  	non-compiled	[CE]  not  a  statement	46	None	add
305	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	74	2	add
306	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	74	2	add
307	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.add(option);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	74	2	add
308	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  valueList.add(option);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    valueList.add(option);  valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	74	2	add
309	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	74	None	add
310	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	74	None	add
311	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  =  true;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  expected  =  true;	  	non-compiled	[CE]  not  a  statement	74	None	add
312	[BUG]  [BUGGY]  valueList.add(value);  expected  =  true;  [CE]  cannot  find  symbol  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  expected  =  true;	          valueList.add(value);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expected	8	None	replace
313	[BUG]  [BUGGY]  valueList.add(value);  expect  =  true;  [CE]  cannot  find  symbol  expect  [FE]                  junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  expect  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  expect  =  true;	          valueList.add(value);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expect	8	None	replace
314	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(new  Object[]  {  option  }  );  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.add(new  Object[]  {  option  }  );	  valueList.add(null);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	2	2	replace
315	[BUG]  [BUGGY]  valueList.add(new  Object[]  {  option  }  );  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(new  Object[]  {  option  }  );  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(new  Object[]  {  option  }  );	  valueList.add(null);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	2	2	replace
316	[BUG]  [BUGGY]  valueList.addAll(this,  value);  [CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,Object)  [FE]        junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(this,  value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(this,  value);	  valueList.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,Object)	25	None	replace
317	[BUG]  [BUGGY]  valueList.addAll(this,  valueList);  [CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,List)  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(this,  valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(this,  valueList);	  valueList.addAll(this);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(WriteableCommandLineImpl,List)	25	None	replace
318	[BUG]  [BUGGY]  valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList  ==  null)  {  defaultValues.put(option,  valueList);  }	  valueList!=    null)    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	72	None	replace
319	[BUG]  [BUGGY]  valueList.clear();  defaultValues.framework.ComparisonFailure:  defaultValues;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.framework.ComparisonFailure:  defaultValues;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  defaultValues.framework.ComparisonFailure:  defaultValues;	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues;    	non-compiled	[CE]  not  a  statement	82	None	replace
320	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.put(option,  valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.clear();  defaultValues.put(option,  valueList);	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	82	2	replace
321	[BUG]  [BUGGY]  valueList.clear();  defaultValues.put(option,  valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.put(option,  valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  defaultValues.put(option,  valueList);	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	82	2	replace
322	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  valueList.add(this);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(this);        valueList.add(this);    valueList.add(this);  valueList.add(this);	  	compilable	  [FE]  ClassCastException  	52	2	add
323	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  valueList.add(this);  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  valueList.add(this);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList.add(this);    valueList.add(this);  valueList.add(this);	  	compilable	  [FE]  ClassCastException  	52	2	add
324	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  ValueList.add(this);  valueList.add(this);  [CE]  cannot  find  symbol  ValueList  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList.add(this);  ValueList.add(this);  valueList.add(this);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList.add(this);    ValueList.add(this);  valueList.add(this);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	52	None	add
325	[BUG]  [BUGGY]  if(value  instanceof  Value)  {  valueList.add((  Value)value);  }  else  {  valueList.add(option);  }  [CE]  cannot  find  symbol  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Value)  {  valueList.add((  Value)value);  }  else  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Value)  {  valueList.add((  Value)value);  }  else  {  valueList.add(option);  }	          valueList.add(value);    valueList.add(value);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
326	[BUG]  [BUGGY]  if(value  instanceof  Value)  {  valueList.add((  Value)value);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Value)  {  valueList.add((  Value)value);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Value)  {  valueList.add((  Value)value);  }  else  {  defaultValues.add(option);  }	          valueList.add(value);    valueList.add(value);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
327	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  valueList;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  valueList;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  valueList;	  	non-compiled	[CE]  not  a  statement	74	None	add
328	[BUG]  [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  values);  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  values);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  defaultValues.put(option,  values);  }	  valueList!=    null)    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	72	None	replace
329	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
330	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
331	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	78	2	add
332	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  ValueList.add(option);  valueList.add(option);  [CE]  cannot  find  symbol  ValueList  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  ValueList.add(option);  valueList.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList.add(option);    ValueList.add(option);  valueList.add(option);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	15	None	add
333	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }	          valueList.add(option);    valueList.add(option);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
334	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  Preconditions.checkNotNull(valueList);  }  [CE]  cannot  find  symbol  Preconditions  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  Preconditions.checkNotNull(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList.add(option);  }  else  {  Preconditions.checkNotNull(valueList);  }	          valueList.add(option);    valueList.add(option);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	16	None	replace
335	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.add(option);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	16	2	replace
336	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(option);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	16	2	replace
337	[BUG]  [BUGGY]  valueList!=  null)  {  values.add(option,  valueList);  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  values.add(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  values.add(option,  valueList);  }	  valueList!=    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
338	[BUG]  [BUGGY]  Value  value  =(Value)valueList.get(option);  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  Value  value  =(Value)valueList.get(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	Value  value  =(Value)valueList.get(option);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
339	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(option);  }  else  {  ComparisonFailure:  expected;  }	          valueList.add(option);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	18	None	replace
340	[BUG]  [BUGGY]  valueList!=  null)  {  valueList.put(option,  value);  }  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  valueList.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  valueList.put(option,  value);  }	  if(valueList!=    null)    {    values.put(option,    value);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
341	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  defaultValues.put(option,  value);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	defaultValues.put(option,  value);	  if(valueList!=    null)    {    defaultValues.put(option,    value);    }    else    {    defaultValues.add(option);    }    	compilable	  [FE]  ClassCastException  	14	2	replace
342	[BUG]  [BUGGY]  defaultValues.put(option,  value);  [FE]  ClassCastException  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  defaultValues.put(option,  value);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	defaultValues.put(option,  value);	  if(valueList!=    null)    {    defaultValues.put(option,    value);    }    else    {    defaultValues.add(option);    }    	compilable	  [FE]  ClassCastException  	14	2	replace
343	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  defaultValues;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  defaultValues;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  defaultValues;	  	non-compiled	[CE]  not  a  statement	83	None	add
344	[BUG]  [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  valueList;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  valueList;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  valueList;	  	non-compiled	[CE]  not  a  statement	83	None	add
345	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
346	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	40	2	add
347	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	40	None	add
348	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.add(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
349	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.add(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
350	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.add(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
351	[BUG]  [BUGGY]  if(value  instanceof  ComparisonFailure)  {  valueList.add(value);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  ComparisonFailure)  {  valueList.add(value);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  ComparisonFailure)  {  valueList.add(value);  }  else  {  ComparisonFailure:  expected;  }	          valueList.add(value);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	5	None	replace
352	[BUG]  [BUGGY]  if(value  instanceof  ComparisonFailure)  {  valueList.add(value);  }  else  {  comparisonFailure  =  expected;  }  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  ComparisonFailure)  {  valueList.add(value);  }  else  {  comparisonFailure  =  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  ComparisonFailure)  {  valueList.add(value);  }  else  {  comparisonFailure  =  expected;  }	          valueList.add(value);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
353	[BUG]  [BUGGY]  valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.add(option);  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.add(option);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList  ==  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.add(option);  }	  valueList!=    null)    {    defaultValues.put(option,    valueList);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
354	[BUG]  [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  values.add(option);  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  values.add(option);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  values.add(option);  }	  valueList!=    null)    {    defaultValues.put(option,    valueList);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
355	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
356	[BUG]  [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues  ==  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }	          valueList.add(this);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
357	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
358	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  valueList.addAll(valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.addAll(valueList);  }  else  {  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
359	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.addAll(valueList);  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
360	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList.addAll(valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.addAll(valueList);  valueList.addAll(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.addAll(valueList);  valueList.addAll(valueList);  }	          valueList.addAll(valueList);    valueList.addAll(valueList);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	47	2	replace
361	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	60	None	add
362	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	60	None	add
363	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
364	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
365	[BUG]  [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  Value  valueList  =  new  ArrayList();  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList  =  new  ArrayList();  Value  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList    =    new    ArrayList();    Value  valueList  =  new  ArrayList();	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
366	[BUG]  [BUGGY]  valueList  ==  null)  {  values.put(option,  value);  }  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  ==  null)  {  values.put(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList  ==  null)  {  values.put(option,  value);  }	  if(valueList    ==    null)    {    values.put(option,    value);    }    	non-compiled	[CE]  not  a  statement	24	None	replace
367	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.clear();  junit.framework.ComparisonFailure:  valueList.clear();  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.clear();  junit.framework.ComparisonFailure:  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.clear();  junit.framework.ComparisonFailure:  valueList.clear();  }	          valueList.clear();    junit.framework.ComparisonFailure:    valueList.clear();    	non-compiled	[CE]  not  a  statement	81	None	replace
368	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.clear();  }  else  {  ComparisonFailure:  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.clear();  }  else  {  ComparisonFailure:  valueList.clear();  }	          valueList.clear();    junit.framework.ComparisonFailure:    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	81	2	replace
369	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.clear();  }  else  {  ComparisonFailure:  valueList.clear();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.clear();  }  else  {  ComparisonFailure:  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.clear();  }  else  {  ComparisonFailure:  valueList.clear();  }	          valueList.clear();    junit.framework.ComparisonFailure:    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	81	2	replace
370	[BUG]  [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(defaultValues  ==  null)  {  valueList.add(option);  }  else  {  defaultValues.add(option);  }	          valueList.add(option);    junit.framework.ComparisonFailure:    defaultValues.add(option);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
371	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkNotNull(valueList);  }  [CE]  cannot  find  symbol  Preconditions  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkNotNull(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkNotNull(valueList);  }	          valueList.add(option);    valueList    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol  Preconditions	75	None	replace
372	[BUG]  [BUGGY]  if(option  instanceof  Comparison)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparison)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparison)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
373	[BUG]  [BUGGY]  if(option  instanceof  ComparisonFailure)  {  Comparable  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparisonFailure)  {  Comparable  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparisonFailure)  {  Comparable  value  =(ComparisonFailure)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
374	[BUG]  [BUGGY]  if(option  instanceof  Compiler)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Compiler)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Compiler)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
375	[BUG]  [BUGGY]  valueList.addAll(this.defaultSwitches.get(option);  [CE]  ')'  expected  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(this.defaultSwitches.get(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(this.defaultSwitches.get(option);	          valueList.addAll(valueList);    ValueList    valueList    =(ValueList)this.defaultSwitches.get(option);    	non-compiled	[CE]  ')'  expected	50	None	replace
376	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  else  {  ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  else  {  ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(this);  }  else  {  ComparisonFailure:  expected;  }	          valueList.add(this);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	55	None	replace
377	[BUG]  [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.get(option,  value);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  value);  }  if(valueList  ==  null)  {  values.get(option,  value);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList    ==    null)    {    values.put(option,    value);    }    if(valueList  ==  null)  {  values.get(option,  value);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	23	None	add
378	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	58	None	add
379	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	58	None	add
380	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  Preconditions.checkNotNull(valueList);  }  [CE]  cannot  find  symbol  Preconditions  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  Preconditions.checkNotNull(valueList);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  else  {  Preconditions.checkNotNull(valueList);  }	          valueList.add(this);    valueList.add(this);    	non-compiled	[CE]  cannot  find  symbol  Preconditions	53	None	replace
381	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	53	2	replace
382	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(this);  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	53	2	replace
383	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [CE]  cannot  find  symbol  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(this);  }  else  {  defaultValues.add(option);  }	          valueList.add(this);    valueList.add(this);    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
384	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.add(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.add(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  values.add(option,  valueList);  }	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    If(valueList    ==    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
385	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]                junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList  =  new  ArrayList();  }	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    If(valueList    ==    null)    {    values.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	45	2	replace
386	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]                junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList  =  new  ArrayList();  }	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    If(valueList    ==    null)    {    values.put(option,    valueList);    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	45	2	replace
387	[BUG]  [BUGGY]  if(option  instanceof  Option)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Option)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Option)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.get(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
388	[BUG]  [BUGGY]  if(value  instanceof  Option)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Option)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Option)  {  if(valueList!=  null)  {  values.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.get(option,    valueList);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
389	[BUG]  [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  defaultValues.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.get(option,    valueList);    }    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	39	None	replace
390	[BUG]  [BUGGY]  valueList.add(this);  expect  =  true;  [CE]  cannot  find  symbol  expect  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  expect  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  expect  =  true;	          valueList.add(this);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  cannot  find  symbol  expect	56	None	replace
391	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
392	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	add
393	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.add(null);    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	1	2	add
394	[BUG]  [BUGGY]  valueList.add(null);  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	1	2	add
395	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure:  defaultValues;	  	non-compiled	[CE]  not  a  statement	1	None	add
396	[BUG]  [BUGGY]  valueList.clear();  probabilityFailure:  expected  +  1;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  probabilityFailure:  expected  +  1;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  probabilityFailure:  expected  +  1;	          valueList.clear();    junit.framework.ComparisonFailure:    expected    +    1;    	non-compiled	[CE]  not  a  statement	33	None	replace
397	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  valueList.clear();  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList  ==  null)  {  valueList.clear();  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
398	[BUG]  [BUGGY]  if(valueList  ==  null)  {  valueList.clear();  valueList.clear();  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  valueList.clear();  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList  ==  null)  {  valueList.clear();  valueList.clear();  }	          valueList.clear();    valueList.clear();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	29	2	replace
399	[BUG]  [BUGGY]  valueList.add(value);  Value  value  =(Value)options.clone();  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  Value  value  =(Value)options.clone();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  Value  value  =(Value)options.clone();	          valueList.add(value);    Value    value    =(Value)option.clone();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
400	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  Value  valueList  =(Value)this.defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  Value  valueList  =(Value)this.defaultValues.get(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    Value  valueList  =(Value)this.defaultValues.get(option);	  	non-compiled	[CE]  cannot  find  symbol	28	None	add
401	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
402	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList  =  new  ArrayList();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
403	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  Lists.newArrayList();  [CE]  cannot  find  symbol  Lists  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  Lists.newArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList  =  Lists.newArrayList();	  	non-compiled	[CE]  cannot  find  symbol  Lists	46	None	add
404	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList  =  new  ArrayList(valueList.size());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
405	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList(valueList.size());  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList  =  new  ArrayList(valueList.size());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	add
406	[BUG]  [BUGGY]  valueList.clear();  expected.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected.framework.ComparisonFailure:  expected  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected.framework.ComparisonFailure:  expected	          valueList.clear();    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	31	None	replace
407	[BUG]  [BUGGY]  valueList.clear();  expected.framework.ComparisonFailure:  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected.framework.ComparisonFailure:  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected.framework.ComparisonFailure:	          valueList.clear();    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	31	None	replace
408	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
409	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	add
410	[BUG]  [BUGGY]  valueList.add(this);  defaultValues.add(value);  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  defaultValues.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  defaultValues.add(value);	          valueList.add(this);    junit.framework.ComparisonFailure:    defaultValues;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
411	[BUG]  [BUGGY]  valueList.add(this);  junit.framework.ComparisonFailure:  expected  ||  valueList.size()  ==  2;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this);  junit.framework.ComparisonFailure:  expected  ||  valueList.size()  ==  2;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this);  junit.framework.ComparisonFailure:  expected  ||  valueList.size()  ==  2;	          valueList.add(this);    junit.framework.ComparisonFailure:    expected    ||    valueList.size()    ==    1;    	non-compiled	[CE]  not  a  statement	57	None	replace
412	[BUG]  [BUGGY]  valueList!=  null)  {  values.put(option,  value);  }  else  {  defaultValues.add(option);  }  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  values.put(option,  value);  }  else  {  defaultValues.add(option);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  values.put(option,  value);  }  else  {  defaultValues.add(option);  }	  if(valueList!=    null)    {    values.put(option,    value);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	13	None	replace
413	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  values.get(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=    null)    {    values.get(option,    valueList);    }    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	77	None	replace
414	[BUG]  [BUGGY]  valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.add(option);  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.add(option);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.add(option);  }	  valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.add(option);    }    	non-compiled	[CE]  not  a  statement	71	None	replace
415	[BUG]  [BUGGY]  valueList!=  null  &&  values.contains(option);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null  &&  values.contains(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null  &&  values.contains(option);	  valueList!=    null    &&    defaultValues.contains(option);    	non-compiled	[CE]  not  a  statement	90	None	replace
416	[BUG]  [BUGGY]  valueList!=  null  &&  options.contains(option);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null  &&  options.contains(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null  &&  options.contains(option);	  valueList!=    null    &&    defaultValues.contains(option);    	non-compiled	[CE]  not  a  statement	90	None	replace
417	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	42	None	add
418	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	42	None	add
419	[BUG]  [BUGGY]  valueList.clear();  compiler.ComparisonFailure:  expected  =  true;  [CE]  not  a  statement  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  compiler.ComparisonFailure:  expected  =  true;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  compiler.ComparisonFailure:  expected  =  true;	          valueList.clear();    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  not  a  statement	32	None	replace
420	[BUG]  [BUGGY]  if(option  instanceof  Comparison)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparison)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparison)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.getClass()!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
421	[BUG]  [BUGGY]  if(option  instanceof  ComparisonFailure)  {  Comparable  value  =(ComparisonFailure)option;  if(value.getClass()!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  ComparisonFailure)  {  Comparable  value  =(ComparisonFailure)option;  if(value.getClass()!=  null)  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  ComparisonFailure)  {  Comparable  value  =(ComparisonFailure)option;  if(value.getClass()!=  null)  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.getClass()!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
422	[BUG]  [BUGGY]  valueList.clear();  expected.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected.framework.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected.framework.ComparisonFailure:  expected;	          valueList.clear();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	30	None	replace
423	[BUG]  [BUGGY]  valueList.clear();  expected.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  expected.ComparisonFailure:  expected;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  expected.ComparisonFailure:  expected;	          valueList.clear();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	30	None	replace
424	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  OptionException  	3	2	add
425	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  valueList.add(value);  valueList.add(value);  }  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  OptionException  	3	2	add
426	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  ValueList.add(value);  valueList.add(value);  [CE]  cannot  find  symbol  ValueList  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  ValueList.add(value);  valueList.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    ValueList.add(value);  valueList.add(value);	  	non-compiled	[CE]  cannot  find  symbol  ValueList	3	None	add
427	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	3	2	add
428	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(value);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	3	2	add
429	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(option);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	3	2	add
430	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(option);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(valueList!=  null)  {  valueList  =  new  ArrayList();  }  else  {  valueList.add(value);  valueList.add(option);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	3	2	add
431	[BUG]  [BUGGY]  if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  Comparable)  {  ComparisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
432	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(valueList);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  defaultValues.add(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  defaultValues.add(valueList);	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues.addAll(valueList);    	non-compiled	[CE]  not  a  statement	93	None	replace
433	[BUG]  [BUGGY]  valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.add(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	80	None	replace
434	[BUG]  [BUGGY]  valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.add(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	80	None	replace
435	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkState(valueList.isEmpty());  }  [CE]  cannot  find  symbol  Preconditions  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkState(valueList.isEmpty());  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(option);  valueList  =  new  ArrayList();  }  else  {  Preconditions.checkState(valueList.isEmpty());  }	          valueList.add(option);    valueList    =    new    ArrayList();    	non-compiled	[CE]  cannot  find  symbol  Preconditions	75	None	replace
436	[BUG]  [BUGGY]  NeighborValue  <  Value>  value  =  defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  NeighborValue  <  Value>  value  =  defaultValues.get(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	NeighborValue  <  Value>  value  =  defaultValues.get(option);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
437	[BUG]  [BUGGY]  valueList.addAll(defaultSwitches);  [CE]  no  suitable  method  found  for  addAll(Map)  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(defaultSwitches);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(defaultSwitches);	  valueList.addAll(defaultValues);    	non-compiled	[CE]  no  suitable  method  found  for  addAll(Map)	27	None	replace
438	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values	  	non-compiled	[CE]  ';'  expected	42	None	add
439	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
440	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	42	2	add
441	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	42	None	add
442	[BUG]  [BUGGY]  if(option  instanceof  CompararisonFailure)  {  CompararisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(option  instanceof  CompararisonFailure)  {  CompararisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(option  instanceof  CompararisonFailure)  {  CompararisonFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  addValue(value);  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    addValue(value);    }    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
443	[BUG]  [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  new  ArrayList();  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList  =  new  ArrayList();  junit.framework.ComparisonFailure:  new  ArrayList();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList    =    new    ArrayList();    junit.framework.ComparisonFailure:  new  ArrayList();	  	non-compiled	[CE]  not  a  statement	74	None	add
444	[BUG]  [BUGGY]  if(value  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.getClass()!=  null)  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.getClass()!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
445	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values	  	non-compiled	[CE]  ';'  expected	40	None	add
446	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	40	2	add
447	[BUG]  [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList        ==        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	40	2	add
448	[BUG]  [BUGGY]  ValueUtils.checkState(valueList.size()  >  0);  [CE]  cannot  find  symbol  ValueUtils  [FE]            junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  ValueUtils.checkState(valueList.size()  >  0);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	ValueUtils.checkState(valueList.size()  >  0);	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList    >=    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  ValueUtils	44	None	replace
449	[BUG]  [BUGGY]  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  values.get(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.get(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	38	None	replace
450	[BUG]  [BUGGY]  ValueUtils.addValue(value,  junit.framework.ComparisonFailure);  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  ValueUtils.addValue(value,  junit.framework.ComparisonFailure);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	ValueUtils.addValue(value,  junit.framework.ComparisonFailure);	          valueList.add(value);    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  package  junit  does  not  exist	6	None	replace
451	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
452	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	36	None	add
453	[BUG]  [BUGGY]  valueList.addAll(valueList);  defaultValues.putAll(valueList);  [CE]  method  putAll  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(valueList);  defaultValues.putAll(valueList);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(valueList);  defaultValues.putAll(valueList);	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues;    	non-compiled	[CE]  method  putAll  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	95	None	replace
454	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(value);  }  [CE]  package  junit  does  not  exist  [FE]          junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(value);  }	          valueList.add(value);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  package  junit  does  not  exist	5	None	replace
455	[BUG]  [BUGGY]  valueList  =(ValueList)this.defaultSwitches.get(option);  [CE]  cannot  find  symbol  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList  =(ValueList)this.defaultSwitches.get(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList  =(ValueList)this.defaultSwitches.get(option);	          valueList.addAll(valueList);    ValueList    valueList    =(ValueList)this.defaultSwitches.get(option);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
456	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  junit.framework.ComparisonFailure:  valueList.clear();  }  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  junit.framework.ComparisonFailure:  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.clear();  junit.framework.ComparisonFailure:  valueList.clear();  }	          valueList.clear();    junit.framework.ComparisonFailure:    valueList.clear();    	non-compiled	[CE]  not  a  statement	81	None	replace
457	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  valueList.add((  Argument)value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  valueList.add((  Argument)value);  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  ClassCastException  	4	2	replace
458	[BUG]  [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  valueList.add((  Argument)value);  }  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  valueList.add((  Argument)value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  valueList.add((  Argument)value);  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  ClassCastException  	4	2	replace
459	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  IllegalArgumentException  	4	2	replace
460	[BUG]  [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Argument)  {  valueList.add((  Argument)value);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(value);    valueList.add(value);    	compilable	  [FE]  IllegalArgumentException  	4	2	replace
461	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  [CE]  cannot  find  symbol  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
462	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [CE]  cannot  find  symbol  [FE]      OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  defaultValues);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
463	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  option);  }  [CE]  cannot  find  symbol  [FE]        OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  option);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
464	[BUG]  [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }  [CE]  cannot  find  symbol  [FE]          OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(value);    valueList.add(value);  if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(value);        valueList.add(value);    if(value  instanceof  Value)  {  valueList.add(value);  valueList.add(value);  }  else  {  defaultValues.put(option,  null);  }	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
465	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected,  valueList  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  junit.framework.ComparisonFailure:  expected,  valueList  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	junit.framework.ComparisonFailure:  expected,  valueList	  junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  not  a  statement	9	None	replace
466	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.remove(option);  valueList.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(option);        valueList.add(option);    valueList.remove(option);  valueList.add(option);	  	compilable	  [FE]  OptionException  	15	2	add
467	[BUG]  [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.remove(option);  valueList.add(option);  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(option);    valueList.add(option);  valueList.remove(option);  valueList.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(option);        valueList.add(option);    valueList.remove(option);  valueList.add(option);	  	compilable	  [FE]  OptionException  	15	2	add
468	[BUG]  [BUGGY]  ValueUtils.setValue(value,  valueList);  [CE]  cannot  find  symbol  ValueUtils  [FE]              junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  ValueUtils.setValue(value,  valueList);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	ValueUtils.setValue(value,  valueList);	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    If(valueList    ==    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  ValueUtils	45	None	replace
469	[BUG]  [BUGGY]  ValueUtils.setValue(value,  option);  [CE]  cannot  find  symbol  ValueUtils  [FE]                junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  ValueUtils.setValue(value,  option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	ValueUtils.setValue(value,  option);	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    If(valueList    ==    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol  ValueUtils	45	None	replace
470	[BUG]  [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList  <  Value>(valueList.size());  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.addAll(valueList);    valueList.addAll(valueList);  valueList  =  new  ArrayList  <  Value>(valueList.size());  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.addAll(valueList);        valueList.addAll(valueList);    valueList  =  new  ArrayList  <  Value>(valueList.size());	  	non-compiled	[CE]  cannot  find  symbol	46	None	add
471	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	58	None	add
472	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values  [CE]  ';'  expected  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values	  	non-compiled	[CE]  ';'  expected	58	None	add
473	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
474	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	add
475	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.add(this);        valueList.add(this);    valueList.add(this);	  	compilable	  [FE]  ClassCastException  	52	2	add
476	[BUG]  [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  [FE]  ClassCastException  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.add(this);    valueList.add(this);  valueList.add(this);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.add(this);        valueList.add(this);    valueList.add(this);	  	compilable	  [FE]  ClassCastException  	52	2	add
477	[BUG]  [BUGGY]  NeighborValue  <  Value>  valueList  =  defaultValues.get(option);  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  NeighborValue  <  Value>  valueList  =  defaultValues.get(option);  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	NeighborValue  <  Value>  valueList  =  defaultValues.get(option);	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
478	[BUG]  [BUGGY]  valueList!=  null)  {  values.put(option,  new  Object[]  {  value  }  );  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList!=  null)  {  values.put(option,  new  Object[]  {  value  }  );  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList!=  null)  {  values.put(option,  new  Object[]  {  value  }  );	  valueList!=    null)    {    values.put(option,    valueList);    }    	non-compiled	[CE]  not  a  statement	73	None	replace
479	[BUG]  [BUGGY]  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList  ==  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.get(option,    valueList);    }    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	39	None	replace
480	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	                valueList.clear();        valueList.clear();    valueList.clear();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	add
481	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    valueList.clear();	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	28	2	add
482	[BUG]  [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  valuesList.clear();  [CE]  cannot  find  symbol  valuesList  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]          valueList.clear();    valueList.clear();  valueList.clear();  valuesList.clear();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	                valueList.clear();        valueList.clear();    valueList.clear();  valuesList.clear();	  	non-compiled	[CE]  cannot  find  symbol  valuesList	28	None	add
483	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.put(option,  value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.clear();  defaultValues.put(option,  value);	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues;    	compilable	  [FE]  ClassCastException  	82	2	replace
484	[BUG]  [BUGGY]  valueList.clear();  defaultValues.put(option,  value);  [FE]  ClassCastException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.clear();  defaultValues.put(option,  value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.clear();  defaultValues.put(option,  value);	          valueList.clear();    junit.framework.ComparisonFailure:    defaultValues;    	compilable	  [FE]  ClassCastException  	82	2	replace
485	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  defaultValues);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    defaultValues);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
486	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [CE]  cannot  find  symbol  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.add(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }	  	non-compiled	[CE]  cannot  find  symbol	34	None	add
487	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        else        {        defaultValues.put(option,        valueList);        }        if(valueList!=    null)    {    values.put(option,    valueList);    }    else    {    defaultValues.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  else  {  defaultValues.get(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	34	None	add
488	[BUG]  [BUGGY]  if(value  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)option;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
489	[BUG]  [BUGGY]  if(value  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)value;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)value;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Comparable)  {  ComparableFailure  value  =(ComparisonFailure)value;  if(value.equals(value))  {  throw  new  IllegalArgumentException( " ");  }	          valueList.add(option);    if(option    instanceof    ComparisonFailure)    {    ComparisonFailure    value    =(ComparisonFailure)option;    if(value.equals(value))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
490	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this.defaultValues);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	valueList.add(this.defaultValues);	  valueList.addAll(this.defaultValues);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	26	2	replace
491	[BUG]  [BUGGY]  valueList.add(this.defaultValues);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(this.defaultValues);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(this.defaultValues);	  valueList.addAll(this.defaultValues);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	26	2	replace
492	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(this);  }  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(this);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(this);  }	          valueList.add(this);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  package  junit  does  not  exist	55	None	replace
493	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure!=  expected)  {  valueList.add(option);  }  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(junit.framework.ComparisonFailure!=  expected)  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(junit.framework.ComparisonFailure!=  expected)  {  valueList.add(option);  }	          valueList.add(option);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  package  junit  does  not  exist	18	None	replace
494	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(option);  }  [CE]  package  junit  does  not  exist  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(junit.framework.ComparisonFailure!=  null)  {  valueList.add(option);  }	          valueList.add(option);    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  package  junit  does  not  exist	18	None	replace
495	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  >  0)  {  valueList.add(option);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	16	2	replace
496	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.add(option);  }	          valueList.add(option);    valueList.add(option);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	16	2	replace
497	[BUG]  [BUGGY]  if(value  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(value  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(value  instanceof  Comparable)  {  Comparable  value  =(Comparison)option;  if(value.equals(value))  {  return;  }	          valueList.add(option);    if(option    instanceof    Comparable)    {    Comparable    value    =(Comparison)option;    if(value.equals(value))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
498	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure)  {  valueList.add(option);  }  [CE]  package  junit  does  not  exist  [FE]          junit.framework.ComparisonFailure:  expected:<[[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(junit.framework.ComparisonFailure)  {  valueList.add(option);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(junit.framework.ComparisonFailure)  {  valueList.add(option);  }	          valueList.add(option);    junit.framework.ComparisonFailure:    expected    	non-compiled	[CE]  package  junit  does  not  exist	17	None	replace
499	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure:  expected  =  true)  {  valueList.clear();  }  [CE]  ')'  expected  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(junit.framework.ComparisonFailure:  expected  =  true)  {  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(junit.framework.ComparisonFailure:  expected  =  true)  {  valueList.clear();  }	          valueList.clear();    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  ')'  expected	32	None	replace
500	[BUG]  [BUGGY]  if(valueList  ==  null)  {  values.get(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        junit.framework.ComparisonFailure:  expected:<[1[]      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList  ==  null)  {  values.get(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList  ==  null)  {  values.get(option,  valueList);  }	  if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList    ==    null)    {    values.get(option,    valueList);    }    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	67	None	replace
501	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
502	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	60	2	add
503	[BUG]  [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=    null)    {    values.put(option,    valueList);    }    if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  [BUGGY]      }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=        null)        {        values.put(option,        valueList);        }        if(valueList    ==    null)    {    values.put(option,    valueList);    }    if(valueList!=  null)  {  values.get(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }  if(valueList  ==  null)  {  values.put(option,  valueList);  }	  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	60	None	add
504	[BUG]  [BUGGY]  valueList.add(value);  Value  value  =(Value)valueList.clone();  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  Value  value  =(Value)valueList.clone();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  Value  value  =(Value)valueList.clone();	          valueList.add(value);    Value    value    =(Value)option.clone();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
505	[BUG]  [BUGGY]  valueList.add(value);  Value  value  =(Value)this.valueList.clone();  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  Value  value  =(Value)this.valueList.clone();  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  Value  value  =(Value)this.valueList.clone();	          valueList.add(value);    Value    value    =(Value)option.clone();    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
506	[BUG]  [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  junit.framework.ComparisonFailure:  expected;  }  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList.size()  >  0)  {  valueList.clear();  junit.framework.ComparisonFailure:  expected;  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  >  0)  {  valueList.clear();  junit.framework.ComparisonFailure:  expected;  }	          valueList.clear();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  not  a  statement	30	None	replace
507	[BUG]  [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.clear();  }  [CE]  package  junit  does  not  exist  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(junit.framework.ComparisonFailure!=  null)  {  valueList.clear();  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(junit.framework.ComparisonFailure!=  null)  {  valueList.clear();  }	          valueList.clear();    junit.framework.ComparisonFailure:    expected;    	non-compiled	[CE]  package  junit  does  not  exist	30	None	replace
508	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList!=  null)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	53	2	replace
509	[BUG]  [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  [FE]    OptionException    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  if(valueList!=  null)  {  valueList.add(this);  }  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList!=  null)  {  valueList.add(this);  }	          valueList.add(this);    valueList.add(this);    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  	53	2	replace
510	[BUG]  [BUGGY]  valueList.add(value);  junit.framework.ComparisonFailure:  expected  =  false;  [CE]  not  a  statement  [FE]                junit.framework.ComparisonFailure:  expected:<[1      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(value);  junit.framework.ComparisonFailure:  expected  =  false;  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(value);  junit.framework.ComparisonFailure:  expected  =  false;	          valueList.add(value);    junit.framework.ComparisonFailure:    expected    =    true;    	non-compiled	[CE]  not  a  statement	8	None	replace
511	[BUG]  [BUGGY]  valueList.addAll(value);  junit.framework.ComparisonFailure:  defaultValues.addAll(option);  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.addAll(value);  junit.framework.ComparisonFailure:  defaultValues.addAll(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.addAll(value);  junit.framework.ComparisonFailure:  defaultValues.addAll(option);	          valueList.addAll(valueList);    junit.framework.ComparisonFailure:    defaultValues.addAll(option);    	non-compiled	[CE]  not  a  statement	94	None	replace
512	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues.add(null);  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues.add(null);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure:  defaultValues.add(null);	  	non-compiled	[CE]  not  a  statement	1	None	add
513	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues.add(option);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues.add(option);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure:  defaultValues.add(option);	  	non-compiled	[CE]  not  a  statement	1	None	add
514	[BUG]  [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues.add(value);  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[]    [CONTEXT]      public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();      [BUGGY]  valueList.add(null);  junit.framework.ComparisonFailure:  defaultValues.add(value);  [BUGGY]      values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(null);    junit.framework.ComparisonFailure:  defaultValues.add(value);	  	non-compiled	[CE]  not  a  statement	1	None	add
