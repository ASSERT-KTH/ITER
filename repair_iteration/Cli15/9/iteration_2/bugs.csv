bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(trigger))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	7	2	replace
2	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(trigger))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	7	2	replace
3	[BUG]  [BUGGY]  ((  WriteableCommandLineImpl)i).looksLikeOption(trigger);  [CE]  cannot  find  symbol  prefix  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  ((  WriteableCommandLineImpl)i).looksLikeOption(trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	((  WriteableCommandLineImpl)i).looksLikeOption(trigger);	      	non-compiled	[CE]  cannot  find  symbol  prefix	3	None	replace
4	[BUG]  [BUGGY]  if(i.hasNext())  {  final  String  prefix  =  i.next();  if(prefix.equals(trigger))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  String  prefix  =  i.next();  if(prefix.equals(trigger))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	if(i.hasNext())  {  final  String  prefix  =  i.next();  if(prefix.equals(trigger))  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  if(i.hasNext())  {  final  String  prefix  =  i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  String  prefix  =  i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	if(i.hasNext())  {  final  String  prefix  =  i.next();  if(trigger.startsWith(prefix))  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  if(i.hasNext())  {  final  String  prefix  =  i.next();  if(prefix.startsWith(trigger))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  String  prefix  =  i.next();  if(prefix.startsWith(trigger))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	if(i.hasNext())  {  final  String  prefix  =  i.next();  if(prefix.startsWith(trigger))  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  [FE]  OptionException  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  OptionException  	8	2	replace
8	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }  [FE]  OptionException  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  OptionException  	8	2	replace
9	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
10	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
11	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith( "_ "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(prefix.startsWith( "_ "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
12	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith( "_ "))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith( "_ "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(prefix.startsWith( "_ "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
13	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  false;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  false;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	14	2	replace
14	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  false;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  false;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	14	2	replace
15	[BUG]  [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;	  	non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	9	None	add
16	[BUG]  [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  Final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  [CE]  ';'  expected  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  Final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    Final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;	  	non-compiled	[CE]  ';'  expected	9	None	add
17	[BUG]  [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger);  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger);	  	non-compiled	[CE]  ';'  expected	9	None	add
18	[BUG]  [BUGGY]  final  String  prefix  =  i.substring(0,  i.next());  [CE]  cannot  find  symbol  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.substring(0,  i.next());  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  i.substring(0,  i.next());	  final    String    prefix    =    trigger.substring(0,    i.next());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
19	[BUG]  [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next(),  values.length);  [CE]  cannot  find  symbol  length  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next(),  values.length);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  trigger.substring(0,  i.next(),  values.length);	  final    String    prefix    =    trigger.substring(0,    i.next());    	non-compiled	[CE]  cannot  find  symbol  length	2	None	replace
20	[BUG]  [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next()  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next()  +  1);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  trigger.substring(0,  i.next()  +  1);	  final    String    prefix    =    trigger.substring(0,    i.next());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	2	None	replace
21	[BUG]  [BUGGY]  final  String  prefix  =  i.substring(0,  trigger.next());  [CE]  cannot  find  symbol  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.substring(0,  trigger.next());  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  i.substring(0,  trigger.next());	  final    String    prefix    =    trigger.substring(0,    i.next());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
22	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + ", ";  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + ", ";	  final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	replace
23	[BUG]  [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + ", ";  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + ", ";  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + ", ";	  final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	replace
24	[BUG]  [BUGGY]  static  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  static  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	static  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger;	  final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	        ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);	  	compilable	  [FE]  ClassCastException  	11	2	add
26	[BUG]  [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	        ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);	  	compilable	  [FE]  ClassCastException  	11	2	add
27	[BUG]  [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  (  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  [CE]  not  a  statement  [FE]      ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  (  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	        ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    (  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);	  	non-compiled	[CE]  not  a  statement	11	None	add
28	[BUG]  [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.get()).looksLikeOption(trigger);  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.get()).looksLikeOption(trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	        ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    ((  WriteableCommandLineImpl)i.get()).looksLikeOption(trigger);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
29	[BUG]  [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.pre()).looksLikeOption(trigger);  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.pre()).looksLikeOption(trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	        ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    ((  WriteableCommandLineImpl)i.pre()).looksLikeOption(trigger);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
30	[BUG]  [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(prefix);  [CE]  cannot  find  symbol  prefix  [FE]    ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(prefix);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	((  WriteableCommandLineImpl)i.next()).looksLikeOption(prefix);	      ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    	non-compiled	[CE]  cannot  find  symbol  prefix	12	None	replace
31	[BUG]  [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(prefix,  trigger);  [CE]  cannot  find  symbol  prefix  [FE]      ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(prefix,  trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	((  WriteableCommandLineImpl)i.next()).looksLikeOption(prefix,  trigger);	      ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    	non-compiled	[CE]  cannot  find  symbol  prefix	12	None	replace
32	[BUG]  [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger,  values);  [CE]  method  looksLikeOption  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger,  values);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger,  values);	      ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    	non-compiled	[CE]  method  looksLikeOption  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	12	None	replace
33	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  false;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  false;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(trigger.startsWith(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
34	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  false;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  false;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(trigger.startsWith(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
35	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(trigger.startsWith(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
36	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(trigger.startsWith(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
37	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	13	2	replace
38	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(prefix.equals( "   "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	13	2	replace
39	[BUG]  [BUGGY]  final  String  prefix  =  i.next().prefix;  [CE]  cannot  find  symbol  prefix  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.next().prefix;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  i.next().prefix;	  final    String    prefix    =    i.next();    	non-compiled	[CE]  cannot  find  symbol  prefix	1	None	replace
40	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.next()  +  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =  i.next()  +  trigger;	  final    String    prefix    =    i.next();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	1	2	replace
41	[BUG]  [BUGGY]  final  String  prefix  =  i.next()  +  trigger;  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.next()  +  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  i.next()  +  trigger;	  final    String    prefix    =    i.next();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	1	2	replace
42	[BUG]  [BUGGY]  final  String  prefix  =  trigger.next();  [CE]  cannot  find  symbol  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  trigger.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  trigger.next();	  final    String    prefix    =    i.next();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
43	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.next().toString();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =  i.next().toString();	  final    String    prefix    =    i.next();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	1	2	replace
44	[BUG]  [BUGGY]  final  String  prefix  =  i.next().toString();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.next().toString();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  i.next().toString();	  final    String    prefix    =    i.next();    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	1	2	replace
45	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + "] ";  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + "] ";	  final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	replace
46	[BUG]  [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + "] ";  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + "] ";  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(i.hasNext())?(String)i.next()  :  trigger  + "] ";	  final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	10	2	replace
47	[BUG]  [BUGGY]  final  Iterator  i  =  prefixes.iterator();  [CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  Iterator  i  =  prefixes.iterator();  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  Iterator  i  =  prefixes.iterator();	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(trigger.startsWith(prefix))    {    return    false;    }    	non-compiled	[CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)	6	None	replace
48	[BUG]  [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(this.defaultValues);  [CE]  method  looksLikeOption  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(this.defaultValues);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	((  WriteableCommandLineImpl)i.next()).looksLikeOption(this.defaultValues);	      ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    	non-compiled	[CE]  method  looksLikeOption  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	12	None	replace
49	[BUG]  [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next()  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next()  -  1);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  trigger.substring(0,  i.next()  -  1);	  final    String    prefix    =    trigger.substring(0,    i.next());    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	2	None	replace
50	[BUG]  [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next(),  defaultValues);  [CE]  no  suitable  method  found  for  substring(int,Object,Map)  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next(),  defaultValues);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  trigger.substring(0,  i.next(),  defaultValues);	  final    String    prefix    =    trigger.substring(0,    i.next());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,Object,Map)	2	None	replace
51	[BUG]  [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next(),  values);  [CE]  no  suitable  method  found  for  substring(int,Object,Map)  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  trigger.substring(0,  i.next(),  values);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  trigger.substring(0,  i.next(),  values);	  final    String    prefix    =    trigger.substring(0,    i.next());    	non-compiled	[CE]  no  suitable  method  found  for  substring(int,Object,Map)	2	None	replace
52	[BUG]  [BUGGY]  [FE]  OptionException  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith( " "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(String)i.next();  if(prefix.startsWith( " "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  OptionException  	8	2	replace
53	[BUG]  [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith( " "))  {  return  true;  }  [FE]  OptionException  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(String)i.next();  if(prefix.startsWith( " "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.next();  if(prefix.startsWith( " "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	compilable	  [FE]  OptionException  	8	2	replace
54	[BUG]  [BUGGY]  String  prefix  =  i.next();  [CE]  incompatible  types  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  String  prefix  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	String  prefix  =  i.next();	      	non-compiled	[CE]  incompatible  types	3	None	replace
55	[BUG]  [BUGGY]  ((  WriteableCommandLineImpl)i).symbols.add(trigger);  [CE]  cannot  find  symbol  symbols  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  ((  WriteableCommandLineImpl)i).symbols.add(trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	((  WriteableCommandLineImpl)i).symbols.add(trigger);	      	non-compiled	[CE]  cannot  find  symbol  symbols	3	None	replace
56	[BUG]  [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.previous()).looksLikeOption(trigger);  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]      ((  WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);  ((  WriteableCommandLineImpl)i.previous()).looksLikeOption(trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	        ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    ((  WriteableCommandLineImpl)i.previous()).looksLikeOption(trigger);	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
57	[BUG]  [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "* "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "* "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "* "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
58	[BUG]  [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "- "))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "- "))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "- "))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
59	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.next()  ==  null)?(String)i.next()  :  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	final  String  prefix  =(i.next()  ==  null)?(String)i.next()  :  trigger;	  final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    	compilable	  [FE]  OptionException  	10	2	replace
60	[BUG]  [BUGGY]  final  String  prefix  =(i.next()  ==  null)?(String)i.next()  :  trigger;  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =(i.next()  ==  null)?(String)i.next()  :  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(i.next()  ==  null)?(String)i.next()  :  trigger;	  final    String    prefix    =(i.hasNext())?(String)i.next()    :    trigger;    	compilable	  [FE]  OptionException  	10	2	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();)  {  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [CE]  ')'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  Preconditions.checkState(i.hasNext();)  {  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	Preconditions.checkState(i.hasNext();)  {  final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(trigger.startsWith(prefix))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	4	None	replace
62	[BUG]  [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(this,  trigger);  [CE]  method  looksLikeOption  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  ((  WriteableCommandLineImpl)i.next()).looksLikeOption(this,  trigger);  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	((  WriteableCommandLineImpl)i.next()).looksLikeOption(this,  trigger);	      ((    WriteableCommandLineImpl)i.next()).looksLikeOption(trigger);    	non-compiled	[CE]  method  looksLikeOption  in  class  WriteableCommandLineImpl  cannot  be  applied  to  given  types;	12	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();)  {  final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }  [CE]  ')'  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  Preconditions.checkState(i.hasNext();)  {  final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	Preconditions.checkState(i.hasNext();)  {  final  String  prefix  =(String)i.next();  if(prefix.startsWith(prefix))  {  return  true;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.startsWith(trigger))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
64	[BUG]  [BUGGY]  final  String  prefix  =  i.next().toLowerCase();  [CE]  cannot  find  symbol  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  final  String  prefix  =  i.next().toLowerCase();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =  i.next().toLowerCase();	  final    String    prefix    =    i.next();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
65	[BUG]  [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "* "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "* "))  {  return  false;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "* "))  {  return  false;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
66	[BUG]  [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "- "))  {  return  false;  }  [BUGGY]    final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	if(i.hasNext())  {  final  String  prefix  =(String)i.next();  if(prefix.equals( "- "))  {  return  false;  }	      if(i.hasNext())    {    final    String    prefix    =(String)i.next();    if(prefix.equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
