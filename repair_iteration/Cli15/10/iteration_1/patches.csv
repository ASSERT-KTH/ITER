bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "- ")||  prefix.startsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	7	2	replace
2	[BUG]  [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- ")||  prefix.startsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	7	2	replace
3	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	7	2	replace
4	[BUG]  [BUGGY]  if(prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	7	2	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.startsWith( "_ "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "_ "))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	7	2	replace
6	[BUG]  [BUGGY]  if(prefix.startsWith( "_ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.startsWith( "_ "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "_ "))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	7	2	replace
7	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "* ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
8	[BUG]  [BUGGY]  if(prefix.equals( "* ")||  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "* ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
9	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "   ")&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "   ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
10	[BUG]  [BUGGY]  if(prefix.equals( "   ")&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "   ")&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "   ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
11	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	23	2	replace
12	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	23	2	replace
13	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(trigger);  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(trigger);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Sets.newHashSet(trigger);	      Set    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix);  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newHashSet(prefix);	      Set    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues);	      Set    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix))  {  if(!trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix))  {  if(!trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix))    {    if(!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
17	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix))  {  If(!trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix))  {  If(!trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	8	None	add
18	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix))  {  if(!Trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix))  {  if(!Trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
19	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix))  {  if(!trigger.endsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix))  {  if(!trigger.endsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix))    {    if(!trigger.endsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
20	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.hasNext());  [CE]  illegal  start  of  type  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(prefix.hasNext());  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.hasNext());	      Preconditions.checkArgument(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkArgument(trigger.hasNext());  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(trigger.hasNext());  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(trigger.hasNext());	      Preconditions.checkArgument(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext());  [CE]  illegal  start  of  type  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(prefix.hasNext());  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext());	      Preconditions.checkState(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkState(trigger.hasNext());  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(trigger.hasNext());  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(trigger.hasNext());	      Preconditions.checkState(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();  [CE]  ')'  expected  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(i.hasNext();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();	      Preconditions.checkState(i.hasNext());    	non-compiled	[CE]  ')'  expected	1	None	replace
25	[BUG]  [BUGGY]  if(prefix!=  null  ||!prefix.equals( "   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  ||!prefix.equals( "   "))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||!prefix.equals( "   "))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
26	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* "))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null)  {  if(!prefix.equals( "* "))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	16	2	replace
27	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* "))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* "))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  if(!prefix.equals( "* "))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	16	2	replace
28	[BUG]  [BUGGY]  Preconditions.checkNotNull(trigger);  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkNotNull(trigger);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkNotNull(trigger);	      Preconditions.checkNotNull(prefix);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  Preconditions.checkArgument(trigger.startsWith(prefix));  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(trigger.startsWith(prefix));  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(trigger.startsWith(prefix));	      Preconditions.checkNotNull(prefix);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  List  <  String>  values  =  Sets.newHashSet();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newHashSet();	      Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
31	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  List  <  String>  values  =  Lists.newHashSet();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newHashSet();	      Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  ArrayList  <  String>  values  =  Arrays.newHashSet();  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  ArrayList  <  String>  values  =  Arrays.newHashSet();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	ArrayList  <  String>  values  =  Arrays.newHashSet();	      Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
33	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  OptionException  	17	2	replace
34	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  OptionException  	17	2	replace
35	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	17	2	replace
36	[BUG]  [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	17	2	replace
37	[BUG]  [BUGGY]  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefixes.contains(prefix))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
38	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext());  prefix  =  i.next();  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(prefix.hasNext());  prefix  =  i.next();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext());  prefix  =  i.next();	      Preconditions.checkState(i.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext());  prefix  =  trigger.next();  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(i.hasNext());  prefix  =  trigger.next();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext());  prefix  =  trigger.next();	      Preconditions.checkState(i.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
40	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext());  prefix  =  trigger.next();  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(prefix.hasNext());  prefix  =  trigger.next();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext());  prefix  =  trigger.next();	      Preconditions.checkState(i.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
41	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    if(trigger  ==  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
42	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    if(trigger!=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
43	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    If(trigger  ==  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	14	None	add
44	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger  >=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger  >=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    if(trigger  >=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
45	[BUG]  [BUGGY]  [FE]  OptionException  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	19	2	replace
46	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [FE]  OptionException  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	19	2	replace
47	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	19	2	replace
48	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	19	2	replace
49	[BUG]  [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger!=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
50	[BUG]  [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger  ==  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
51	[BUG]  [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&    trigger.startsWith(prefix))    {    If(trigger!=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	12	None	add
52	[BUG]  [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  if(trigger  >=  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  if(trigger  >=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger  >=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
53	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	11	2	replace
54	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	11	2	replace
55	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	11	2	replace
56	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	11	2	replace
57	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	11	2	replace
58	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	11	2	replace
59	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
60	[BUG]  [BUGGY]  if(!trigger.equals(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
61	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
62	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
63	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]        OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	9	None	replace
64	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)||  trigger.startsWith( "- "))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
65	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( "- "))  {  [FE]  OptionException  [FE]          OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||  trigger.startsWith( "- "))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
66	[BUG]  [BUGGY]  Preconditions.checkArgument(trigger!=  null);  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(trigger!=  null);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(trigger!=  null);	      Preconditions.checkArgument(prefix!=    null);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
67	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix  ==  null);  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(prefix  ==  null);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix  ==  null);	      Preconditions.checkArgument(prefix!=    null);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkArgument(i.next()!=  null);  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(i.next()!=  null);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.next()!=  null);	      Preconditions.checkArgument(prefix!=    null);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
69	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
70	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
71	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	15	2	replace
72	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	15	2	replace
73	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  &&  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
74	[BUG]  [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  &&  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
75	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	13	2	replace
76	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	13	2	replace
77	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  ||  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	13	2	replace
78	[BUG]  [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  ||  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	13	2	replace
79	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "true "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
80	[BUG]  [BUGGY]  if(prefix.equals( "true "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "true "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
81	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	25	2	replace
82	[BUG]  [BUGGY]  if(prefix.equals( "- "))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	25	2	replace
83	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "0 "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "0 "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
84	[BUG]  [BUGGY]  if(prefix.equals( "0 "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "0 "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "0 "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
85	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "_ "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "_ "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
86	[BUG]  [BUGGY]  if(prefix.equals( "_ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "_ "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "_ "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
87	[BUG]  [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.startsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.startsWith(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if    (prefix.startsWith(trigger))    {    if  (prefix.startsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
88	[BUG]  [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.startsWith(Trigger))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.startsWith(Trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if    (prefix.startsWith(trigger))    {    if  (prefix.startsWith(Trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
89	[BUG]  [BUGGY]  if  (prefix.startsWith(trigger))  {  If  (prefix.startsWith(trigger))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if  (prefix.startsWith(trigger))  {  If  (prefix.startsWith(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if    (prefix.startsWith(trigger))    {    If  (prefix.startsWith(trigger))  {	  	non-compiled	[CE]  ';'  expected	6	None	add
90	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
91	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".   ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    if(prefix.equals( ".   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
92	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  If(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  If(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    If(prefix.equals(   "   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  	22	None	add
93	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
94	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
95	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  If(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  If(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    If(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	10	None	add
96	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(!TRIgger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(!TRIgger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!TRIgger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
97	[BUG]  [BUGGY]  if(prefix.equals(   "   "))  {  if(prefix.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals(   "   "))  {  if(prefix.equals(   "   "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   "))    {    if(prefix.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
98	[BUG]  [BUGGY]  if(prefix.equals(   "   "))  {  if(prefix.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals(   "   "))  {  if(prefix.equals( ".   "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   "))    {    if(prefix.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
99	[BUG]  [BUGGY]  if(prefix.equals(   "   "))  {  If(prefix.equals(   "   "))  {  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals(   "   "))  {  If(prefix.equals(   "   "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   "))    {    If(prefix.equals(   "   "))  {	  	non-compiled	[CE]  	24	None	add
100	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	18	2	replace
101	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	18	2	replace
102	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	18	2	replace
103	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	18	2	replace
104	[BUG]  [BUGGY]  if(prefix!=  null  ||!prefix.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  ||!prefix.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||!prefix.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
105	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.equals( " "));  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ||  prefix.equals( " "));	      Preconditions.checkState(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
106	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  &&  prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(i.hasNext()  &&  prefix.equals( " "));  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  &&  prefix.equals( " "));	      Preconditions.checkState(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
107	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  &&!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
108	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  &&!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
109	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals( " "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals( " "))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
110	[BUG]  [BUGGY]  if(!trigger.equals( " "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals( " "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals( " "))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
111	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)||  i.hasNext())  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
112	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||  i.hasNext())  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
113	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	18	2	replace
114	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	18	2	replace
115	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger  ==  null  ||  prefix.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  if(trigger  ==  null  ||  prefix.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    if(trigger  ==  null  ||  prefix.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
116	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  trigger.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " ")||  trigger.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
117	[BUG]  [BUGGY]  if(prefix.equals( " ")||  trigger.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  trigger.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " ")||  trigger.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
118	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " ")||  prefix.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	23	2	replace
119	[BUG]  [BUGGY]  if(prefix.equals( " ")||  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " ")||  prefix.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	23	2	replace
120	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	7	2	replace
121	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	7	2	replace
122	[BUG]  [BUGGY]  [FE]  OptionException  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	19	2	replace
123	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [FE]  OptionException  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	19	2	replace
124	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  OptionException  	17	2	replace
125	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  OptionException  	17	2	replace
126	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	17	2	replace
127	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	17	2	replace
128	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	11	2	replace
129	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	11	2	replace
130	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  i.hasNext())  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	11	2	replace
131	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  i.hasNext())  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	11	2	replace
132	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  i.next();  [CE]  ')'  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  i.next();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext(),  prefix  =  i.next();	      Preconditions.checkState(i.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	5	None	replace
133	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||  prefix.startsWith(trigger))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
134	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.startsWith(trigger))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
135	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
136	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
137	[BUG]  [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.endsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.endsWith(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if    (prefix.startsWith(trigger))    {    if  (prefix.endsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
138	[BUG]  [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.equals(trigger))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if  (prefix.startsWith(trigger))  {  if  (prefix.equals(trigger))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if    (prefix.startsWith(trigger))    {    if  (prefix.equals(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
139	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  prefix.equals( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " ")||  prefix.equals( "- "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	25	2	replace
140	[BUG]  [BUGGY]  if(prefix.equals( " ")||  prefix.equals( "- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  prefix.equals( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " ")||  prefix.equals( "- "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	25	2	replace
141	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&  prefix.equals( "   "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  prefix.equals( "   "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
142	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals( "   "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&  prefix.equals( "   "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  prefix.equals( "   "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
143	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  prefix.equals( ": "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
144	[BUG]  [BUGGY]  if(prefix.equals( " ")||  prefix.equals( ": "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( " ")||  prefix.equals( ": "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
145	[BUG]  [BUGGY]  Set  <  String>  values  =  i.newHashSet();  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Set  <  String>  values  =  i.newHashSet();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  i.newHashSet();	      Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
146	[BUG]  [BUGGY]  Set  <  String>  values  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Set  <  String>  values  =  Lists.newHashSet();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Lists.newHashSet();	      Set    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
147	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  prefix.equals( " "));  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()  ||  prefix.equals( " "));	      Preconditions.checkArgument(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
148	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext(),  trigger);  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(i.hasNext(),  trigger);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext(),  trigger);	      Preconditions.checkArgument(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
149	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals( " "))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null)  {  if(!prefix.equals( " "))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	16	2	replace
150	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals( " "))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals( " "))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null)  {  if(!prefix.equals( " "))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	16	2	replace
151	[BUG]  [BUGGY]  if(prefix.equals(   "   "))  {  if(prefix.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals(   "   "))  {  if(prefix.equals( ",   "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   "))    {    if(prefix.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
152	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
153	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
154	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!prefix.equals( " "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!prefix.equals( " "))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
155	[BUG]  [BUGGY]  if(!prefix.equals( " "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(!prefix.equals( " "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals( " "))  {	  if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	9	2	replace
156	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix);  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newHashSet(prefix);	      Set    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
157	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
158	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith(prefix))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	23	2	replace
159	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()? "null "  :  prefix!=  null);  [CE]  illegal  start  of  type  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkArgument(i.hasNext()? "null "  :  prefix!=  null);  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()? "null "  :  prefix!=  null);	      Preconditions.checkArgument(prefix!=    null);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
160	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefix.equals( " "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&!prefix.equals( " "))  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!prefix.equals( " "))  {  return  false;  }	      if(prefix!=    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
161	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  i.next();  [CE]  ')'  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  i.next();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();  prefix  =  i.next();	      Preconditions.checkState(i.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	5	None	replace
162	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||  prefix.startsWith( "- "))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	15	2	replace
163	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "- "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.startsWith( "- "))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	15	2	replace
164	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
165	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	15	2	replace
166	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ||  trigger.equals( " "));  [CE]  illegal  start  of  type  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  Preconditions.checkState(i.hasNext()  ||  trigger.equals( " "));  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ||  trigger.equals( " "));	      Preconditions.checkState(i.hasNext());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
167	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "* "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
168	[BUG]  [BUGGY]  if(prefix.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix.equals( "* "))  {  [BUGGY]    return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* "))  {	  if(prefix.equals(   "   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	25	2	replace
169	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!prefixes.contains(prefix))  {  return  true;  }	      if(prefix!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
170	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]    public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();    [BUGGY]  if(prefix!=  null  &&!prefixes.isEmpty())  {  return  false;  }  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!prefixes.isEmpty())  {  return  false;  }	      if(prefix!=    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
