bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!prefix.equals( "   ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   ".       ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	91	2	replace
2	[BUG]  [BUGGY]  if(!prefix.equals( "   ")||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals( "   ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   ".       ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	91	2	replace
3	[BUG]  [BUGGY]  if(!prefix.equals(   "   "))  {  if(!prefix.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals(   "   "))  {  if(!prefix.equals(   "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals(   "   "))    {    if(!prefix.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
4	[BUG]  [BUGGY]  if(!prefix.equals(   "   "))  {  If(!prefix.equals(   "   "))  {  [CE]  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals(   "   "))  {  If(!prefix.equals(   "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals(   "   "))    {    If(!prefix.equals(   "   "))  {	  	non-compiled	[CE]  	154	None	add
5	[BUG]  [BUGGY]  if(!prefix.equals(   "   "))  {  if(!prefix.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals(   "   "))  {  if(!prefix.equals( ".   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals(   "   "))    {    if(!prefix.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	154	None	add
6	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    if(trigger  ==  null  ||  prefix.startsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
7	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger!=  null  ||  prefix.startsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger!=  null  ||  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    if(trigger!=  null  ||  prefix.startsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
8	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith(pregger))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith(pregger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    if(trigger  ==  null  ||  prefix.startsWith(pregger))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
9	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith(Trigger))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith(Trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    if(trigger  ==  null  ||  prefix.startsWith(Trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
10	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.endsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.endsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    if(trigger  ==  null  ||  prefix.endsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
11	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
12	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
13	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  If(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  ';'  expected  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  If(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    If(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	45	None	add
14	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newArrayList();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newArrayList();	  List    <    String>    values    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
15	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newLinkedList();  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newLinkedList();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newLinkedList();	  List    <    String>    values    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
16	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
17	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
18	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
19	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  >=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  >=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(prefix  >=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
20	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	12	2	replace
21	[BUG]  [BUGGY]  if(prefix.equals( "- ")&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	12	2	replace
22	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  trigger.startsWith( "- "))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
23	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith( "- "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  trigger.startsWith( "- "))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
24	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "- ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!prefix.equals( "- ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
25	[BUG]  [BUGGY]  if(!prefix.equals( "- ")||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "- ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals( "- ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
26	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  trigger.equals( "- "))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
27	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  trigger.equals( "- "))  {  [FE]  OptionException  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  trigger.equals( "- "))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
28	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
29	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
30	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  If(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  If(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    If(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	128	None	add
31	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(trigger!=  null  &&!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
32	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  trigger))  {  [CE]  cannot  find  symbol  Feature  [FE]            OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  trigger))  {	  if(!trigger.startsWith(prefix)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	63	None	replace
33	[BUG]  [BUGGY]  if(!prefix.startsWith(trigger)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.startsWith(trigger)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.startsWith(trigger)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!trigger.startsWith(prefix)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	63	None	replace
34	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  trigger))  {  [CE]  cannot  find  symbol  Feature  [FE]                OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES  ||  trigger))  {	  if(!trigger.startsWith(prefix)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	63	None	replace
35	[BUG]  [BUGGY]  if(prefix  ==  null  ||!prefix.equals( "   "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||!prefix.equals( "   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||!prefix.equals( "   "))  {  return  false;  }	  if(prefix!=    null    ||!prefix.equals(   "       "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
36	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
37	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
38	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefixes!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefixes!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(prefixes!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
39	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(trigger  >=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(trigger  >=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(trigger  >=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
40	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()  &&  prefix.equals( "   "));  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()  &&  prefix.equals( "   "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()  &&  prefix.equals( "   "));	  Preconditions.checkArgument(i.hasNext()    ||    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
41	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.equals( "   "));  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.equals( "   "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.equals( "   "));	  Preconditions.checkArgument(i.hasNext()    ||    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
42	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.hasNext()  ||  prefix.equals( "   "));  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.hasNext()  ||  prefix.equals( "   "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.hasNext()  ||  prefix.equals( "   "));	  Preconditions.checkArgument(i.hasNext()    ||    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
43	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.endsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "- ")||  prefix.endsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	compilable	  [FE]  OptionException  	137	2	replace
44	[BUG]  [BUGGY]  if(prefix.startsWith( "- ")||  prefix.endsWith( "- "))  {  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.endsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- ")||  prefix.endsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	compilable	  [FE]  OptionException  	137	2	replace
45	[BUG]  [BUGGY]  if(prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
46	[BUG]  [BUGGY]  [FE]  OptionException  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||  prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	compilable	  [FE]  OptionException  	137	2	replace
47	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.startsWith(trigger))  {  [FE]  OptionException  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	compilable	  [FE]  OptionException  	137	2	replace
48	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  if  (prefix.endsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if  (prefix.endsWith( "/ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  if  (prefix.endsWith( "/ "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
49	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||!trigger.startsWith(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	153	2	replace
50	[BUG]  [BUGGY]  if(prefix!=  null  ||!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||!trigger.startsWith(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	153	2	replace
51	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&!trigger.equals(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	153	2	replace
52	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!trigger.equals(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	153	2	replace
53	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||!trigger.startsWith(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	153	2	replace
54	[BUG]  [BUGGY]  if(prefix  ==  null  ||!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||!trigger.startsWith(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	153	2	replace
55	[BUG]  [BUGGY]  Preconditions.checkState(prefix.length()  ==  0);  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.length()  ==  0);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.length()  ==  0);	  Preconditions.checkState(prefix.hasNext());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
56	[BUG]  [BUGGY]  Preconditions.checkState(prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.equals( " "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.equals( " "));	  Preconditions.checkState(prefix.hasNext());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
57	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  &&  trigger.startsWith(prefix))  {	  if(prefix!=    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	72	2	replace
58	[BUG]  [BUGGY]  if(prefix  ==  null  &&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  &&  trigger.startsWith(prefix))  {	  if(prefix!=    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	72	2	replace
59	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	93	2	replace
60	[BUG]  [BUGGY]  if(i.hasNext())  {  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	93	2	replace
61	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	93	2	replace
62	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	93	2	replace
63	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	114	2	replace
64	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	114	2	replace
65	[BUG]  [BUGGY]  if(prefix  ==  null  ||!prefix.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||!prefix.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||!prefix.isEmpty())  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
66	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
67	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  i.hasNext())  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
68	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals(trigger)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!prefix.equals(trigger)&&  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
69	[BUG]  [BUGGY]  if(!prefix.equals(trigger)&&  i.hasNext())  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals(trigger)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals(trigger)&&  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
70	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext()  ||  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  i.hasNext()  ||  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
71	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext()  ||  i.hasNext())  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext()  ||  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  i.hasNext()  ||  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
72	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.startsWith(trigger))    {    if(prefix!=  null  &&  prefix.startsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
73	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix  ==  null  &&  prefix.startsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix  ==  null  &&  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.startsWith(trigger))    {    if(prefix  ==  null  &&  prefix.startsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
74	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.startsWith(Trigger))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.startsWith(Trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.startsWith(trigger))    {    if(prefix!=  null  &&  prefix.startsWith(Trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
75	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  If(prefix!=  null  &&  prefix.startsWith(trigger))  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  If(prefix!=  null  &&  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.startsWith(trigger))    {    If(prefix!=  null  &&  prefix.startsWith(trigger))  {	  	non-compiled	[CE]  ';'  expected	120	None	add
76	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "_ ")||  prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "_ ")||  prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
77	[BUG]  [BUGGY]  if(prefix.equals( "_ ")||  prefix.equals( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "_ ")||  prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "_ ")||  prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
78	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
79	[BUG]  [BUGGY]  if(prefix.equals( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
80	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "__ ")||  prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "__ ")||  prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
81	[BUG]  [BUGGY]  if(prefix.equals( "__ ")||  prefix.equals( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "__ ")||  prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "__ ")||  prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
82	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
83	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
84	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(trigger  >=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(trigger  >=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(trigger  >=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
85	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  If(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  ';'  expected  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  If(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    If(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	124	None	add
86	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||!Trigger.startsWith(prefix))  {  [CE]  cannot  find  symbol  Trigger  [FE]            OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||!Trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||!Trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  Trigger	18	None	replace
87	[BUG]  [BUGGY]  if(!trigger.equals(prefix))  {  if(!Trigger.startsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix))  {  if(!Trigger.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix))  {  if(!Trigger.startsWith(trigger))  {	  if(!trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
88	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&!Trigger.startsWith(prefix))  {  [CE]  cannot  find  symbol  Trigger  [FE]                OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&!Trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&!Trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  Trigger	18	None	replace
89	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefix.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!prefix.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!prefix.isEmpty())  {  return  false;  }	  if(prefix!=    null    ||!prefix.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
90	[BUG]  [BUGGY]  List  <  String>  values  =  i.newHashSet();  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  i.newHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  i.newHashSet();	  Set    <    String>    values    =    i.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
91	[BUG]  [BUGGY]  Set  <  String>  values  =  prefixes.newHashSet();  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  prefixes.newHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  prefixes.newHashSet();	  Set    <    String>    values    =    i.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
92	[BUG]  [BUGGY]  Set  <  String>  values  =  i.next();  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  i.next();	  Set    <    String>    values    =    i.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
93	[BUG]  [BUGGY]  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(trigger  ==  null  ||  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    If(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	43	None	replace
94	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.startsWith(Trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	88	2	replace
95	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith(trigger))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.startsWith(Trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	88	2	replace
96	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  if  (prefix.startsWith(Trigger))  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if  (prefix.startsWith(Trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  if  (prefix.startsWith(Trigger))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.startsWith(Trigger))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
97	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
98	[BUG]  [BUGGY]  if(prefix.equals( "true ")&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
99	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.commons.CommandLine "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.commons.CommandLine "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
100	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.commons.CommandLine "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.commons.CommandLine "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.commons.CommandLine "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
101	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.com.apache.commons.ComparisonFailure "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.com.apache.commons.ComparisonFailure "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
102	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.com.apache.commons.ComparisonFailure "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.com.apache.commons.ComparisonFailure "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  trigger.startsWith( "com.apache.com.apache.commons.ComparisonFailure "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
103	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.startsWith(prefix))    {    if(trigger!=  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
104	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  if(trigger  ==  null  &&!trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  if(trigger  ==  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.startsWith(prefix))    {    if(trigger  ==  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
105	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  If(trigger!=  null  &&!trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  If(trigger!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.startsWith(prefix))    {    If(trigger!=  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	107	None	add
106	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  if(trigger  >=  null  &&!trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.startsWith(prefix))  {  if(trigger  >=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.startsWith(prefix))    {    if(trigger  >=  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
107	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	62	2	replace
108	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	62	2	replace
109	[BUG]  [BUGGY]  If(!trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]          OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
110	[BUG]  [BUGGY]  if(!trigger.equals(prefix))  {  If(!trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]            OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix))  {  If(!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix))  {  If(!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
111	[BUG]  [BUGGY]  [FE]  OptionException  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)&&!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	17	2	replace
112	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	17	2	replace
113	[BUG]  [BUGGY]  if(prefix.equals(   "*   "))  {  if(prefix.equals(   "*   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   "))  {  if(prefix.equals(   "*   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   "))    {    if(prefix.equals(   "*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	167	None	add
114	[BUG]  [BUGGY]  if(prefix.equals(   "*   "))  {  if(prefix.equals( ".*   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   "))  {  if(prefix.equals( ".*   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   "))    {    if(prefix.equals( ".*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	167	None	add
115	[BUG]  [BUGGY]  if(prefix.equals(   "*   "))  {  if(prefix.equals( ",*   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   "))  {  if(prefix.equals( ",*   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   "))    {    if(prefix.equals( ",*   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	167	None	add
116	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext().equals(prefix)&&  prefix.equals( "   "));  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext().equals(prefix)&&  prefix.equals( "   "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext().equals(prefix)&&  prefix.equals( "   "));	  Preconditions.checkState(i.hasNext()    &&    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
117	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  &&  prefix.equals( "* "));  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  &&  prefix.equals( "* "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  &&  prefix.equals( "* "));	  Preconditions.checkState(i.hasNext()    &&    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
118	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( "_ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
119	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "_ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "_ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
120	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||  prefix.startsWith( "_ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  OptionException  	165	2	replace
121	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "_ "))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  prefix.startsWith( "_ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  OptionException  	165	2	replace
122	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  trigger.startsWith( "_ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
123	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith( "_ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  trigger.startsWith( "_ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
124	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "._ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( "._ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
125	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "._ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "._ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "._ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
126	[BUG]  [BUGGY]  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefixes.isEmpty())  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
127	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.length()  ==  0)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.length()  ==  0)  {  if(!prefixes.isEmpty())  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	101	2	replace
128	[BUG]  [BUGGY]  if(prefix.length()  ==  0)  {  if(!prefixes.isEmpty())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.length()  ==  0)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.length()  ==  0)  {  if(!prefixes.isEmpty())  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	101	2	replace
129	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  junit.framework.ComparisonFailure:  expected  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	junit.framework.ComparisonFailure:  expected	  if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    	non-compiled	[CE]  not  a  statement	101	None	replace
130	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  if(trigger  ==  null  ||  prefix.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  if(trigger  ==  null  ||  prefix.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    if(trigger  ==  null  ||  prefix.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
131	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  if(trigger  ==  null  ||  prefix.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  if(trigger  ==  null  ||  prefix.startsWith( ".-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    if(trigger  ==  null  ||  prefix.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
132	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  if(trigger!=  null  ||  prefix.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  if(trigger!=  null  ||  prefix.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    if(trigger!=  null  ||  prefix.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
133	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ==  trigger);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  ==  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ==  trigger);	  Preconditions.checkState(i.hasNext();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
134	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ==  null);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  ==  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ==  null);	  Preconditions.checkState(i.hasNext();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
135	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "- ")||  prefix.startsWith( "-- "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
136	[BUG]  [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- ")||  prefix.startsWith( "-- "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
137	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "- ")||  trigger.startsWith( "-- "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
138	[BUG]  [BUGGY]  if(prefix.startsWith( "- ")||  trigger.startsWith( "-- "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- ")||  trigger.startsWith( "-- "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
139	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-+ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "- ")||  prefix.startsWith( "-+ "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
140	[BUG]  [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-+ "))  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-+ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- ")||  prefix.startsWith( "-+ "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
141	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( ": ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( ": ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	144	2	replace
142	[BUG]  [BUGGY]  if(prefix.equals( ": ")||  prefix.equals( ": "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( ": ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( ": ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	144	2	replace
143	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	144	2	replace
144	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( ": "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	144	2	replace
145	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  OptionException  	144	2	replace
146	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( ": "))  {  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  OptionException  	144	2	replace
147	[BUG]  [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    ||    trigger.startsWith(prefix))    {    if(trigger!=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
148	[BUG]  [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    ||    trigger.startsWith(prefix))    {    if(trigger  ==  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
149	[BUG]  [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  If(trigger!=  null  ||  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  If(trigger!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    ||    trigger.startsWith(prefix))    {    If(trigger!=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	77	None	add
150	[BUG]  [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  if(trigger  >=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||  trigger.startsWith(prefix))  {  if(trigger  >=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    ||    trigger.startsWith(prefix))    {    if(trigger  >=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	77	None	add
151	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
152	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    if(prefix!=  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
153	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals( ".   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals( ".   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    if(prefix  ==  null)  {  if(!prefix.equals( ".   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	149	None	add
154	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext(),  trigger,  prefix);  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext(),  trigger,  prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext(),  trigger,  prefix);	  Preconditions.checkArgument(i.hasNext(),    trigger);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
155	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext(),  prefix);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext(),  prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext(),  prefix);	  Preconditions.checkArgument(i.hasNext(),    trigger);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
156	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext(),  prefix,  trigger);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext(),  prefix,  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext(),  prefix,  trigger);	  Preconditions.checkArgument(i.hasNext(),    trigger);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
157	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext(),  trigger,  null);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext(),  trigger,  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext(),  trigger,  null);	  Preconditions.checkArgument(i.hasNext(),    trigger);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
158	[BUG]  [BUGGY]  if(prefix.equals(   "-   "))  {  if(prefix.equals(   "-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "-   "))  {  if(prefix.equals(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "-   "))    {    if(prefix.equals(   "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
159	[BUG]  [BUGGY]  if(prefix.equals(   "-   "))  {  if(prefix.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "-   "))  {  if(prefix.equals( ".-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "-   "))    {    if(prefix.equals( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
160	[BUG]  [BUGGY]  if(prefix.equals(   "-   "))  {  If(prefix.equals(   "-   "))  {  [CE]  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "-   "))  {  If(prefix.equals(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "-   "))    {    If(prefix.equals(   "-   "))  {	  	non-compiled	[CE]  	81	None	add
161	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	134	2	replace
162	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	134	2	replace
163	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( " "))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	134	2	replace
164	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( " "))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( " "))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	134	2	replace
165	[BUG]  [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  if(prefix.equals(   "   ")&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  if(prefix.equals(   "   ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "       ")&&    trigger.startsWith(prefix))    {    if(prefix.equals(   "   ")&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
166	[BUG]  [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  if(prefix.equals( ".   ")&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  if(prefix.equals( ".   ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "       ")&&    trigger.startsWith(prefix))    {    if(prefix.equals( ".   ")&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
167	[BUG]  [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  If(prefix.equals(   "   ")&&  trigger.startsWith(prefix))  {  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  If(prefix.equals(   "   ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "       ")&&    trigger.startsWith(prefix))    {    If(prefix.equals(   "   ")&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  	9	None	add
168	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
169	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  If(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  If(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    If(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	53	None	add
170	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  if(!Trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  if(!Trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    if(!Trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
171	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals( "true "))  {	  if(!trigger.equals(   "   "))    {    	compilable	  [FE]  OptionException  	110	2	replace
172	[BUG]  [BUGGY]  if(!trigger.equals( "true "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals( "true "))  {	  if(!trigger.equals(   "   "))    {    	compilable	  [FE]  OptionException  	110	2	replace
173	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.isEmpty())    {    return    false;    }    if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
174	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.isEmpty())    {    return    false;    }    if(prefix  ==  null)  {  if(!prefix.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
175	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.isEmpty())    {    return    false;    }    if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
176	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix  >=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  if(prefix  >=  null)  {  if(!prefix.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.isEmpty())    {    return    false;    }    if(prefix  >=  null)  {  if(!prefix.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	113	None	add
177	[BUG]  [BUGGY]  if(!prefixes.contains(trigger))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefixes.contains(trigger))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefixes.contains(trigger))  {  return  false;  }	  if(!prefixes.contains(prefix))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
178	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  false;  }	  if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	37	2	replace
179	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  false;  }	  if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	37	2	replace
180	[BUG]  [BUGGY]  if(prefix!=  null  ||!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||!prefixes.contains(prefix))  {  return  false;  }	  if(!prefixes.contains(prefix))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
181	[BUG]  [BUGGY]  if(!prefixes.contains(trigger))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefixes.contains(trigger))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefixes.contains(trigger))  {  return  true;  }	  if(!prefixes.contains(prefix))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
182	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues);	  List    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
183	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix,  trigger);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix,  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newHashSet(prefix,  trigger);	  List    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
184	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  prefix.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	119	2	replace
185	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  prefix.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	119	2	replace
186	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	119	2	replace
187	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	119	2	replace
188	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")||  prefix.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
189	[BUG]  [BUGGY]  if(prefix.equals( "* ")||  prefix.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")||  prefix.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
190	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")&&  trigger.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")&&  trigger.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
191	[BUG]  [BUGGY]  if(prefix.equals( "* ")&&  trigger.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")&&  trigger.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")&&  trigger.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
192	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  trigger.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")||  trigger.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
193	[BUG]  [BUGGY]  if(prefix.equals( "* ")||  trigger.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  trigger.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")||  trigger.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
194	[BUG]  [BUGGY]  if(prefix!=  null  ||!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||!prefixes.isEmpty())  {  return  false;  }	  if(prefix!=    null    &&!prefixes.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
195	[BUG]  [BUGGY]  if(prefix  ==  null  ||!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||!prefixes.isEmpty())  {  return  false;  }	  if(prefix!=    null    &&!prefixes.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
196	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "false "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.equals( "false "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
197	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "false "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "false "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.equals( "false "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
198	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.equals( "true "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
199	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "true "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.equals( "true "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
200	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "null "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.equals( "null "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
201	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "null "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "null "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.equals( "null "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
202	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  prefix.equals( "- "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
203	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  prefix.equals( "- "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
204	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  prefix.equals( "-- "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
205	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "-- "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  prefix.equals( "-- "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
206	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "-+ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  prefix.equals( "-+ "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
207	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "-+ "))  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.equals( "-+ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  prefix.equals( "-+ "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
208	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)&&  i.hasNext())  {	  if(!trigger.startsWith(prefix)||    i.hasNext())    {    	compilable	  [FE]  OptionException  	112	2	replace
209	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&  i.hasNext())  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&  i.hasNext())  {	  if(!trigger.startsWith(prefix)||    i.hasNext())    {    	compilable	  [FE]  OptionException  	112	2	replace
210	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newArrayList(prefix);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newArrayList(prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newArrayList(prefix);	  List    <    String>    values    =    Lists.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
211	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix,  trigger);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix,  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newHashSet(prefix,  trigger);	  List    <    String>    values    =    Lists.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
212	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix,  defaultValues);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix,  defaultValues);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newHashSet(prefix,  defaultValues);	  List    <    String>    values    =    Lists.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
213	[BUG]  [BUGGY]  Set  <  String>  values  =  Lists.newHashSet(prefix);  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  Lists.newHashSet(prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Lists.newHashSet(prefix);	  List    <    String>    values    =    Lists.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
214	[BUG]  [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
215	[BUG]  [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".*   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".*   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    if(prefix.equals( ".*   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
216	[BUG]  [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  If(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  If(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    If(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  	7	None	add
217	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.startsWith(trigger))  {  If  (prefix.startsWith(trigger))  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith(trigger))  {  If  (prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  prefix.startsWith(trigger))  {  If  (prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    If    (prefix.startsWith(trigger))    {    	non-compiled	[CE]  ';'  expected	89	None	replace
218	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  If  (prefix.startsWith( "> "))  {  [CE]  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  If  (prefix.startsWith( "> "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  If  (prefix.startsWith( "> "))  {	  if    (prefix.startsWith(trigger))    {    If    (prefix.startsWith(trigger))    {    	non-compiled	[CE]  	89	None	replace
219	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  If  (prefix.startsWith( "; "))  {  [CE]  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  If  (prefix.startsWith( "; "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  If  (prefix.startsWith( "; "))  {	  if    (prefix.startsWith(trigger))    {    If    (prefix.startsWith(trigger))    {    	non-compiled	[CE]  	89	None	replace
220	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  trigger.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	163	2	replace
221	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  trigger.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	163	2	replace
222	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||  prefix.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	163	2	replace
223	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  prefix.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	163	2	replace
224	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||  trigger.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	163	2	replace
225	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.startsWith( "- "))  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  trigger.startsWith( "- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	163	2	replace
226	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  trigger.startsWith( "-- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	117	2	replace
227	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith( "-- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  trigger.startsWith( "-- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	117	2	replace
228	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  trigger.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	117	2	replace
229	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  trigger.startsWith( "- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	117	2	replace
230	[BUG]  [BUGGY]  Preconditions.checkState(prefix!=  null);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix!=  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix!=  null);	  Preconditions.checkArgument(prefix    ==    null);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
231	[BUG]  [BUGGY]  Preconditions.checkState(prefix  ==  null);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix  ==  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix  ==  null);	  Preconditions.checkArgument(prefix    ==    null);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
232	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  trigger!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	50	2	replace
233	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger!=  null  &&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  trigger!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	50	2	replace
234	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
235	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  If(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  If(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	61	None	add
236	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  if(!Trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  if(!Trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
237	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  &&  trigger.equals( "   "));  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  &&  trigger.equals( "   "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  &&  trigger.equals( "   "));	  Preconditions.checkState(i.hasNext()    ||    trigger.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
238	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext().equals(prefix)||  trigger.equals( "   "));  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext().equals(prefix)||  trigger.equals( "   "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext().equals(prefix)||  trigger.equals( "   "));	  Preconditions.checkState(i.hasNext()    ||    trigger.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
239	[BUG]  [BUGGY]  if(!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  cannot  find  symbol  Trigger  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!Trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!Trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  Trigger	94	None	replace
240	[BUG]  [BUGGY]  if(!Trigger.equals(trigger)&&  trigger.startsWith(prefix))  {  [CE]  cannot  find  symbol  Trigger  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!Trigger.equals(trigger)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!Trigger.equals(trigger)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!Trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  Trigger	94	None	replace
241	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  if(trigger  ==  null  ||  trigger.equals(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  if(trigger  ==  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.equals(prefix))    {    if(trigger  ==  null  ||  trigger.equals(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
242	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  if(trigger!=  null  ||  trigger.equals(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  if(trigger!=  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.equals(prefix))    {    if(trigger!=  null  ||  trigger.equals(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
243	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  If(trigger  ==  null  ||  trigger.equals(prefix))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  If(trigger  ==  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.equals(prefix))    {    If(trigger  ==  null  ||  trigger.equals(prefix))  {	  	non-compiled	[CE]  ';'  expected	135	None	add
244	[BUG]  [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
245	[BUG]  [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
246	[BUG]  [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix!=  null)  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    if(i.hasNext())  {  if(prefix!=  null)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
247	[BUG]  [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix  >=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  if(i.hasNext())  {  if(prefix  >=  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    if(i.hasNext())  {  if(prefix  >=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
248	[BUG]  [BUGGY]  If(prefix.equals( "   ")||  trigger.startsWith(prefix))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(prefix.equals( "   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(prefix.equals( "   ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    If(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    	non-compiled	[CE]  	92	None	replace
249	[BUG]  [BUGGY]  [FE]  OptionException  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&!trigger.endsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)&&!trigger.endsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.endsWith(prefix))    {    	compilable	  [FE]  OptionException  	19	2	replace
250	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&!trigger.endsWith(prefix))  {  [FE]  OptionException  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&!trigger.endsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&!trigger.endsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.endsWith(prefix))    {    	compilable	  [FE]  OptionException  	19	2	replace
251	[BUG]  [BUGGY]  [FE]  OptionException  [FE]                OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||!trigger.endsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)||!trigger.endsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.endsWith(prefix))    {    	compilable	  [FE]  OptionException  	19	2	replace
252	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||!trigger.endsWith(prefix))  {  [FE]  OptionException  [FE]                OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||!trigger.endsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||!trigger.endsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.endsWith(prefix))    {    	compilable	  [FE]  OptionException  	19	2	replace
253	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();)  {  Preconditions.checkNotNull(prefix);  [CE]  ')'  expected  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext();)  {  Preconditions.checkNotNull(prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();)  {  Preconditions.checkNotNull(prefix);	  Preconditions.checkNotNull(trigger);    	non-compiled	[CE]  ')'  expected	28	None	replace
254	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals( "*   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals( "*   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    if(prefix!=  null)  {  if(!prefix.equals( "*   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
255	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals( ".*   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals( ".*   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    if(prefix!=  null)  {  if(!prefix.equals( ".*   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
256	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals( "*   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals( "*   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    if(prefix  ==  null)  {  if(!prefix.equals( "*   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
257	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  trigger.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	56	2	replace
258	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  trigger.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	56	2	replace
259	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.endsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  trigger.endsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	56	2	replace
260	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.endsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.endsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  trigger.endsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	56	2	replace
261	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "- ")||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  trigger.startsWith( "- ")||  trigger.startsWith( "-- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	56	2	replace
262	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "- ")||  trigger.startsWith( "-- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "- ")||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  trigger.startsWith( "- ")||  trigger.startsWith( "-- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	56	2	replace
263	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  trigger);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Sets.newHashSet(prefix,  trigger);	  Set    <    String>    values    =    Sets.newHashSet(trigger);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
264	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet(trigger);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Sets.newHashSet(trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newHashSet(trigger);	  Set    <    String>    values    =    Sets.newHashSet(trigger);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
265	[BUG]  [BUGGY]  ArrayList  <  String>  values  =  Sets.newHashSet(trigger);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  ArrayList  <  String>  values  =  Sets.newHashSet(trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	ArrayList  <  String>  values  =  Sets.newHashSet(trigger);	  Set    <    String>    values    =    Sets.newHashSet(trigger);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
266	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.startsWith(trigger));  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.startsWith(trigger));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.startsWith(trigger));	  Preconditions.checkArgument(trigger.startsWith(prefix));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
267	[BUG]  [BUGGY]  Preconditions.checkArgument(i.startsWith(prefix));  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.startsWith(prefix));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.startsWith(prefix));	  Preconditions.checkArgument(trigger.startsWith(prefix));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
268	[BUG]  [BUGGY]  Preconditions.checkArgument(trigger.startsWith(prefix)||  trigger.startsWith(prefix));  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(trigger.startsWith(prefix)||  trigger.startsWith(prefix));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(trigger.startsWith(prefix)||  trigger.startsWith(prefix));	  Preconditions.checkArgument(trigger.startsWith(prefix));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
269	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals(  trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!prefix.equals(  trigger))  {	  if(!prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	155	2	replace
270	[BUG]  [BUGGY]  if(!prefix.equals(  trigger))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals(  trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals(  trigger))  {	  if(!prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	155	2	replace
271	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!prefix.equals( "true "))  {	  if(!prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	155	2	replace
272	[BUG]  [BUGGY]  if(!prefix.equals( "true "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals( "true "))  {	  if(!prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	155	2	replace
273	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!prefix.equals( "- "))  {	  if(!prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	155	2	replace
274	[BUG]  [BUGGY]  if(!prefix.equals( "- "))  {  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.equals( "- "))  {	  if(!prefix.equals(   "   "))    {    	compilable	  [FE]  OptionException  	155	2	replace
275	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null)  {  if(!prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	27	2	replace
276	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals( "* "))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null)  {  if(!prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	27	2	replace
277	[BUG]  [BUGGY]  if(prefix!=  null  ||!prefix.equals( "* "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||!prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||!prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
278	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* ")||!prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null)  {  if(!prefix.equals( "* ")||!prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	27	2	replace
279	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* ")||!prefix.equals( "* "))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* ")||!prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  if(!prefix.equals( "* ")||!prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	27	2	replace
280	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
281	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  If(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  If(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    If(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	33	None	add
282	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
283	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
284	[BUG]  [BUGGY]  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(trigger!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    If(trigger!=    null    &&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
285	[BUG]  [BUGGY]  If(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(trigger  ==  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    If(trigger!=    null    &&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
286	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    If(trigger!=    null    &&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
287	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "-- ")||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "-- ")||  prefix.startsWith( "-- "))  {	  if(prefix.startsWith(   "-   ")||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	2	2	replace
288	[BUG]  [BUGGY]  if(prefix.startsWith( "-- ")||  prefix.startsWith( "-- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "-- ")||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "-- ")||  prefix.startsWith( "-- "))  {	  if(prefix.startsWith(   "-   ")||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	2	2	replace
289	[BUG]  [BUGGY]  if(prefix.startsWith( "-1 ")||  prefix.startsWith( "-1))  {  [CE]  unclosed  string  literal  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "-1 ")||  prefix.startsWith( "-1))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "-1 ")||  prefix.startsWith( "-1))  {	  if(prefix.startsWith(   "-   ")||    prefix.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
290	[BUG]  [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-))  {  [CE]  unclosed  string  literal  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "-))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- ")||  prefix.startsWith( "-))  {	  if(prefix.startsWith(   "-   ")||    prefix.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	2	None	replace
291	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  if(!trigger.equals(prefix)&&  i.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  if(!trigger.equals(prefix)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    i.hasNext())    {    if(!trigger.equals(prefix)&&  i.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
292	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  If(!trigger.equals(prefix)&&  i.hasNext())  {  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  If(!trigger.equals(prefix)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    i.hasNext())    {    If(!trigger.equals(prefix)&&  i.hasNext())  {	  	non-compiled	[CE]  ';'  expected	130	None	add
293	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  if(!Trigger.equals(prefix)&&  i.hasNext())  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  i.hasNext())  {  if(!Trigger.equals(prefix)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    i.hasNext())    {    if(!Trigger.equals(prefix)&&  i.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
294	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext();  prefix  =  i.next();  [CE]  ')'  expected  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.hasNext();  prefix  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext();  prefix  =  i.next();	  Preconditions.checkState(prefix.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	38	None	replace
295	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  trigger.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  trigger.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    if(prefix.equals(   "   ")||  trigger.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
296	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  trigger.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  trigger.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  trigger.startsWith( ".-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    if(prefix.equals(   "   ")||  trigger.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	116	None	add
297	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&!trigger.startsWith(prefix))    {    if(prefix!=  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
298	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  if(prefix  ==  null  &&!trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  if(prefix  ==  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&!trigger.startsWith(prefix))    {    if(prefix  ==  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
299	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  if(prefix  >=  null  &&!trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  if(prefix  >=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&!trigger.startsWith(prefix))    {    if(prefix  >=  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
300	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  If(prefix!=  null  &&!trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.startsWith(prefix))  {  If(prefix!=  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&!trigger.startsWith(prefix))    {    If(prefix!=  null  &&!trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	152	None	add
301	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "ComparisonFailure "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  trigger.startsWith( "ComparisonFailure "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	replace
302	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "ComparisonFailure "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith( "ComparisonFailure "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  trigger.startsWith( "ComparisonFailure "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	replace
303	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "Comparison "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  trigger.startsWith( "Comparison "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  OptionException  	58	2	replace
304	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "Comparison "))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "Comparison "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  trigger.startsWith( "Comparison "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  OptionException  	58	2	replace
305	[BUG]  [BUGGY]  if(!trigger.equals(   "   "))  {  if(!trigger.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(   "   "))  {  if(!trigger.equals(   "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(   "   "))    {    if(!trigger.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
306	[BUG]  [BUGGY]  if(!trigger.equals(   "   "))  {  If(!trigger.equals(   "   "))  {  [CE]  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(   "   "))  {  If(!trigger.equals(   "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(   "   "))    {    If(!trigger.equals(   "   "))  {	  	non-compiled	[CE]  	109	None	add
307	[BUG]  [BUGGY]  if(!trigger.equals(   "   "))  {  if(!trigger.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(   "   "))  {  if(!trigger.equals( ".   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(   "   "))    {    if(!trigger.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	109	None	add
308	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
309	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
310	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  If(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  If(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    If(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	100	None	add
311	[BUG]  [BUGGY]  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
312	[BUG]  [BUGGY]  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".-   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".-   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    if(prefix.equals( ".-   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
313	[BUG]  [BUGGY]  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  If(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  [CE]  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  If(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    If(prefix.equals(   "-   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  	11	None	add
314	[BUG]  [BUGGY]  Preconditions.checkState(!prefixes.contains(prefix));  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(!prefixes.contains(prefix));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(!prefixes.contains(prefix));	  Preconditions.checkState(trigger.hasNext());    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
315	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  trigger.next();  [CE]  ')'  expected  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  trigger.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();  prefix  =  trigger.next();	  Preconditions.checkState(i.hasNext());    prefix    =    trigger.next();    	non-compiled	[CE]  ')'  expected	39	None	replace
316	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
317	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
318	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  >=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  >=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(prefix  >=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
319	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
320	[BUG]  [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
321	[BUG]  [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "true   ")|||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "true   ")|||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   "true   ")|||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
322	[BUG]  [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".true   ")|||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".true   ")|||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    if(prefix.equals( ".true   ")|||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
323	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "0 ")||  prefix.equals( "1 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "0 ")||  prefix.equals( "1 "))  {	  if(prefix.equals(   "0   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	84	2	replace
324	[BUG]  [BUGGY]  if(prefix.equals( "0 ")||  prefix.equals( "1 "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "0 ")||  prefix.equals( "1 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "0 ")||  prefix.equals( "1 "))  {	  if(prefix.equals(   "0   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	84	2	replace
325	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "0 ")||  prefix.equals( "0 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "0 ")||  prefix.equals( "0 "))  {	  if(prefix.equals(   "0   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	84	2	replace
326	[BUG]  [BUGGY]  if(prefix.equals( "0 ")||  prefix.equals( "0 "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "0 ")||  prefix.equals( "0 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "0 ")||  prefix.equals( "0 "))  {	  if(prefix.equals(   "0   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	84	2	replace
327	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "1 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "1 "))  {	  if(prefix.equals(   "0   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	84	2	replace
328	[BUG]  [BUGGY]  if(prefix.equals( "1 "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "1 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "1 "))  {	  if(prefix.equals(   "0   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	84	2	replace
329	[BUG]  [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    if(trigger  ==  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
330	[BUG]  [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    if(trigger!=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
331	[BUG]  [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  If(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  If(trigger  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    If(trigger  ==  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	73	None	add
332	[BUG]  [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  if(trigger  >=  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&  trigger.startsWith(prefix))  {  if(trigger  >=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    if(trigger  >=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
333	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	replace
334	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	replace
335	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  ')'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext();)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    	non-compiled	[CE]  ')'  expected	34	None	replace
336	[BUG]  [BUGGY]  Preconditions.checkArgument(i.next()  ==  null);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.next()  ==  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.next()  ==  null);	  Preconditions.checkArgument(i.next()!=    null);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.next()!=  null);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.next()!=  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.next()!=  null);	  Preconditions.checkArgument(i.next()!=    null);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
338	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.equals(i.next()));  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.equals(i.next()));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.equals(i.next()));	  Preconditions.checkArgument(i.next()!=    null);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
339	[BUG]  [BUGGY]  if(prefix.equals(   "true   "))  {  if(prefix.equals(   "true   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   "))  {  if(prefix.equals(   "true   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   "))    {    if(prefix.equals(   "true   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
340	[BUG]  [BUGGY]  if(prefix.equals(   "true   "))  {  if(prefix.equals( ".true   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   "))  {  if(prefix.equals( ".true   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   "))    {    if(prefix.equals( ".true   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
341	[BUG]  [BUGGY]  if(prefix.equals(   "true   "))  {  if(prefix.equals(   "false   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   "))  {  if(prefix.equals(   "false   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   "))    {    if(prefix.equals(   "false   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	79	None	add
342	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newArrayList();  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Sets.newArrayList();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newArrayList();	  List    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
343	[BUG]  [BUGGY]  ArrayList  <  String>  values  =  Sets.newHashSet();  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  ArrayList  <  String>  values  =  Sets.newHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	ArrayList  <  String>  values  =  Sets.newHashSet();	  List    <    String>    values    =    Sets.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
344	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)||!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	16	2	replace
345	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]        OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	16	2	replace
346	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  trigger.startsWith( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")||  trigger.startsWith( "* "))  {	  if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
347	[BUG]  [BUGGY]  if(prefix.equals( "* ")||  trigger.startsWith( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  trigger.startsWith( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")||  trigger.startsWith( "* "))  {	  if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
348	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
349	[BUG]  [BUGGY]  if(prefix.equals( "* ")&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")&&  trigger.startsWith(prefix))  {	  if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
350	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&!defaultValues.contains(prefix))  {  [CE]  cannot  find  symbol  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&!defaultValues.contains(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&!defaultValues.contains(prefix))  {	  if(!trigger.equals(prefix))    {    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
351	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(defaultValues))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(defaultValues))  {	  if(!trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	60	2	replace
352	[BUG]  [BUGGY]  if(!trigger.equals(defaultValues))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(defaultValues))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(defaultValues))  {	  if(!trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	60	2	replace
353	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!trigger.equals(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	60	None	replace
354	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  ||!trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	108	2	replace
355	[BUG]  [BUGGY]  if(trigger!=  null  ||!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  ||!trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	108	2	replace
356	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null    ||    trigger.startsWith(prefix))    {    if(prefix  ==  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
357	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null    ||    trigger.startsWith(prefix))    {    if(prefix!=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
358	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  If(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  If(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null    ||    trigger.startsWith(prefix))    {    If(prefix  ==  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	69	None	add
359	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix  >=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix  >=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null    ||    trigger.startsWith(prefix))    {    if(prefix  >=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
360	[BUG]  [BUGGY]  final  Set  <  String>  values  =  Lists.newHashSet();  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  final  Set  <  String>  values  =  Lists.newHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	final  Set  <  String>  values  =  Lists.newHashSet();	  Set    <    String>    values    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
361	[BUG]  [BUGGY]  Set  <  String>  values  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  Lists.newArrayList();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Lists.newArrayList();	  Set    <    String>    values    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
362	[BUG]  [BUGGY]  if(prefix.startsWith(   "_   "))  {  if(prefix.startsWith( "_   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "_   "))  {  if(prefix.startsWith( "_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "_   "))    {    if(prefix.startsWith( "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
363	[BUG]  [BUGGY]  if(prefix.startsWith(   "_   "))  {  if(prefix.startsWith( "._   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "_   "))  {  if(prefix.startsWith( "._   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "_   "))    {    if(prefix.startsWith( "._   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
364	[BUG]  [BUGGY]  if(prefix.startsWith(   "_   "))  {  if(prefix.startsWith( ",_   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "_   "))  {  if(prefix.startsWith( ",_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "_   "))    {    if(prefix.startsWith( ",_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
365	[BUG]  [BUGGY]  ArrayList  <  String>  values  =  new  ArrayList  <  String>();  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  ArrayList  <  String>  values  =  new  ArrayList  <  String>();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	ArrayList  <  String>  values  =  new  ArrayList  <  String>();	  ArrayList    <    String>    values    =    Arrays.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
366	[BUG]  [BUGGY]  List  <  String>  values  =  Arrays.newArrayList();  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Arrays.newArrayList();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Arrays.newArrayList();	  ArrayList    <    String>    values    =    Arrays.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
367	[BUG]  [BUGGY]  List  <  String>  values  =  Arrays.newHashSet();  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Arrays.newHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Arrays.newHashSet();	  ArrayList    <    String>    values    =    Arrays.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
368	[BUG]  [BUGGY]  ArrayList  <  String>  values  =  Lists.newArrayList();  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  ArrayList  <  String>  values  =  Lists.newArrayList();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	ArrayList  <  String>  values  =  Lists.newArrayList();	  ArrayList    <    String>    values    =    Arrays.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
369	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||  prefix.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    if(trigger    ==    null    ||    prefix.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	115	2	replace
370	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(prefix))  {  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    if(trigger    ==    null    ||    prefix.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	115	2	replace
371	[BUG]  [BUGGY]  if(prefix.equals(   "_   "))  {  if(prefix.equals(   "_   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "_   "))  {  if(prefix.equals(   "_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "_   "))    {    if(prefix.equals(   "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
372	[BUG]  [BUGGY]  if(prefix.equals(   "_   "))  {  if(prefix.equals( "._   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "_   "))  {  if(prefix.equals( "._   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "_   "))    {    if(prefix.equals( "._   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
373	[BUG]  [BUGGY]  if(prefix.equals(   "_   "))  {  if(prefix.equals( ",_   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "_   "))  {  if(prefix.equals( ",_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "_   "))    {    if(prefix.equals( ",_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	85	None	add
374	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
375	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
376	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
377	[BUG]  [BUGGY]  if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
378	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  &&!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	129	2	replace
379	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  &&!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	129	2	replace
380	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  prefix.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  prefix.startsWith(   "-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  prefix.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  prefix.startsWith(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    prefix.startsWith(   "-   "))    {    if(prefix.equals(   "   ")||  prefix.startsWith(   "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
381	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  prefix.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  prefix.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  prefix.startsWith(   "-   "))  {  if(prefix.equals(   "   ")||  prefix.startsWith( ".-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    prefix.startsWith(   "-   "))    {    if(prefix.equals(   "   ")||  prefix.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	118	None	add
382	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   ":   "))  {  if(prefix.equals(   "   ")||  prefix.equals(   ":   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   ":   "))  {  if(prefix.equals(   "   ")||  prefix.equals(   ":   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    if(prefix.equals(   "   ")||  prefix.equals(   ":   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
383	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   ":   "))  {  if(prefix.equals(   "   ")||  prefix.equals( ".:   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   ":   "))  {  if(prefix.equals(   "   ")||  prefix.equals( ".:   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    if(prefix.equals(   "   ")||  prefix.equals( ".:   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	143	None	add
384	[BUG]  [BUGGY]  if(prefix.equals(   "0   "))  {  if(prefix.equals(   "0   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "0   "))  {  if(prefix.equals(   "0   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "0   "))    {    if(prefix.equals(   "0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
385	[BUG]  [BUGGY]  if(prefix.equals(   "0   "))  {  if(prefix.equals( ".0   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "0   "))  {  if(prefix.equals( ".0   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "0   "))    {    if(prefix.equals( ".0   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
386	[BUG]  [BUGGY]  if(prefix.equals(   "0   "))  {  If(prefix.equals(   "0   "))  {  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "0   "))  {  If(prefix.equals(   "0   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "0   "))    {    If(prefix.equals(   "0   "))  {	  	non-compiled	[CE]  	83	None	add
387	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
388	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.equals(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
389	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	136	2	replace
390	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.equals(prefix))  {  [FE]  OptionException  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	136	2	replace
391	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  &&  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
392	[BUG]  [BUGGY]  if(trigger  ==  null  &&  trigger.equals(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  &&  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
393	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  prefix.startsWith( "- "))  {	  if(prefix!=    null    &&    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	121	2	replace
394	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  prefix.startsWith( "- "))  {	  if(prefix!=    null    &&    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	121	2	replace
395	[BUG]  [BUGGY]  if(prefix!=  null  ||!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||!prefixes.contains(prefix))  {  return  true;  }	  if(prefix!=    null    &&!prefixes.contains(prefix))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
396	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!prefixes.contains(prefix))  {  return  false;  }	  if(prefix!=    null    &&!prefixes.contains(prefix))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
397	[BUG]  [BUGGY]  if(prefix  ==  null  ||!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||!prefixes.contains(prefix))  {  return  true;  }	  if(prefix!=    null    &&!prefixes.contains(prefix))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
398	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.equals( "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  ||  prefix.equals( "   "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  OptionException  	142	2	replace
399	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.equals( "   "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.equals( "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  prefix.equals( "   "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  OptionException  	142	2	replace
400	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.equals( "   "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	142	2	replace
401	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "   "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.equals( "   "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	142	2	replace
402	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  prefix.equals( "- "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  OptionException  	142	2	replace
403	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals( "- "))  {  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  prefix.equals( "- "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  OptionException  	142	2	replace
404	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext().equals(prefix)||  prefix.equals( "   "));  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext().equals(prefix)||  prefix.equals( "   "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext().equals(prefix)||  prefix.equals( "   "));	  Preconditions.checkState(i.hasNext()    ||    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
405	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "_ ")||  prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "_ ")||  prefix.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
406	[BUG]  [BUGGY]  if(prefix.startsWith( "_ ")||  prefix.startsWith( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "_ ")||  prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "_ ")||  prefix.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
407	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "_ ")||  prefix.endsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "_ ")||  prefix.endsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
408	[BUG]  [BUGGY]  if(prefix.startsWith( "_ ")||  prefix.endsWith( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "_ ")||  prefix.endsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "_ ")||  prefix.endsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
409	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "_ ")||  trigger.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "_ ")||  trigger.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
410	[BUG]  [BUGGY]  if(prefix.startsWith( "_ ")||  trigger.startsWith( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "_ ")||  trigger.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "_ ")||  trigger.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
411	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  prefix);  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Sets.newHashSet(prefix,  prefix);	  Set    <    String>    values    =    Sets.newHashSet(prefix,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
412	[BUG]  [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues,  trigger);  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues,  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Sets.newHashSet(prefix,  defaultValues,  trigger);	  Set    <    String>    values    =    Sets.newHashSet(prefix,    defaultValues);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
413	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    ||    trigger.startsWith(prefix))    {    if(prefix!=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
414	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    ||    trigger.startsWith(prefix))    {    if(prefix  ==  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
415	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix  >=  null  ||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix  >=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    ||    trigger.startsWith(prefix))    {    if(prefix  >=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
416	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  If(prefix!=  null  ||  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]          OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  If(prefix!=  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    ||    trigger.startsWith(prefix))    {    If(prefix!=  null  ||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	71	None	add
417	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals(   "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.equals(   "       "))    {    if(prefix!=  null  &&  prefix.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
418	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals( ".   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.equals(   "       "))    {    if(prefix!=  null  &&  prefix.equals( ".   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
419	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix  ==  null  &&  prefix.equals(   "   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix  ==  null  &&  prefix.equals(   "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.equals(   "       "))    {    if(prefix  ==  null  &&  prefix.equals(   "   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
420	[BUG]  [BUGGY]  if(!trigger.equals(prefix))  {  if(!trigger.equals(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix))  {  if(!trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix))    {    if(!trigger.equals(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
421	[BUG]  [BUGGY]  if(!trigger.equals(prefix))  {  If(!trigger.equals(prefix))  {  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix))  {  If(!trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix))    {    If(!trigger.equals(prefix))  {	  	non-compiled	[CE]  ';'  expected	59	None	add
422	[BUG]  [BUGGY]  if(!trigger.equals(prefix))  {  if(!Trigger.equals(prefix))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix))  {  if(!Trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix))    {    if(!Trigger.equals(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
423	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)&&  trigger.startsWith( "- "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	65	2	replace
424	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&  trigger.startsWith( "- "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	65	2	replace
425	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( ".js "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)||  trigger.startsWith( ".js "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	65	2	replace
426	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( ".js "))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( ".js "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||  trigger.startsWith( ".js "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	65	2	replace
427	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.equals( "- "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	140	2	replace
428	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.equals( "- "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	140	2	replace
429	[BUG]  [BUGGY]  if(prefix.startsWith(   "-   "))  {  if(prefix.startsWith(   "-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "-   "))  {  if(prefix.startsWith(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "-   "))    {    if(prefix.startsWith(   "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
430	[BUG]  [BUGGY]  if(prefix.startsWith(   "-   "))  {  if(prefix.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "-   "))  {  if(prefix.startsWith( ".-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "-   "))    {    if(prefix.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
431	[BUG]  [BUGGY]  if(prefix.startsWith(   "-   "))  {  if(prefix.startsWith( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "-   "))  {  if(prefix.startsWith( ",-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "-   "))    {    if(prefix.startsWith( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
432	[BUG]  [BUGGY]  if(prefix.startsWith(   "-   ")||  prefix.startsWith(   "-   "))  {  if(prefix.startsWith(   "-   ")||  prefix.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "-   ")||  prefix.startsWith(   "-   "))  {  if(prefix.startsWith(   "-   ")||  prefix.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "-   ")||    prefix.startsWith(   "-   "))    {    if(prefix.startsWith(   "-   ")||  prefix.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
433	[BUG]  [BUGGY]  if(prefix.startsWith(   "-   ")||  prefix.startsWith(   "-   "))  {  if(prefix.startsWith( ".-   ")||  prefix.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith(   "-   ")||  prefix.startsWith(   "-   "))  {  if(prefix.startsWith( ".-   ")||  prefix.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(   "-   ")||    prefix.startsWith(   "-   "))    {    if(prefix.startsWith( ".-   ")||  prefix.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
434	[BUG]  [BUGGY]  If(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    If(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	95	None	replace
435	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext();  prefix  =  trigger.next();  [CE]  ')'  expected  [FE]                        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.hasNext();  prefix  =  trigger.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext();  prefix  =  trigger.next();	  Preconditions.checkState(prefix.hasNext());    prefix    =    trigger.next();    	non-compiled	[CE]  ')'  expected	40	None	replace
436	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext()  :  trigger.next();  [CE]  ')'  expected  [FE]                          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.hasNext()  :  trigger.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext()  :  trigger.next();	  Preconditions.checkState(prefix.hasNext());    prefix    =    trigger.next();    	non-compiled	[CE]  ')'  expected	40	None	replace
437	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	48	2	replace
438	[BUG]  [BUGGY]  if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	48	2	replace
439	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  i.next());  [CE]  ')'  expected  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  i.next());  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();  prefix  =  i.next());	  Preconditions.checkState(i.hasNext();    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	161	None	replace
440	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  trigger.startsWith( "_ "))  {	  if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	54	2	replace
441	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "_ "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "_ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  trigger.startsWith( "_ "))  {	  if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	54	2	replace
442	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  if(!trigger.startsWith(prefix)||  i.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  if(!trigger.startsWith(prefix)||  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    i.hasNext())    {    if(!trigger.startsWith(prefix)||  i.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
443	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  If(!trigger.startsWith(prefix)||  i.hasNext())  {  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  If(!trigger.startsWith(prefix)||  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    i.hasNext())    {    If(!trigger.startsWith(prefix)||  i.hasNext())  {	  	non-compiled	[CE]  ';'  expected	111	None	add
444	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( "-   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    if(!trigger.equals(prefix)&&  trigger.startsWith( "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
445	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ".-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    if(!trigger.equals(prefix)&&  trigger.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
446	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  If(!trigger.equals(prefix)&&  trigger.startsWith( "-   "))  {  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  If(!trigger.equals(prefix)&&  trigger.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    If(!trigger.equals(prefix)&&  trigger.startsWith( "-   "))  {	  	non-compiled	[CE]  	55	None	add
447	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
448	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith( ".-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    if(!trigger.startsWith(prefix)||  trigger.startsWith( ".-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
449	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  If(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  [CE]  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  If(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    If(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {	  	non-compiled	[CE]  	64	None	add
450	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    trigger.startsWith(prefix))    {    if(prefix!=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
451	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  if(prefix  ==  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  if(prefix  ==  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    trigger.startsWith(prefix))    {    if(prefix  ==  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
452	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  if(prefix  >=  null  &&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  if(prefix  >=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    trigger.startsWith(prefix))    {    if(prefix  >=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
453	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  If(prefix!=  null  &&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.startsWith(prefix))  {  If(prefix!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    trigger.startsWith(prefix))    {    If(prefix!=  null  &&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  ';'  expected	75	None	add
454	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  if(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  if(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    prefix.equals(   "-   "))    {    if(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	139	None	add
455	[BUG]  [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  If(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  [CE]  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  If(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "   ")||    prefix.equals(   "-   "))    {    If(prefix.equals(   "   ")||  prefix.equals(   "-   "))  {	  	non-compiled	[CE]  	139	None	add
456	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext(),  prefix  =  i.next();  [CE]  ')'  expected  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.hasNext(),  prefix  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext(),  prefix  =  i.next();	  Preconditions.checkState(i.hasNext(),    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	132	None	replace
457	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  trigger.next();  [CE]  ')'  expected  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  trigger.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext(),  prefix  =  trigger.next();	  Preconditions.checkState(i.hasNext(),    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	132	None	replace
458	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  trigger;  [CE]  ')'  expected  [FE]                        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  trigger;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext(),  prefix  =  trigger;	  Preconditions.checkState(i.hasNext(),    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	132	None	replace
459	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
460	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix!=  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix!=  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    if(prefix!=  null)  {  if(!prefixes.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
461	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
462	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix  >=  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefix  >=  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    if(prefix  >=  null)  {  if(!prefixes.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	102	None	add
463	[BUG]  [BUGGY]  If(prefix.equals( "   "))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(prefix.equals( "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(prefix.equals( "   "))  {	  if(prefix.equals(       "       "))    {    If(prefix.equals(       "       "))    {    	non-compiled	[CE]  	99	None	replace
464	[BUG]  [BUGGY]  if(prefix.equals( "true "))  {  If(prefix.equals( "true "))  {  [CE]  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true "))  {  If(prefix.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true "))  {  If(prefix.equals( "true "))  {	  if(prefix.equals(       "       "))    {    If(prefix.equals(       "       "))    {    	non-compiled	[CE]  	99	None	replace
465	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  ')'  expected  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext();)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
466	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	46	2	replace
467	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  true;  }  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(!prefixes.contains(trigger))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	46	2	replace
468	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  if(trigger  ==  null  ||  prefix.startsWith( "_   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  if(trigger  ==  null  ||  prefix.startsWith( "_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    if(trigger  ==  null  ||  prefix.startsWith( "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	164	None	add
469	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  if(trigger  ==  null  ||  prefix.startsWith( "._   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  if(trigger  ==  null  ||  prefix.startsWith( "._   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    if(trigger  ==  null  ||  prefix.startsWith( "._   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	164	None	add
470	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  if(trigger!=  null  ||  prefix.startsWith( "_   "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  if(trigger!=  null  ||  prefix.startsWith( "_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    if(trigger!=  null  ||  prefix.startsWith( "_   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	164	None	add
471	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  If(trigger  ==  null  ||  prefix.startsWith( "_   "))  {  [CE]  [FE]          junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "_   "))  {  If(trigger  ==  null  ||  prefix.startsWith( "_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    If(trigger  ==  null  ||  prefix.startsWith( "_   "))  {	  	non-compiled	[CE]  	164	None	add
472	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(i.hasNext())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null)  {  if(i.hasNext())  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	replace
473	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(i.hasNext())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(i.hasNext())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  if(i.hasNext())  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	replace
474	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(i.hasNext())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null)  {  if(i.hasNext())  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	replace
475	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(i.hasNext())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(i.hasNext())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null)  {  if(i.hasNext())  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	replace
476	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  OptionException  	36	2	replace
477	[BUG]  [BUGGY]  if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }  [FE]  OptionException  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(prefix  ==  null)  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  OptionException  	36	2	replace
478	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()?  prefix   "null "  :  prefix!=  null);  [CE]  :  expected  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()?  prefix   "null "  :  prefix!=  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()?  prefix   "null "  :  prefix!=  null);	  Preconditions.checkArgument(i.hasNext()?   "null   "    :    prefix!=    null);    	non-compiled	[CE]  :  expected	159	None	replace
479	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()? "null "  :  prefix  ==  null);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()? "null "  :  prefix  ==  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()? "null "  :  prefix  ==  null);	  Preconditions.checkArgument(i.hasNext()?   "null   "    :    prefix!=    null);    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
480	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.length()  ==  0);  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.length()  ==  0);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.length()  ==  0);	  Preconditions.checkArgument(prefix.hasNext());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
481	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    if(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
482	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ".Comparison   "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ".Comparison   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    if(!trigger.equals(prefix)&&  trigger.startsWith( ".Comparison   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
483	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  If(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison   "))  {  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  If(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    If(!trigger.equals(prefix)&&  trigger.startsWith( "Comparison   "))  {	  	non-compiled	[CE]  	57	None	add
484	[BUG]  [BUGGY]  Set  <  String>  values  =  prefix.newHashSet();  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  prefix.newHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  prefix.newHashSet();	  Set    <    String>    values    =    i.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	145	None	replace
485	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " ")||  trigger.startsWith( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " ")||  trigger.startsWith( " "))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   ".       ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	91	2	replace
486	[BUG]  [BUGGY]  if(prefix.equals( " ")||  trigger.startsWith( " "))  {  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " ")||  trigger.startsWith( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " ")||  trigger.startsWith( " "))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   ".       ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	91	2	replace
487	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  If(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  If(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.isEmpty())    {    return    false;    }    If(prefix  ==  null)  {  if(!prefixes.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	102	None	add
488	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.equals( " "))  {  [CE]  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.equals( " "))  {  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ||  prefix.equals( " "))  {	  Preconditions.checkState(i.hasNext();    	non-compiled	[CE]  	24	None	replace
489	[BUG]  [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix!=  null  ||  prefix.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  trigger.startsWith(prefix))  {  if(prefix!=  null  ||  prefix.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    ||    trigger.startsWith(prefix))    {    if(prefix!=  null  ||  prefix.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
490	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals( "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&!trigger.equals( "   "))  {	  if(!trigger.equals(   "   "))    {    	compilable	  [FE]  OptionException  	110	2	replace
491	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.equals( "   "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals( "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!trigger.equals( "   "))  {	  if(!trigger.equals(   "   "))    {    	compilable	  [FE]  OptionException  	110	2	replace
492	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  if(!trigger.startsWith(prefix)&|  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  if(!trigger.startsWith(prefix)&|  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    if(!trigger.startsWith(prefix)&|  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
493	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  If(trigger  ==  null  ||  prefix.startsWith( "-   "))  {  [CE]  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(   "-   "))  {  If(trigger  ==  null  ||  prefix.startsWith( "-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    If(trigger  ==  null  ||  prefix.startsWith( "-   "))  {	  	non-compiled	[CE]  	162	None	add
494	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	144	2	replace
495	[BUG]  [BUGGY]  if(prefix.equals( "* ")||  prefix.equals( ": "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	144	2	replace
496	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.contains(Prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.contains(Prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(i.hasNext())  {  if(!prefixes.contains(Prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
497	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.equals( "* "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
498	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.equals( "* "))  {	  if(prefix.equals(   "true   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	80	2	replace
499	[BUG]  [BUGGY]  if(prefix  ==  null  &&!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  &&!prefixes.contains(prefix))  {  return  true;  }	  if(prefix!=    null    &&!prefixes.contains(prefix))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
500	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
501	[BUG]  [BUGGY]  if(trigger  ==  null  ||!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
502	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.startsWith( "_ "))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    If(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	non-compiled	[CE]  	43	None	replace
503	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	56	2	replace
504	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	56	2	replace
505	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ||  trigger.equals(prefix));  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  ||  trigger.equals(prefix));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ||  trigger.equals(prefix));	  Preconditions.checkState(i.hasNext()    ||    trigger.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	166	None	replace
506	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "__ ")||  prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "__ ")||  prefix.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
507	[BUG]  [BUGGY]  if(prefix.startsWith( "__ ")||  prefix.startsWith( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "__ ")||  prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "__ ")||  prefix.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
508	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
509	[BUG]  [BUGGY]  if(prefix.startsWith( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "__ "))  {	  if(prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	6	2	replace
510	[BUG]  [BUGGY]  if(trigger  ==  null)  {  if(!Trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null)  {  if(!Trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null)  {  if(!Trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
511	[BUG]  [BUGGY]  [FE]  OptionException  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null)  {	  if(!trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	18	2	replace
512	[BUG]  [BUGGY]  if(trigger!=  null)  {  [FE]  OptionException  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null)  {	  if(!trigger.startsWith(prefix))    {    if(!Trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	18	2	replace
513	[BUG]  [BUGGY]  if(prefix  ==  null  &&!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  &&!prefixes.isEmpty())  {  return  false;  }	  if(prefix!=    null    &&!prefixes.isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
514	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  &&!trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	108	2	replace
515	[BUG]  [BUGGY]  if(trigger  ==  null  &&!trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  &&!trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	108	2	replace
516	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||!trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	108	2	replace
517	[BUG]  [BUGGY]  if(trigger  ==  null  ||!trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||!trigger.startsWith(prefix))  {	  if(trigger!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	108	2	replace
518	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "-   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ",-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    if(!trigger.equals(prefix)&&  trigger.startsWith( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	55	None	add
519	[BUG]  [BUGGY]  if(!TRIGGER.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  cannot  find  symbol  TRIGGER  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!TRIGGER.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!TRIGGER.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!TRIgger.equals(prefix)&&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  TRIGGER	96	None	replace
520	[BUG]  [BUGGY]  Preconditions.checkState(prefix.equals( " "));  prefix  =  i.next();  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.equals( " "));  prefix  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.equals( " "));  prefix  =  i.next();	  Preconditions.checkState(prefix.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
521	[BUG]  [BUGGY]  Preconditions.checkState(prefix.length()  ==  0);  prefix  =  i.next();  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.length()  ==  0);  prefix  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.length()  ==  0);  prefix  =  i.next();	  Preconditions.checkState(prefix.hasNext());    prefix    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
522	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.hasNext(),  trigger);  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.hasNext(),  trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.hasNext(),  trigger);	  Preconditions.checkArgument(i.hasNext(),    trigger);    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
523	[BUG]  [BUGGY]  if(prefix  ==  null  &&!prefix.equals( " "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&!prefix.equals( " "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  &&!prefix.equals( " "))  {  return  false;  }	  if(prefix!=    null    &&!prefix.equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
524	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.startsWith(TRIGGER))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.startsWith(TRIGGER))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.startsWith(trigger))    {    if(prefix!=  null  &&  prefix.startsWith(TRIGGER))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
525	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.endsWith(trigger))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.startsWith(trigger))  {  if(prefix!=  null  &&  prefix.endsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.startsWith(trigger))    {    if(prefix!=  null  &&  prefix.endsWith(trigger))  {	  	non-compiled	[CE]  illegal  start  of  expression	120	None	add
526	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  &&  prefix.equals( " "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	142	2	replace
527	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  &&  prefix.equals( " "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	142	2	replace
528	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  prefix.startsWith( "-- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	117	2	replace
529	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  prefix.startsWith( "-- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  prefix.startsWith( "-- "))  {	  if(prefix.equals(   "   ")||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	117	2	replace
530	[BUG]  [BUGGY]  Preconditions.checkState(prefix.equals( " ")||  prefix.hasNext());  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.equals( " ")||  prefix.hasNext());  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.equals( " ")||  prefix.hasNext());	  Preconditions.checkState(prefix.hasNext());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
531	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "- "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null)  {  if(!prefix.equals( "- "))  {  return  false;  }	  if(prefix    ==    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	150	2	replace
532	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "- "))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "- "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  if(!prefix.equals( "- "))  {  return  false;  }	  if(prefix    ==    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	150	2	replace
533	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  If(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  If(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    If(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	47	None	add
534	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith( ",-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    if(!trigger.startsWith(prefix)||  trigger.startsWith( ",-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
535	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith( ")-   "))  {  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith(   "-   "))  {  if(!trigger.startsWith(prefix)||  trigger.startsWith( ")-   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    if(!trigger.startsWith(prefix)||  trigger.startsWith( ")-   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
536	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&!prefix.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith(prefix))  {  if(trigger!=  null  &&!prefix.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(trigger!=  null  &&!prefix.equals(prefix)&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	128	None	add
537	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
538	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  prefix.equals( "__ "))  {	  if(prefix.equals(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	86	2	replace
539	[BUG]  [BUGGY]  if(prefix!=  null)  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
540	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
541	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  if(prefix.endsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.endsWith(trigger))    {    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
542	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  trigger.equals( " "))  {	  if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	54	2	replace
543	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.equals( " "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  trigger.equals( " "))  {	  if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	54	2	replace
544	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix  ==  null  ||  prefix.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger.startsWith(prefix))  {  if(prefix  ==  null  ||  prefix.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null    ||    trigger.startsWith(prefix))    {    if(prefix  ==  null  ||  prefix.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
545	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  trigger.startsWith(prefix))  {  If(trigger!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    If(trigger!=    null    &&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	51	None	replace
546	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " ")||  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " ")||  prefix.equals( " "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.equals(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	138	2	replace
547	[BUG]  [BUGGY]  if(prefix.equals( " ")||  prefix.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " ")||  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " ")||  prefix.equals( " "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.equals(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	138	2	replace
548	[BUG]  [BUGGY]  if(prefix.equals( "true "))  {  If(prefix.equals( "false "))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true "))  {  If(prefix.equals( "false "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true "))  {  If(prefix.equals( "false "))  {	  if(prefix.equals(       "       "))    {    If(prefix.equals(       "       "))    {    	non-compiled	[CE]  	99	None	replace
549	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	124	None	add
550	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  prefix.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
551	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  prefix.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
552	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
553	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.equals( "* "))  {	  if(prefix.equals(   "*   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	168	2	replace
554	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  trigger.equals(prefix))  {	  if(prefix!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	76	2	replace
555	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.equals(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  trigger.equals(prefix))  {	  if(prefix!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	76	2	replace
556	[BUG]  [BUGGY]  Set  <  String>  values  =  Lists.newLinkedHashSet();  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  Lists.newLinkedHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Lists.newLinkedHashSet();	  Set    <    String>    values    =    Lists.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	146	None	replace
557	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!trigger.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(!trigger.contains(prefix))  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	replace
558	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!trigger.contains(prefix))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!trigger.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(!trigger.contains(prefix))  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	replace
559	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ",Comparison   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  trigger.startsWith(   "Comparison   "))  {  if(!trigger.equals(prefix)&&  trigger.startsWith( ",Comparison   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    if(!trigger.equals(prefix)&&  trigger.startsWith( ",Comparison   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
560	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( "-- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	163	2	replace
561	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "-- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "-- "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	163	2	replace
562	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.equals( "- "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
563	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.equals( "- "))  {	  if(prefix.equals(   "-   "))    {    	compilable	  [FE]  OptionException  	82	2	replace
564	[BUG]  [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "- "))  {  If  (prefix.startsWith( "- "))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  ||  prefix.startsWith( "- "))  {  If  (prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  ||  prefix.startsWith( "- "))  {  If  (prefix.startsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    If    (prefix.startsWith(trigger))    {    	non-compiled	[CE]  	89	None	replace
565	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  If  (prefix.startsWith( "- "))  {  [CE]  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  If  (prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "- "))  {  If  (prefix.startsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    If    (prefix.startsWith(trigger))    {    	non-compiled	[CE]  	89	None	replace
566	[BUG]  [BUGGY]  if(prefix!=  null)  {  If  (prefix.startsWith(trigger))  {  [CE]  ';'  expected  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  If  (prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  If  (prefix.startsWith(trigger))  {	  if    (prefix.startsWith(trigger))    {    If    (prefix.startsWith(trigger))    {    	non-compiled	[CE]  ';'  expected	89	None	replace
567	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefixes.isEmpty())  {  if(!prefixes.isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(prefixes.isEmpty())  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    if(prefixes.isEmpty())  {  if(!prefixes.isEmpty())  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
568	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.equals( " ")||  prefix.equals( " "))  {  null;  [CE]  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.equals( " ")||  prefix.equals( " "))  {  null;  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.equals( " ")||  prefix.equals( " "))  {  null;	  Preconditions.checkArgument(i.next()!=    null);    	non-compiled	[CE]  	68	None	replace
569	[BUG]  [BUGGY]  ArrayList  <  String>  values  =  Arrays.newArrayList();  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  ArrayList  <  String>  values  =  Arrays.newArrayList();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	ArrayList  <  String>  values  =  Arrays.newArrayList();	  ArrayList    <    String>    values    =    Arrays.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
570	[BUG]  [BUGGY]  if(!Trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [CE]  cannot  find  symbol  Trigger  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!Trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!Trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!Trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  Trigger	94	None	replace
571	[BUG]  [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".true   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ".true   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    if(prefix.equals( ".true   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
572	[BUG]  [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "false   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "true   ")||  trigger.startsWith(prefix))  {  if(prefix.equals(   "false   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   "false   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
573	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith(prefix))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	134	2	replace
574	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith(prefix))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith(prefix))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  OptionException  	134	2	replace
575	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(prefix!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	122	None	add
576	[BUG]  [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  If(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  ';'  expected  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  If(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    If(trigger!=  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	122	None	add
577	[BUG]  [BUGGY]  if(prefix.equals(   "0   "))  {  if(prefix.equals(   "1   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "0   "))  {  if(prefix.equals(   "1   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "0   "))    {    if(prefix.equals(   "1   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
578	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()  &&  trigger!=  null);  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()  &&  trigger!=  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()  &&  trigger!=  null);	  Preconditions.checkArgument(trigger!=    null);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
579	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()  &&  trigger.startsWith(prefix));  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()  &&  trigger.startsWith(prefix));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()  &&  trigger.startsWith(prefix));	  Preconditions.checkArgument(trigger.startsWith(prefix));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
580	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()?  trigger  :  prefix);  [CE]  illegal  start  of  type  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()?  trigger  :  prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()?  trigger  :  prefix);	  Preconditions.checkArgument(trigger.startsWith(prefix));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
581	[BUG]  [BUGGY]  [FE]  OptionException  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  &&  prefix.startsWith( "- "))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    >=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	52	2	replace
582	[BUG]  [BUGGY]  if(trigger!=  null  &&  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  &&  prefix.startsWith( "- "))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    >=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	52	2	replace
583	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  prefix.startsWith( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "* ")||  prefix.startsWith( "* "))  {	  if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
584	[BUG]  [BUGGY]  if(prefix.equals( "* ")||  prefix.startsWith( "* "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "* ")||  prefix.startsWith( "* "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "* ")||  prefix.startsWith( "* "))  {	  if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	8	2	replace
585	[BUG]  [BUGGY]  Preconditions.checkState(prefix.equals( " "));  prefix  =  trigger.next();  [CE]  illegal  start  of  type  [FE]                        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.equals( " "));  prefix  =  trigger.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.equals( " "));  prefix  =  trigger.next();	  Preconditions.checkState(prefix.hasNext());    prefix    =    trigger.next();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
586	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	replace
587	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "Comparison "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	58	2	replace
588	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext()  &&  prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.hasNext()  &&  prefix.equals( " "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext()  &&  prefix.equals( " "));	  Preconditions.checkState(i.hasNext()    &&    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
589	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( ") "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( ") "))  {	  if(prefix    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	70	2	replace
590	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( ") "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( ") "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( ") "))  {	  if(prefix    ==    null    ||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	70	2	replace
591	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(prefix  ==  null  ||  prefix.startsWith(pregger))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(prefix  ==  null  ||  prefix.startsWith(pregger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    if(prefix  ==  null  ||  prefix.startsWith(pregger))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
592	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith( " "))  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  if(trigger  ==  null  ||  prefix.startsWith( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    if(trigger  ==  null  ||  prefix.startsWith( " "))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
593	[BUG]  [BUGGY]  Preconditions.checkState(i.hasOneChild());  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasOneChild());  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasOneChild());	  Preconditions.checkNotNull(trigger);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
594	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals( ",   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.equals(   "       "))    {    if(prefix!=  null  &&  prefix.equals( ",   "))  {	  	non-compiled	[CE]  illegal  start  of  expression	141	None	add
595	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals( "))  {  [CE]  unclosed  string  literal  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  if(prefix!=  null  &&  prefix.equals( "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.equals(   "       "))    {    if(prefix!=  null  &&  prefix.equals( "))  {	  	non-compiled	[CE]  unclosed  string  literal	141	None	add
596	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  trigger.equals(prefix))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	62	2	replace
597	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.equals(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  trigger.equals(prefix))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	62	2	replace
598	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  If(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  If(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    If(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	126	None	add
599	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  i.next());  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext(),  prefix  =  i.next());  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext(),  prefix  =  i.next());	  Preconditions.checkState(i.hasNext(),    prefix    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	132	None	replace
600	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  &&  prefix.startsWith( "- "))  {	  if(prefix!=    null    &&    prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	121	2	replace
601	[BUG]  [BUGGY]  if(prefix  ==  null  &&  prefix.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  &&  prefix.startsWith( "- "))  {	  if(prefix!=    null    &&    prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	121	2	replace
602	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.equals( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "- ")||  trigger.equals( "-- "))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
603	[BUG]  [BUGGY]  if(prefix.equals( "- ")||  trigger.equals( "-- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "- ")||  trigger.equals( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "- ")||  trigger.equals( "-- "))  {	  if(prefix.equals(   "-   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	12	2	replace
604	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)||  trigger.startsWith( "-- "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	65	2	replace
605	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( "-- "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||  trigger.startsWith( "-- "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	65	2	replace
606	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix)&&  trigger.startsWith( "-- "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	65	2	replace
607	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith( "-- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)&&  trigger.startsWith( "-- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)&&  trigger.startsWith( "-- "))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	65	2	replace
608	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* ")||  prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null)  {  if(!prefix.equals( "* ")||  prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	27	2	replace
609	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* ")||  prefix.equals( "* "))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals( "* ")||  prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  if(!prefix.equals( "* ")||  prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	27	2	replace
610	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newHashSet(trigger);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newHashSet(trigger);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newHashSet(trigger);	  List    <    String>    values    =    Lists.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
611	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix,  prefix);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefix,  prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newHashSet(prefix,  prefix);	  List    <    String>    values    =    Lists.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
612	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&!trigger.equals(prefix)&&  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
613	[BUG]  [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  i.hasNext())  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!trigger.equals(prefix)&&  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!trigger.equals(prefix)&&  i.hasNext())  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  OptionException  	131	2	replace
614	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  &&!trigger.equals(prefix))  {	  if(!trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	60	2	replace
615	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  &&!trigger.equals(prefix))  {	  if(!trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	60	2	replace
616	[BUG]  [BUGGY]  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(i.next()))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(i.next()))  {	  if(!trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	60	2	replace
617	[BUG]  [BUGGY]  if(!trigger.equals(i.next()))  {  [FE]  OptionException  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(i.next()))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(i.next()))  {	  if(!trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	60	2	replace
618	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.equals( "false "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  trigger.equals( "false "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
619	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  trigger.equals( "false "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  trigger.equals( "false "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  trigger.equals( "false "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
620	[BUG]  [BUGGY]  if(trigger!=  null)  {  If(!trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]          OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null)  {  If(!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null)  {  If(!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
621	[BUG]  [BUGGY]  if(!trigger.equals( " "))  {  If(!trigger.startsWith(prefix))  {  [CE]  [FE]            OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals( " "))  {  If(!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals( " "))  {  If(!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	non-compiled	[CE]  	17	None	replace
622	[BUG]  [BUGGY]  if(trigger  ==  null)  {  If(!trigger.startsWith(prefix))  {  [CE]  ';'  expected  [FE]              OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null)  {  If(!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null)  {  If(!trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
623	[BUG]  [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  if(prefix.equals( ",   ")&&  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "     ")&&  trigger.startsWith(prefix))  {  if(prefix.equals( ",   ")&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "       ")&&    trigger.startsWith(prefix))    {    if(prefix.equals( ",   ")&&  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
624	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " "))  {  if(!prefixes.isEmpty())  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	101	2	replace
625	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.isEmpty())  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.isEmpty())  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  if(!prefixes.isEmpty())  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	101	2	replace
626	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(prefix.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null)  {  if(prefix.startsWith( "- "))  {	  if    (prefix.startsWith(trigger))    {    if    (prefix.startsWith(trigger))    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
627	[BUG]  [BUGGY]  if(!prefixes.contains(prefix))  {  return  true;  }  [CE]  illegal  start  of  type  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefixes.contains(prefix))  {  return  true;  }	  if(trigger!=    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  type	123	None	replace
628	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  :  prefix;  prefix  =  i.next();  [CE]  ')'  expected  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  :  prefix;  prefix  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  :  prefix;  prefix  =  i.next();	  Preconditions.checkState(i.hasNext();    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	161	None	replace
629	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  :  prefix  =  i.next();  [CE]  ')'  expected  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  :  prefix  =  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  :  prefix  =  i.next();	  Preconditions.checkState(i.hasNext();    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	161	None	replace
630	[BUG]  [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals( ",*   "))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null)  {  if(!prefix.equals(   "*   "))  {  return  false;  }  if(prefix!=  null)  {  if(!prefix.equals( ",*   "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null)    {    if(!prefix.equals(   "*   "))    {    return    false;    }    if(prefix!=  null)  {  if(!prefix.equals( ",*   "))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
631	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  &&!trigger.startsWith(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	153	2	replace
632	[BUG]  [BUGGY]  if(prefix  ==  null  &&!trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  &&!trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  &&!trigger.startsWith(prefix))  {	  if(prefix!=    null    &&!trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	153	2	replace
633	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  if(!trigger.startsWith(prefix)&|  i.hasNext())  {  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  i.hasNext())  {  if(!trigger.startsWith(prefix)&|  i.hasNext())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||    i.hasNext())    {    if(!trigger.startsWith(prefix)&|  i.hasNext())  {	  	non-compiled	[CE]  illegal  start  of  expression	111	None	add
634	[BUG]  [BUGGY]  if(!prefix.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]            OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!prefix.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!prefix.startsWith(prefix)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!trigger.startsWith(prefix)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	63	None	replace
635	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext()  ||  prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.hasNext()  ||  prefix.equals( " "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext()  ||  prefix.equals( " "));	  Preconditions.checkState(i.hasNext()    ||    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
636	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||  prefix.equals( " "))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
637	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.equals( " "))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
638	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.equals(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||  prefix.equals(trigger))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
639	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.equals(trigger))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.equals(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.equals(trigger))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	136	2	replace
640	[BUG]  [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  if(Trigger  ==  null  ||  trigger.equals(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  trigger.equals(prefix))  {  if(Trigger  ==  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    trigger.equals(prefix))    {    if(Trigger  ==  null  ||  trigger.equals(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
641	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( "__ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
642	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "__ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "__ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "__ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "_   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	165	2	replace
643	[BUG]  [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ",*   ")||  trigger.startsWith(prefix))  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   ")||  trigger.startsWith(prefix))  {  if(prefix.equals( ",*   ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   ")||    trigger.startsWith(prefix))    {    if(prefix.equals( ",*   ")||  trigger.startsWith(prefix))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
644	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix,  prefix);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefix,  prefix);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newHashSet(prefix,  prefix);	  List    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
645	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()?  prefix  :  null);  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()?  prefix  :  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()?  prefix  :  null);	  Preconditions.checkArgument(i.hasNext()?   "null   "    :    prefix!=    null);    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
646	[BUG]  [BUGGY]  if(prefix  ==  null  ||!prefixes.contains(prefix))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||!prefixes.contains(prefix))  {  return  false;  }	  if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
647	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  trigger.startsWith(prefix));  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  trigger.startsWith(prefix));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()  ||  trigger.startsWith(prefix));	  Preconditions.checkArgument(trigger.startsWith(prefix));    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
648	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "ComparisonFailure "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)||  trigger.startsWith( "ComparisonFailure "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  OptionException  	58	2	replace
649	[BUG]  [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "ComparisonFailure "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)||  trigger.startsWith( "ComparisonFailure "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)||  trigger.startsWith( "ComparisonFailure "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "Comparison   "))    {    	compilable	  [FE]  OptionException  	58	2	replace
650	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  prefix.equals( " "))  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	131	2	replace
651	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  prefix.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  prefix.equals( " "))  {	  if(!trigger.equals(prefix)&&    i.hasNext())    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	131	2	replace
652	[BUG]  [BUGGY]  if(!TRIgger.equals(prefix)&&  trigger.startsWith(prefix))  {  [CE]  cannot  find  symbol  TRIgger  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!TRIgger.equals(prefix)&&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!TRIgger.equals(prefix)&&  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    if(!TRIgger.equals(prefix)&&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  cannot  find  symbol  TRIgger	96	None	replace
653	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.isEmpty())  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.isEmpty())  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.isEmpty())  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.isEmpty())    {    return    false;    }    if(i.hasNext())  {  if(!prefixes.isEmpty())  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	100	None	add
654	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "+ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith( "- ")||  prefix.startsWith( "+ "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
655	[BUG]  [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "+ "))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.startsWith( "- ")||  prefix.startsWith( "+ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith( "- ")||  prefix.startsWith( "+ "))  {	  if(prefix.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	4	2	replace
656	[BUG]  [BUGGY]  if(prefix.equals( "||  prefix.equals( ": "))  {  [CE]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "||  prefix.equals( ": "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "||  prefix.equals( ": "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   ":   "))    {    	non-compiled	[CE]  	144	None	replace
657	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix  ==  null  ||  prefix.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix  ==  null  ||  prefix.length()  ==  0);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix  ==  null  ||  prefix.length()  ==  0);	  Preconditions.checkArgument(prefix    ==    null);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
658	[BUG]  [BUGGY]  Preconditions.checkState(prefix.equals( " ")||  prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.equals( " ")||  prefix.equals( " "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.equals( " ")||  prefix.equals( " "));	  Preconditions.checkState(i.hasNext();    prefix    =    i.next();    	non-compiled	[CE]  illegal  start  of  type	161	None	replace
659	[BUG]  [BUGGY]  Preconditions.checkState(prefix.hasNext(),  i.next();  [CE]  ')'  expected  [FE]                    junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(prefix.hasNext(),  i.next();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(prefix.hasNext(),  i.next();	  Preconditions.checkState(i.hasNext(),    prefix    =    i.next();    	non-compiled	[CE]  ')'  expected	132	None	replace
660	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  &&  prefix.equals( " "))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	49	2	replace
661	[BUG]  [BUGGY]  if(trigger!=  null  &&  prefix.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]        junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  &&  prefix.equals( " "))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	49	2	replace
662	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  ==  return  true;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  ==  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(i.hasNext())  {  if(!prefixes.contains(prefix))  ==  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
663	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.get(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(i.hasNext())  {  if(!prefixes.get(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(i.hasNext())  {  if(!prefixes.get(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
664	[BUG]  [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefixes);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Sets.newHashSet(prefixes);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Sets.newHashSet(prefixes);	  List    <    String>    values    =    Sets.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
665	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  If(prefix!=  null  &&  prefix.equals(   "   "))  {  [CE]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals(   "     "))  {  If(prefix!=  null  &&  prefix.equals(   "   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=    null    &&    prefix.equals(   "       "))    {    If(prefix!=  null  &&  prefix.equals(   "   "))  {	  	non-compiled	[CE]  	141	None	add
666	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  prefix!=  null);  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  prefix!=  null);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()  ||  prefix!=  null);	  Preconditions.checkArgument(i.next()!=    null);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
667	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  trigger!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    >=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	52	2	replace
668	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger!=  null  &&  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger!=  null  &&  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  trigger!=  null  &&  trigger.startsWith(prefix))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    >=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	52	2	replace
669	[BUG]  [BUGGY]  If(trigger  ==  null  &&  prefix.equals( " "))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(trigger  ==  null  &&  prefix.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(trigger  ==  null  &&  prefix.equals( " "))  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    If(trigger!=    null    &&    trigger.startsWith(prefix))    {    	non-compiled	[CE]  	51	None	replace
670	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( ". ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.startsWith( ". ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   ".       ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	91	2	replace
671	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( ". ")||  trigger.startsWith(prefix))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( ". ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.startsWith( ". ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    if(prefix.equals(   ".       ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	91	2	replace
672	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	replace
673	[BUG]  [BUGGY]  if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  false;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	34	2	replace
674	[BUG]  [BUGGY]  Preconditions.checkArgument(prefix.equals( " ")||  prefix.equals( " "));  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(prefix.equals( " ")||  prefix.equals( " "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(prefix.equals( " ")||  prefix.equals( " "));	  Preconditions.checkArgument(trigger.hasNext());    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
675	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	replace
676	[BUG]  [BUGGY]  if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger.startsWith(prefix))  {  if(!prefixes.contains(prefix))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	replace
677	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	replace
678	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  true;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  if(!prefixes.contains(prefix))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	46	2	replace
679	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix)||  trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(i.hasNext())  {  if(!prefixes.contains(prefix)||  trigger.startsWith(prefix))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	46	2	replace
680	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix)||  trigger.startsWith(prefix))  {  return  true;  }  [FE]  OptionException  [FE]        OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix)||  trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())  {  if(!prefixes.contains(prefix)||  trigger.startsWith(prefix))  {  return  true;  }	  if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    true;    }    	compilable	  [FE]  OptionException  	46	2	replace
681	[BUG]  [BUGGY]  Set  <  String>  values  =  Arrays.newHashSet();  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Set  <  String>  values  =  Arrays.newHashSet();  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Set  <  String>  values  =  Arrays.newHashSet();	  ArrayList    <    String>    values    =    Arrays.newHashSet();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
682	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "/ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( "/ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	134	2	replace
683	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "/ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( "/ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( "/ "))  {	  if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	134	2	replace
684	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.get(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.get(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(i.hasNext())  {  if(!prefixes.get(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
685	[BUG]  [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  return  false;  }  [CE]  illegal  start  of  expression  [FE]      OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(i.hasNext())  {  if(!prefixes.contains(prefix))  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(i.hasNext())  {  if(!prefixes.contains(prefix))  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
686	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.length()  ==  0);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ||  prefix.length()  ==  0);	  Preconditions.checkState(i.hasNext();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
687	[BUG]  [BUGGY]  If(!trigger.equals(prefix))  {  [CE]  ';'  expected  [FE]          OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(!trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(!trigger.equals(prefix))  {	  if(!trigger.startsWith(prefix))    {    If(!trigger.startsWith(prefix))    {    	non-compiled	[CE]  ';'  expected	17	None	replace
688	[BUG]  [BUGGY]  if(prefix.equals(   "*   "))  {  If(prefix.equals(   "*   "))  {  [CE]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "*   "))  {  If(prefix.equals(   "*   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "*   "))    {    If(prefix.equals(   "*   "))  {	  	non-compiled	[CE]  	167	None	add
689	[BUG]  [BUGGY]  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger!=  null)  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  trigger!=  null)  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	50	2	replace
690	[BUG]  [BUGGY]  if(prefix  ==  null  ||  trigger!=  null)  {  [FE]  OptionException  [FE]          junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  trigger!=  null)  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  trigger!=  null)  {	  if(trigger!=    null    &&    trigger.startsWith(prefix))    {    if(trigger    ==    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	50	2	replace
691	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  ==  null)  {  if(!prefixes.get(prefix))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  true;  }  if(prefix  ==  null)  {  if(!prefixes.get(prefix))  {  return  true;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    true;    }    if(prefix  ==  null)  {  if(!prefixes.get(prefix))  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
692	[BUG]  [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  If(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  If(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    If(i.hasNext())  {  if(prefix!=  null)  {  return  false;  }	  	non-compiled	[CE]  ';'  expected	35	None	add
693	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	62	2	replace
694	[BUG]  [BUGGY]  if(trigger  ==  null  ||!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||!trigger.startsWith(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.startsWith(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	62	2	replace
695	[BUG]  [BUGGY]  if(prefix.equals(   "_   "))  {  If(prefix.equals(   "_   "))  {  [CE]  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals(   "_   "))  {  If(prefix.equals(   "_   "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(   "_   "))    {    If(prefix.equals(   "_   "))  {	  	non-compiled	[CE]  	85	None	add
696	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(prefix!=  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( " "))  {  if(prefix!=  null)  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	replace
697	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  if(prefix!=  null)  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  if(prefix!=  null)  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  if(prefix!=  null)  {  return  false;  }	  if(i.hasNext())    {    if(prefix!=    null)    {    return    false;    }    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	36	2	replace
698	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "0 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  prefix.equals( "0 "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	142	2	replace
699	[BUG]  [BUGGY]  if(prefix!=  null  &&  prefix.equals( "0 "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  prefix.equals( "0 "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  prefix.equals( "0 "))  {	  if(prefix!=    null    &&    prefix.equals(   "       "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	142	2	replace
700	[BUG]  [BUGGY]  if(prefix.equals( " "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( " "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( " "))  {  return  false;  }	  if(!prefixes.contains(prefix))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
701	[BUG]  [BUGGY]  [FE]  OptionException  [FE]        OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.isEmpty())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.isEmpty())  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	16	2	replace
702	[BUG]  [BUGGY]  if(!trigger.isEmpty())  {  [FE]  OptionException  [FE]        OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.isEmpty())  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.isEmpty())  {	  if(!trigger.startsWith(prefix))    {    if(!trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	16	2	replace
703	[BUG]  [BUGGY]  If(prefix.equals( "true ")||  trigger.startsWith(prefix))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(prefix.equals( "true ")||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(prefix.equals( "true ")||  trigger.startsWith(prefix))  {	  if(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    If(prefix.equals(       "       ")||    trigger.startsWith(prefix))    {    	non-compiled	[CE]  	92	None	replace
704	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.equals( " "))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.equals( " "))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||  prefix.equals( " "))  {  If(trigger  ==  null  ||  trigger.startsWith(prefix))  {	  if(trigger    ==    null    ||    trigger.startsWith(prefix))    {    If(trigger    ==    null    ||    trigger.startsWith(prefix))    {    	non-compiled	[CE]  	43	None	replace
705	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]            OptionException      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.startsWith(prefix)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(!trigger.startsWith(prefix)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	63	None	replace
706	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( ". "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix  ==  null  ||  prefix.startsWith( ". "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	163	2	replace
707	[BUG]  [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( ". "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null  ||  prefix.startsWith( ". "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix  ==  null  ||  prefix.startsWith( ". "))  {	  if(trigger    ==    null    ||    prefix.startsWith(   "-   "))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	163	2	replace
708	[BUG]  [BUGGY]  If(prefix.equals( "true "))  {  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  If(prefix.equals( "true "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	If(prefix.equals( "true "))  {	  if(prefix.equals(       "       "))    {    If(prefix.equals(       "       "))    {    	non-compiled	[CE]  	99	None	replace
709	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger  ==  null  ||!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	54	2	replace
710	[BUG]  [BUGGY]  if(trigger  ==  null  ||!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [FE]  OptionException  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||!trigger.equals(prefix)||  trigger.startsWith(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger  ==  null  ||!trigger.equals(prefix)||  trigger.startsWith(prefix))  {	  if(!trigger.equals(prefix)||    trigger.startsWith(prefix))    {    	compilable	  [FE]  OptionException  	54	2	replace
711	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.equals( "* "));  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext()  ||  prefix.equals( "* "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext()  ||  prefix.equals( "* "));	  Preconditions.checkState(i.hasNext()    ||    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
712	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix!=  null  &&  trigger.equals( " "))  {	  if(prefix!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	76	2	replace
713	[BUG]  [BUGGY]  if(prefix!=  null  &&  trigger.equals( " "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&  trigger.equals( " "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&  trigger.equals( " "))  {	  if(prefix!=    null    &&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	76	2	replace
714	[BUG]  [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  prefix.equals( "* "));  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkArgument(i.hasNext()  ||  prefix.equals( "* "));  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkArgument(i.hasNext()  ||  prefix.equals( "* "));	  Preconditions.checkArgument(i.hasNext()    ||    prefix.equals(   "   "));    	non-compiled	[CE]  illegal  start  of  type	147	None	replace
715	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.get(prefix))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefixes.contains(prefix))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefixes.get(prefix))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefixes.contains(prefix))    {    return    false;    }    if(prefix  ==  null)  {  if(!prefixes.get(prefix))  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	126	None	add
716	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.equals(prefix)&&  prefix.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	56	2	replace
717	[BUG]  [BUGGY]  if(!trigger.equals(prefix)&&  prefix.startsWith( "- "))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(!trigger.equals(prefix)&&  prefix.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.equals(prefix)&&  prefix.startsWith( "- "))  {	  if(!trigger.equals(prefix)&&    trigger.startsWith(   "-   "))    {    	compilable	  [FE]  OptionException  	56	2	replace
718	[BUG]  [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  trigger.next());  [CE]  ')'  expected  [FE]                      junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  Preconditions.checkState(i.hasNext();  prefix  =  trigger.next());  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	Preconditions.checkState(i.hasNext();  prefix  =  trigger.next());	  Preconditions.checkState(i.hasNext());    prefix    =    trigger.next();    	non-compiled	[CE]  ')'  expected	39	None	replace
719	[BUG]  [BUGGY]  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	136	2	replace
720	[BUG]  [BUGGY]  if(trigger!=  null  ||  trigger.equals(prefix))  {  [FE]  OptionException  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  ||  trigger.equals(prefix))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  ||  trigger.equals(prefix))  {	  if(trigger    ==    null    ||    trigger.equals(prefix))    {    	compilable	  [FE]  OptionException  	136	2	replace
721	[BUG]  [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  If(trigger  ==  null  ||  prefix.startsWith(trigger))  {  [CE]  ';'  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger  ==  null  ||  prefix.startsWith(trigger))  {  If(trigger  ==  null  ||  prefix.startsWith(trigger))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger    ==    null    ||    prefix.startsWith(trigger))    {    If(trigger  ==  null  ||  prefix.startsWith(trigger))  {	  	non-compiled	[CE]  ';'  expected	133	None	add
722	[BUG]  [BUGGY]  if(prefix.equals( "||  prefix.equals( "- "))  {  [CE]  unclosed  string  literal  [FE]    OptionException    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "||  prefix.equals( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "||  prefix.equals( "- "))  {	  if(prefix.equals(   "   ")||    prefix.equals(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	140	None	replace
723	[BUG]  [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals( "))  {  return  false;  }  [CE]  unclosed  string  literal  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix  ==  null)  {  if(!prefix.equals(   "   "))  {  return  false;  }  if(prefix  ==  null)  {  if(!prefix.equals( "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix    ==    null)    {    if(!prefix.equals(   "   "))    {    return    false;    }    if(prefix  ==  null)  {  if(!prefix.equals( "))  {  return  false;  }	  	non-compiled	[CE]  unclosed  string  literal	149	None	add
724	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefix.equals( "* "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]            junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!prefix.equals( "* "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!prefix.equals( "* "))  {  return  false;  }	  if(prefix!=    null    &&!prefix.equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
725	[BUG]  [BUGGY]  if(prefix!=  null  &&!prefix.equals( "- "))  {  return  false;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix!=  null  &&!prefix.equals( "- "))  {  return  false;  }  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix!=  null  &&!prefix.equals( "- "))  {  return  false;  }	  if(prefix!=    null    &&!prefix.equals(   "   "))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
726	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
727	[BUG]  [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(trigger!=  null  &&!trigger.equals(prefix)&&  trigger.startsWith( "- "))  {	  if(trigger!=    null    &&!trigger.equals(prefix)&&    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	129	2	replace
728	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( "/ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals( "true ")||  prefix.startsWith( "/ "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
729	[BUG]  [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( "/ "))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  [FE]    junit.framework.ComparisonFailure:  expected:<[1[    [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  if(prefix.equals( "true ")||  prefix.startsWith( "/ "))  {  [BUGGY]      return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals( "true ")||  prefix.startsWith( "/ "))  {	  if(prefix.equals(   "true   ")||    trigger.startsWith(prefix))    {    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  	158	2	replace
730	[BUG]  [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefixes);  [CE]  illegal  start  of  type  [FE]                junit.framework.ComparisonFailure:  expected:<[1[      [CONTEXT]      public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();      [BUGGY]  List  <  String>  values  =  Lists.newHashSet(prefixes);  [BUGGY]      if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	List  <  String>  values  =  Lists.newHashSet(prefixes);	  List    <    String>    values    =    Lists.newHashSet(prefix);    	non-compiled	[CE]  illegal  start  of  type	156	None	replace
