bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    Preconditions.checkState(value!=  null);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    Preconditions.checkState(value!=  null);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    Preconditions.checkState(value!=  null);		non-compiled	[CE]  cannot  find  symbol  Preconditions	2	None	add
2	[BUG]  [BUGGY]    Preconditions.checkState(option.getClass()!=  defaultValues.get(value));  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    Preconditions.checkState(option.getClass()!=  defaultValues.get(value));  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    Preconditions.checkState(option.getClass()!=  defaultValues.get(value));		non-compiled	[CE]  cannot  find  symbol  Preconditions	2	None	add
3	[BUG]  [BUGGY]    Preconditions.checkState(option.getType()  ==  Token.VAR);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    Preconditions.checkState(option.getType()  ==  Token.VAR);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    Preconditions.checkState(option.getType()  ==  Token.VAR);		non-compiled	[CE]  cannot  find  symbol	2	None	add
4	[BUG]  [BUGGY]    Preconditions.checkArgument(value!=  null);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    Preconditions.checkArgument(value!=  null);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    Preconditions.checkArgument(value!=  null);		non-compiled	[CE]  cannot  find  symbol  Preconditions	2	None	add
5	[BUG]  [BUGGY]    Preconditions.checkState(option.getClass()  ==  defaultValues.get(value));  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    Preconditions.checkState(option.getClass()  ==  defaultValues.get(value));  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    Preconditions.checkState(option.getClass()  ==  defaultValues.get(value));		non-compiled	[CE]  cannot  find  symbol  Preconditions	2	None	add
11	[BUG]  [BUGGY]    final  List  values  =(List)this.defaultValues.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  List  values  =(List)this.defaultValues.get(option);  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  List  values  =(List)this.defaultValues.get(option);		non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	4	None	add
12	[BUG]  [BUGGY]    final  List  values  =  options.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  List  values  =  options.get(option);  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  List  values  =  options.get(option);		non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	4	None	add
13	[BUG]  [BUGGY]    Preconditions.checkState(value  instanceof  List);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    Preconditions.checkState(value  instanceof  List);  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    Preconditions.checkState(value  instanceof  List);		non-compiled	[CE]  cannot  find  symbol  Preconditions	4	None	add
14	[BUG]  [BUGGY]    Preconditions.checkState(value  instanceof  String);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    Preconditions.checkState(value  instanceof  String);  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    Preconditions.checkState(value  instanceof  String);		non-compiled	[CE]  cannot  find  symbol  Preconditions	4	None	add
15	[BUG]  [BUGGY]    defaultValues.add(option);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    defaultValues.add(option);  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    defaultValues.add(option);		non-compiled	[CE]  cannot  find  symbol	4	None	add
21	[BUG]  [BUGGY]  defaultValues.add(defaultValue);  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  defaultValues.add(defaultValue);  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	defaultValues.add(defaultValue);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  defaultValues.add(value);  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  defaultValues.add(value);  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	defaultValues.add(value);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  defaultValues.put(option,  value);  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  defaultValues.put(option,  value);  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	defaultValues.put(option,  value);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  defaultValues.add(option);  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  defaultValues.add(option);  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	defaultValues.add(option);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
25	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
31	[BUG]  [BUGGY]  for(final  Iterator  i  =  trigger.iterator();  i.hasNext();)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  trigger.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  trigger.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
32	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	add	for(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	15	2
33	[BUG]  [BUGGY]  for(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	15	2	replace
34	[BUG]  [BUGGY]  for(final  Iterator  i  =  getDefaultImpl();  i.hasNext();)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  getDefaultImpl();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  getDefaultImpl();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
35	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	  	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
41	[BUG]  [BUGGY]    addNull();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    addNull();  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    addNull();		non-compiled	[CE]  cannot  find  symbol	8	None	add
42	[BUG]  [BUGGY]    defaultValues.add(defaultValue);  [CE]  cannot  find  symbol  defaultValue  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    defaultValues.add(defaultValue);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    defaultValues.add(defaultValue);		non-compiled	[CE]  cannot  find  symbol  defaultValue	8	None	add
43	[BUG]  [BUGGY]    defaultValues.add(option);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    defaultValues.add(option);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    defaultValues.add(option);		non-compiled	[CE]  cannot  find  symbol	8	None	add
44	[BUG]  [BUGGY]    value  =  new  ArrayList();  [CE]  final  parameter  value  may  not  be  assigned  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    value  =  new  ArrayList();  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    value  =  new  ArrayList();		non-compiled	[CE]  final  parameter  value  may  not  be  assigned	8	None	add
45	[BUG]  [BUGGY]    defaultValues.add(value);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    defaultValues.add(value);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    defaultValues.add(value);		non-compiled	[CE]  cannot  find  symbol	8	None	add
51	[BUG]  [BUGGY]  List  valueList  =(List)this.options.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  List  valueList  =(List)this.options.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	List  valueList  =(List)this.options.get(option);	List  valueList  =  (List)  values.get(option);  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	3	None	replace
52	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  List  valueList  =(List)this.values.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	add	List  valueList  =(List)this.values.get(option);	List  valueList  =  (List)  values.get(option);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	3	2
53	[BUG]  [BUGGY]  List  valueList  =(List)this.values.get(option);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  List  valueList  =(List)this.values.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	List  valueList  =(List)this.values.get(option);	List  valueList  =  (List)  values.get(option);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	3	2	replace
53	[BUG]  [BUGGY]  [FE]  UnsupportedOperationException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  List  valueList  =(List)this.defaultValues.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	add	List  valueList  =(List)this.defaultValues.get(option);	List  valueList  =  (List)  values.get(option);  	compilable	  [FE]  UnsupportedOperationException  testSingleOptionSingleArgument	3	2
54	[BUG]  [BUGGY]  List  valueList  =(List)this.defaultValues.get(option);  [FE]  UnsupportedOperationException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  List  valueList  =(List)this.defaultValues.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	List  valueList  =(List)this.defaultValues.get(option);	List  valueList  =  (List)  values.get(option);  	compilable	  [FE]  UnsupportedOperationException  testSingleOptionSingleArgument	3	2	replace
54	[BUG]  [BUGGY]  final  List  valueList  =(List)values.get(option);  [CE]  cannot  assign  a  value  to  final  variable  valueList  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  final  List  valueList  =(List)values.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	final  List  valueList  =(List)values.get(option);	List  valueList  =  (List)  values.get(option);  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  valueList	3	None	replace
62	[BUG]  [BUGGY]  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList!=  null)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	if(valueList!=  null)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	5	2
63	[BUG]  [BUGGY]  if(valueList!=  null)  {  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList!=  null)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	if(valueList!=  null)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	5	2	replace
63	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  ==  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	if(valueList  ==  null  ||  valueList.size()  ==  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2
64	[BUG]  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  ==  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	if(valueList  ==  null  ||  valueList.size()  ==  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2	replace
64	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()!=  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	if(valueList  ==  null  ||  valueList.size()!=  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2
65	[BUG]  [BUGGY]  if(valueList  ==  null  ||  valueList.size()!=  0)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()!=  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	if(valueList  ==  null  ||  valueList.size()!=  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2	replace
65	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	  	if  (valueList  ==  null)  {  	non-compiled	[CE]  <identifier>  expected	5	None	replace
72	[BUG]  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  else  {  defaultValues.add(defaultValue);  }  [CE]  cannot  find  symbol  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  else  {  defaultValues.add(defaultValue);  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  else  {  defaultValues.add(defaultValue);  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
73	[BUG]  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  else  {  defaultValues.add(value);  }  [CE]  cannot  find  symbol  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  else  {  defaultValues.add(value);  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  else  {  defaultValues.add(value);  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
74	[BUG]  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(value);  }  else  {  defaultValues.add(defaultValue);  }  [CE]  cannot  find  symbol  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(value);  }  else  {  defaultValues.add(defaultValue);  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(option.hasArgs())  {  defaultValues.add(value);  }  else  {  defaultValues.add(defaultValue);  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
75	[BUG]  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  [CE]  cannot  find  symbol  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(option.hasArgs())  {  defaultValues.add(defaultValue);  }		non-compiled	[CE]  cannot  find  symbol	14	None	add
81	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(trigger))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith(trigger))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	19	2
82	[BUG]  [BUGGY]  if(prefix.startsWith(trigger))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(trigger))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(trigger))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	19	2	replace
82	[BUG]  [BUGGY]  [FE]  OptionException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(!trigger.startsWith(prefix))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(!trigger.startsWith(prefix))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  OptionException  testSingleOptionSingleArgument	19	2
83	[BUG]  [BUGGY]  if(!trigger.startsWith(prefix))  {  [FE]  OptionException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(!trigger.startsWith(prefix))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(!trigger.startsWith(prefix))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  OptionException  testSingleOptionSingleArgument	19	2	replace
83	[BUG]  [BUGGY]  [FE]  OptionException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(trigger)||  prefix.startsWith( "- "))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith(trigger)||  prefix.startsWith( "- "))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  OptionException  testSingleOptionSingleArgument	19	2
84	[BUG]  [BUGGY]  if(prefix.startsWith(trigger)||  prefix.startsWith( "- "))  {  [FE]  OptionException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(trigger)||  prefix.startsWith( "- "))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(trigger)||  prefix.startsWith( "- "))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  OptionException  testSingleOptionSingleArgument	19	2	replace
84	[BUG]  [BUGGY]  [FE]  OptionException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(trigger)||  prefix.startsWith(prefix))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.startsWith(trigger)||  prefix.startsWith(prefix))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  OptionException  testSingleOptionSingleArgument	19	2
85	[BUG]  [BUGGY]  if(prefix.startsWith(trigger)||  prefix.startsWith(prefix))  {  [FE]  OptionException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(trigger)||  prefix.startsWith(prefix))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(trigger)||  prefix.startsWith(prefix))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  OptionException  testSingleOptionSingleArgument	19	2	replace
85	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	  	if  (trigger.startsWith(prefix))  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
91	[BUG]  [BUGGY]  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    valueList.add(value);  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	    valueList.add(value);		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	6	2
92	[BUG]  [BUGGY]    valueList.add(value);  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    valueList.add(value);  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    valueList.add(value);		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	6	2	add
92	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	6	2
93	[BUG]  [BUGGY]    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	6	2	add
93	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	6	2
94	[BUG]  [BUGGY]    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList!=  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	6	2	add
94	[BUG]  [BUGGY]    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  if(valueList.size()  >  0)  {  valueList.add(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  if(valueList.size()  >  0)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList  ==  null)  {  valueList  =  new  ArrayList();  if(valueList.size()  >  0)  {  valueList.add(value);  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
95	[BUG]  [BUGGY]    if(valueList!=  null)  {  valueList  =  new  ArrayList();  if(valueList.size()  ==  0)  {  valueList.add(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  valueList  =  new  ArrayList();  if(valueList.size()  ==  0)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList!=  null)  {  valueList  =  new  ArrayList();  if(valueList.size()  ==  0)  {  valueList.add(value);  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
101	[BUG]  [BUGGY]    final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  String  prefix  =(String)i.next();  if(prefix.equals(trigger))  {  return  true;  }		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	18	None	add
102	[BUG]  [BUGGY]    final  Iterator  i  =  prefixes.iterator();  [CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Iterator  i  =  prefixes.iterator();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Iterator  i  =  prefixes.iterator();		non-compiled	[CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)	18	None	add
103	[BUG]  [BUGGY]    final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  String  prefix  =(String)i.next();  if(trigger.startsWith(prefix))  {  return  true;  }		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	18	None	add
104	[BUG]  [BUGGY]    final  String  prefix  =(String)i.next();  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  String  prefix  =(String)i.next();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  String  prefix  =(String)i.next();		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	18	None	add
105	[BUG]  [BUGGY]    final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  String  prefix  =(String)i.next();  if(prefix.startsWith(trigger))  {  return  true;  }		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	18	None	add
112	[BUG]  [BUGGY]  valueList.add(defaultValue);  [CE]  cannot  find  symbol  defaultValue  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(defaultValue);  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	valueList.add(defaultValue);	valueList.add(value);  	non-compiled	[CE]  cannot  find  symbol  defaultValue	11	None	replace
113	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(option);  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	add	valueList.add(option);	valueList.add(value);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	11	2
114	[BUG]  [BUGGY]  valueList.add(option);  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(option);  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	valueList.add(option);	valueList.add(value);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	11	2	replace
114	[BUG]  [BUGGY]  valueList.add(new  Object[]  {  );  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(new  Object[]  {  );  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	valueList.add(new  Object[]  {  );	valueList.add(value);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
115	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	add	  	valueList.add(value);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument	11	2
116	[BUG]  [BUGGY]    [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	  	valueList.add(value);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument	11	2	replace
121	[BUG]  [BUGGY]  valueList  =  new  LinkedList();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]  valueList  =  new  LinkedList();  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  LinkedList();	valueList  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
123	[BUG]  [BUGGY]  valueList  =  new  ArrayListWithCapacity(2);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]  valueList  =  new  ArrayListWithCapacity(2);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayListWithCapacity(2);	valueList  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
124	[BUG]  [BUGGY]  valueList  =  new  ArrayListWithCapacity();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]  valueList  =  new  ArrayListWithCapacity();  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayListWithCapacity();	valueList  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
132	[BUG]  [BUGGY]  final  String  prefix  =(String)i.previous();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =(String)i.previous();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.previous();	final  String  prefix  =  (String)  i.next();  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
134	[BUG]  [BUGGY]  static  final  String  prefix  =(String)i.next();  [CE]  illegal  start  of  expression  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]  static  final  String  prefix  =(String)i.next();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	static  final  String  prefix  =(String)i.next();	final  String  prefix  =  (String)  i.next();  	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
141	[BUG]  [BUGGY]    Set  <  String>  prefixes  =  trigger.getPrefix();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  <  String>  prefixes  =  trigger.getPrefix();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  <  String>  prefixes  =  trigger.getPrefix();		non-compiled	[CE]  cannot  find  symbol	16	None	add
142	[BUG]  [BUGGY]    Set  <  String>  prefixes  =  defaultValues.get(trigger);  [CE]  incompatible  types  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  <  String>  prefixes  =  defaultValues.get(trigger);  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  <  String>  prefixes  =  defaultValues.get(trigger);		non-compiled	[CE]  incompatible  types	16	None	add
143	[BUG]  [BUGGY]    Set  <  String>  prefixes  =  trigger.getPrefix();  Preconditions.checkNotNull(prefix);  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  <  String>  prefixes  =  trigger.getPrefix();  Preconditions.checkNotNull(prefix);  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  <  String>  prefixes  =  trigger.getPrefix();  Preconditions.checkNotNull(prefix);		non-compiled	[CE]  cannot  find  symbol	16	None	add
144	[BUG]  [BUGGY]    Set  <  String>  prefixes  =  trigger.getPrefix();  Preconditions.checkState(prefix.length  ==  0);  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  <  String>  prefixes  =  trigger.getPrefix();  Preconditions.checkState(prefix.length  ==  0);  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  <  String>  prefixes  =  trigger.getPrefix();  Preconditions.checkState(prefix.length  ==  0);		non-compiled	[CE]  cannot  find  symbol	16	None	add
145	[BUG]  [BUGGY]    Set  <  String>  prefixes  =  getDefaultPrefixes();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  <  String>  prefixes  =  getDefaultPrefixes();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  <  String>  prefixes  =  getDefaultPrefixes();		non-compiled	[CE]  cannot  find  symbol	16	None	add
151	[BUG]  [BUGGY]    Preconditions.checkState(prefix.length()  ==  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    Preconditions.checkState(prefix.length()  ==  0);  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    Preconditions.checkState(prefix.length()  ==  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	20	None	add
152	[BUG]  [BUGGY]    Preconditions.checkState(prefix.length()!=  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    Preconditions.checkState(prefix.length()!=  0);  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    Preconditions.checkState(prefix.length()!=  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	20	None	add
153	[BUG]  [BUGGY]    final  String  valueList  =(String)valueList.get(prefix);  Preconditions.checkState(valueList.isEmpty());  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  valueList  =(String)valueList.get(prefix);  Preconditions.checkState(valueList.isEmpty());  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  valueList  =(String)valueList.get(prefix);  Preconditions.checkState(valueList.isEmpty());		non-compiled	[CE]  cannot  find  symbol	20	None	add
154	[BUG]  [BUGGY]    final  String  valueList  =(String)valueList.get(prefix);  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  valueList  =(String)valueList.get(prefix);  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  valueList  =(String)valueList.get(prefix);		non-compiled	[CE]  cannot  find  symbol	20	None	add
155	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  valueList  =(String)i.next();  if(valueList.contains(prefix))  {  return  false;  }  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	    final  String  valueList  =(String)i.next();  if(valueList.contains(prefix))  {  return  false;  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	20	2
156	[BUG]  [BUGGY]    final  String  valueList  =(String)i.next();  if(valueList.contains(prefix))  {  return  false;  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  valueList  =(String)i.next();  if(valueList.contains(prefix))  {  return  false;  }  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  valueList  =(String)i.next();  if(valueList.contains(prefix))  {  return  false;  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	20	2	add
161	[BUG]  [BUGGY]    defaultValues.add(defaultValue);  [CE]  cannot  find  symbol  defaultValue  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    defaultValues.add(defaultValue);  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    defaultValues.add(defaultValue);		non-compiled	[CE]  cannot  find  symbol  defaultValue	12	None	add
162	[BUG]  [BUGGY]    defaultValues.add(value);  [CE]  cannot  find  symbol  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    defaultValues.add(value);  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    defaultValues.add(value);		non-compiled	[CE]  cannot  find  symbol	12	None	add
163	[BUG]  [BUGGY]    defaultValues.add(option);  [CE]  cannot  find  symbol  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    defaultValues.add(option);  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    defaultValues.add(option);		non-compiled	[CE]  cannot  find  symbol	12	None	add
164	[BUG]  [BUGGY]    value  =  options.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    value  =  options.get(option);  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    value  =  options.get(option);		non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	12	None	add
165	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    normalised.addAll(valueList);  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	add	    normalised.addAll(valueList);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	12	2
166	[BUG]  [BUGGY]    normalised.addAll(valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    normalised.addAll(valueList);  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    normalised.addAll(valueList);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	12	2	add
171	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option  instanceof  List)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	add	if(option  instanceof  List)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2
172	[BUG]  [BUGGY]  if(option  instanceof  List)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option  instanceof  List)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(option  instanceof  List)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2	replace
172	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(value  instanceof  List)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	add	if(value  instanceof  List)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2
173	[BUG]  [BUGGY]  if(value  instanceof  List)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(value  instanceof  List)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(value  instanceof  List)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2	replace
173	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option.isRequired())  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	add	if(option.isRequired())  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2
174	[BUG]  [BUGGY]  if(option.isRequired())  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option.isRequired())  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(option.isRequired())  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2	replace
174	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(!(option  instanceof  List))  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	add	if(!(option  instanceof  List))  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2
175	[BUG]  [BUGGY]  if(!(option  instanceof  List))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(!(option  instanceof  List))  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(!(option  instanceof  List))  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2	replace
182	[BUG]  [BUGGY]  values.add(option,  valueList);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  values.add(option,  valueList);  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	values.add(option,  valueList);	values.put(option,  valueList);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
183	[BUG]  [BUGGY]  valueList.put(option,  value);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  valueList.put(option,  value);  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.put(option,  value);	values.put(option,  valueList);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
184	[BUG]  [BUGGY]  valueList.add(option,  value);  [CE]  no  suitable  method  found  for  add(Option,Object)  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  valueList.add(option,  value);  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	valueList.add(option,  value);	values.put(option,  valueList);  	non-compiled	[CE]  no  suitable  method  found  for  add(Option,Object)	9	None	replace
185	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	  	values.put(option,  valueList);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument	9	2
186	[BUG]  [BUGGY]    [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	  	values.put(option,  valueList);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[]  testSingleOptionSingleArgument	9	2	replace
191	[BUG]  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  defaultValues.add(defaultValue);  }  [CE]  cannot  find  symbol  defaultValue  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  defaultValues.add(defaultValue);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  defaultValues.add(defaultValue);  }		non-compiled	[CE]  cannot  find  symbol  defaultValue	10	None	add
192	[BUG]  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  valueList.add(defaultValue);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  valueList.add(defaultValue);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  valueList.add(defaultValue);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
193	[BUG]  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  ValueUtils.setValue(option,  value);  }  [CE]  cannot  find  symbol  defaultValue  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  ValueUtils.setValue(option,  value);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  ValueUtils.setValue(option,  value);  }		non-compiled	[CE]  cannot  find  symbol  defaultValue	10	None	add
194	[BUG]  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  defaultValues.add(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  defaultValues.add(value);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  defaultValues.add(value);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
195	[BUG]  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  addOption(option,  value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  addOption(option,  value);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    if(valueList.size()  >  0)  {  valueList.add(defaultValue);  }  else  {  Preconditions.checkState(valueList.isEmpty());  if(valueList.contains(value))  {  addOption(option,  value);  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
2	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.endsWith(trigger))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.endsWith(trigger))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	19	2
3	[BUG]  [BUGGY]  if(prefix.endsWith(trigger))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.endsWith(trigger))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.endsWith(trigger))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	19	2	replace
3	[BUG]  [BUGGY]  if(prefix.startsWith(triggering))  {  [CE]  cannot  find  symbol  triggering  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(triggering))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(triggering))  {	if  (trigger.startsWith(prefix))  {  	non-compiled	[CE]  cannot  find  symbol  triggering	19	None	replace
4	[BUG]  [BUGGY]  if(prefix.startsWith(tregger))  {  [CE]  cannot  find  symbol  tregger  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.startsWith(tregger))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.startsWith(tregger))  {	if  (trigger.startsWith(prefix))  {  	non-compiled	[CE]  cannot  find  symbol  tregger	19	None	replace
22	[BUG]  [BUGGY]  final  String  prefix  =(String)i.prefix;  [CE]  cannot  find  symbol  prefix  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =(String)i.prefix;  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.prefix;	final  String  prefix  =  (String)  i.next();  	non-compiled	[CE]  cannot  find  symbol  prefix	17	None	replace
23	[BUG]  [BUGGY]  final  String  prefix  =(String)i.getPrefix();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =(String)i.getPrefix();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.getPrefix();	final  String  prefix  =  (String)  i.next();  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
24	[BUG]  [BUGGY]  final  String  prefix  =(String)i.prefixes.iterator().next();  [CE]  cannot  find  symbol  prefixes  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =(String)i.prefixes.iterator().next();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.prefixes.iterator().next();	final  String  prefix  =  (String)  i.next();  	non-compiled	[CE]  cannot  find  symbol  prefixes	17	None	replace
42	[BUG]  [BUGGY]    if(values.size()  ==  (numberOfOption))  {  if(valueList.containsKey(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(values.size()  ==  (numberOfOption))  {  if(valueList.containsKey(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(values.size()  ==  (numberOfOption))  {  if(valueList.containsKey(value))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
44	[BUG]  [BUGGY]    if(values.size()  ==  (numberOfOption))  {  for(Object  value  :  defaultValues)  {  addDefaultValue(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(values.size()  ==  (numberOfOption))  {  for(Object  value  :  defaultValues)  {  addDefaultValue(value);  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(values.size()  ==  (numberOfOption))  {  for(Object  value  :  defaultValues)  {  addDefaultValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
45	[BUG]  [BUGGY]    if(values.size()  ==  (numberOfOption))  {  for(Object  value  :  defaultValues)  {  addDefaultValue(defaultValue);  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(values.size()  ==  (numberOfOption))  {  for(Object  value  :  defaultValues)  {  addDefaultValue(defaultValue);  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(values.size()  ==  (numberOfOption))  {  for(Object  value  :  defaultValues)  {  addDefaultValue(defaultValue);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
63	[BUG]  [BUGGY]    valueList.add(defaultValue);  [CE]  cannot  find  symbol  defaultValue  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    valueList.add(defaultValue);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    valueList.add(defaultValue);		non-compiled	[CE]  cannot  find  symbol  defaultValue	8	None	add
64	[BUG]  [BUGGY]  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    valueList.add(null);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	    valueList.add(null);		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	8	2
65	[BUG]  [BUGGY]    valueList.add(null);  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    valueList.add(null);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    valueList.add(null);		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	8	2	add
81	[BUG]  [BUGGY]    Set  <  String>  prefixes  =  getPrefixes();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  <  String>  prefixes  =  getPrefixes();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  <  String>  prefixes  =  getPrefixes();		non-compiled	[CE]  cannot  find  symbol	16	None	add
82	[BUG]  [BUGGY]    Set  <  String>  prefixes  =  defaultValues.iterator();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  <  String>  prefixes  =  defaultValues.iterator();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  <  String>  prefixes  =  defaultValues.iterator();		non-compiled	[CE]  cannot  find  symbol	16	None	add
85	[BUG]  [BUGGY]    final  Set  <  String>  prefixes  =  defaultValues.iterator();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    final  Set  <  String>  prefixes  =  defaultValues.iterator();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    final  Set  <  String>  prefixes  =  defaultValues.iterator();		non-compiled	[CE]  cannot  find  symbol	16	None	add
101	[BUG]  [BUGGY]    defaultValues.add(defaultValue);  [CE]  cannot  find  symbol  defaultValue  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    defaultValues.add(defaultValue);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    defaultValues.add(defaultValue);		non-compiled	[CE]  cannot  find  symbol  defaultValue	10	None	add
102	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    valueList.add(value);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	    valueList.add(value);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1  testSingleOptionSingleArgument	10	2
103	[BUG]  [BUGGY]    valueList.add(value);  [FE]  junit.framework.ComparisonFailure:  expected:<[1  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    valueList.add(value);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    valueList.add(value);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1  testSingleOptionSingleArgument	10	2	add
103	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  ==  1)  {  valueList.add(value);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	    if(valueList.size()  ==  1)  {  valueList.add(value);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	10	2
104	[BUG]  [BUGGY]    if(valueList.size()  ==  1)  {  valueList.add(value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  ==  1)  {  valueList.add(value);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    if(valueList.size()  ==  1)  {  valueList.add(value);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	10	2	add
104	[BUG]  [BUGGY]    defaultValues.add(option);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    defaultValues.add(option);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    defaultValues.add(option);		non-compiled	[CE]  cannot  find  symbol	10	None	add
105	[BUG]  [BUGGY]    defaultValues.add(value);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    defaultValues.add(value);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    defaultValues.add(value);		non-compiled	[CE]  cannot  find  symbol	10	None	add
122	[BUG]  [BUGGY]  valueList.add(new  DefaultValue(value));  [CE]  cannot  find  symbol  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(new  DefaultValue(value));  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	valueList.add(new  DefaultValue(value));	valueList.add(value);  	non-compiled	[CE]  cannot  find  symbol	11	None	replace
123	[BUG]  [BUGGY]  valueList.add(value,  defaultValues);  [CE]  no  suitable  method  found  for  add(Object,Map)  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(value,  defaultValues);  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	valueList.add(value,  defaultValues);	valueList.add(value);  	non-compiled	[CE]  no  suitable  method  found  for  add(Object,Map)	11	None	replace
141	[BUG]  [BUGGY]    Preconditions.checkArgument(prefix.length()  ==  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    Preconditions.checkArgument(prefix.length()  ==  0);  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    Preconditions.checkArgument(prefix.length()  ==  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	20	None	add
142	[BUG]  [BUGGY]    final  String  trigger  =(String)prefixes.iterator();  if(trigger.endsWith(prefix))  {  return  true;  }  [CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  trigger  =(String)prefixes.iterator();  if(trigger.endsWith(prefix))  {  return  true;  }  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  trigger  =(String)prefixes.iterator();  if(trigger.endsWith(prefix))  {  return  true;  }		non-compiled	[CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)	20	None	add
143	[BUG]  [BUGGY]    Preconditions.checkArgument(prefix.length()!=  0);  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    Preconditions.checkArgument(prefix.length()!=  0);  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    Preconditions.checkArgument(prefix.length()!=  0);		non-compiled	[CE]  cannot  find  symbol  Preconditions	20	None	add
144	[BUG]  [BUGGY]    final  String  trigger  =(String)prefixes.iterator();  if(trigger.startsWith(prefix))  {  return  true;  }  [CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  trigger  =(String)prefixes.iterator();  if(trigger.startsWith(prefix))  {  return  true;  }  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  trigger  =(String)prefixes.iterator();  if(trigger.startsWith(prefix))  {  return  true;  }		non-compiled	[CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)	20	None	add
145	[BUG]  [BUGGY]    final  String  trigger  =(String)prefixes.iterator();  if(Trigger.isLikeOption(prefix))  {  return  true;  }  [CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  trigger  =(String)prefixes.iterator();  if(Trigger.isLikeOption(prefix))  {  return  true;  }  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  trigger  =(String)prefixes.iterator();  if(Trigger.isLikeOption(prefix))  {  return  true;  }		non-compiled	[CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)	20	None	add
162	[BUG]  [BUGGY]  if(valueList.size()  ==  (numberOfOption))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.containsKey(value));  addOption(option,  valueList);  }  [CE]  cannot  find  symbol  numberOfOption  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.size()  ==  (numberOfOption))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.containsKey(value));  addOption(option,  valueList);  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  ==  (numberOfOption))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.containsKey(value));  addOption(option,  valueList);  }	values.put(option,  valueList);  	non-compiled	[CE]  cannot  find  symbol  numberOfOption	9	None	replace
163	[BUG]  [BUGGY]  if(valueList.size()  ==  (number))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.containsKey(value));  addOption(option,  valueList);  }  [CE]  cannot  find  symbol  number  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.size()  ==  (number))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.containsKey(value));  addOption(option,  valueList);  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  ==  (number))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.containsKey(value));  addOption(option,  valueList);  }	values.put(option,  valueList);  	non-compiled	[CE]  cannot  find  symbol  number	9	None	replace
164	[BUG]  [BUGGY]  if(valueList.size()  ==  (number))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.isEmpty());  addOption(option,  valueList);  }  [CE]  cannot  find  symbol  number  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.size()  ==  (number))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.isEmpty());  addOption(option,  valueList);  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  ==  (number))  {  values.put(option,  valueList);  }  else  {  Preconditions.checkState(valueList.isEmpty());  addOption(option,  valueList);  }	values.put(option,  valueList);  	non-compiled	[CE]  cannot  find  symbol  number	9	None	replace
183	[BUG]  [BUGGY]  defaultSwitches.add(defaultValue);  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  defaultSwitches.add(defaultValue);  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	defaultSwitches.add(defaultValue);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
184	[BUG]  [BUGGY]  defaultSwitches.put(option,  value);  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  defaultSwitches.put(option,  value);  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	defaultSwitches.put(option,  value);	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
202	[BUG]  [BUGGY]    final  Iterator  i  =  defaultValues.iterator();  [CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Iterator  i  =  defaultValues.iterator();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Iterator  i  =  defaultValues.iterator();		non-compiled	[CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)	18	None	add
203	[BUG]  [BUGGY]    final  Iterator  i  =  prefixes.iterator();  Preconditions.checkArgument(i.hasNext());  [CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Iterator  i  =  prefixes.iterator();  Preconditions.checkArgument(i.hasNext());  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Iterator  i  =  prefixes.iterator();  Preconditions.checkArgument(i.hasNext());		non-compiled	[CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)	18	None	add
204	[BUG]  [BUGGY]    final  Iterator  i  =  prefixes.iterator();  i.hasNext();  [CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Iterator  i  =  prefixes.iterator();  i.hasNext();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Iterator  i  =  prefixes.iterator();  i.hasNext();		non-compiled	[CE]  variable  i  is  already  defined  in  method  looksLikeOption(String)	18	None	add
205	[BUG]  [BUGGY]    final  Set  <  String>  defaultValues  =  i.getDefaultValues();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Set  <  String>  defaultValues  =  i.getDefaultValues();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Set  <  String>  defaultValues  =  i.getDefaultValues();		non-compiled	[CE]  cannot  find  symbol	18	None	add
221	[BUG]  [BUGGY]    option.setValue(value);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    option.setValue(value);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    option.setValue(value);		non-compiled	[CE]  cannot  find  symbol	2	None	add
222	[BUG]  [BUGGY]    if(value  ==  null)  {  if(option.getClass()!=  option.getClass())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    if(value  ==  null)  {  if(option.getClass()!=  option.getClass())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    if(value  ==  null)  {  if(option.getClass()!=  option.getClass())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
223	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	add	    if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	2	2
224	[BUG]  [BUGGY]    if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    if(value  ==  null)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	2	2	add
224	[BUG]  [BUGGY]    if(value  ==  null)  {  if(!option.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    if(value  ==  null)  {  if(!option.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    if(value  ==  null)  {  if(!option.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
225	[BUG]  [BUGGY]    if(value  ==  null)  {  if(option.getClass()!=  option.getClass())  {  addOption(option);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    if(value  ==  null)  {  if(option.getClass()!=  option.getClass())  {  addOption(option);  }  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    if(value  ==  null)  {  if(option.getClass()!=  option.getClass())  {  addOption(option);  }		non-compiled	[CE]  illegal  start  of  expression	2	None	add
243	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    defaultSwitches.put(option,  valueList);  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	add	    defaultSwitches.put(option,  valueList);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	14	2
244	[BUG]  [BUGGY]    defaultSwitches.put(option,  valueList);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    defaultSwitches.put(option,  valueList);  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    defaultSwitches.put(option,  valueList);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	14	2	add
245	[BUG]  [BUGGY]    defaultSwitches.add(defaultValues);  [CE]  cannot  find  symbol  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    defaultSwitches.add(defaultValues);  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    defaultSwitches.add(defaultValues);		non-compiled	[CE]  cannot  find  symbol	14	None	add
263	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  <  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	if(valueList  ==  null  ||  valueList.size()  <  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2
264	[BUG]  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  <  0)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  <  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	if(valueList  ==  null  ||  valueList.size()  <  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2	replace
264	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  ==  1)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	if(valueList  ==  null  ||  valueList.size()  ==  1)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2
265	[BUG]  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  ==  1)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  valueList.size()  ==  1)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	if(valueList  ==  null  ||  valueList.size()  ==  1)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2	replace
283	[BUG]  [BUGGY]  List  valueList  =(List)options.get(value);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  List  valueList  =(List)options.get(value);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	List  valueList  =(List)options.get(value);	List  valueList  =  (List)  values.get(option);  	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	3	None	replace
303	[BUG]  [BUGGY]  for(final  Iterator  i  =  this.defaultValues.iterator();  i.hasNext();)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  this.defaultValues.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  this.defaultValues.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
304	[BUG]  [BUGGY]  for(final  Iterator  i  =  defaultValues.iterator();  i.hasNext();)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  defaultValues.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  defaultValues.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
321	[BUG]  [BUGGY]    final  Set  <  String>  values  =  getDefaultValues();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  Set  <  String>  values  =  getDefaultValues();  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  Set  <  String>  values  =  getDefaultValues();		non-compiled	[CE]  cannot  find  symbol	4	None	add
322	[BUG]  [BUGGY]    Preconditions.checkArgument(!option.isEmpty());  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    Preconditions.checkArgument(!option.isEmpty());  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    Preconditions.checkArgument(!option.isEmpty());		non-compiled	[CE]  cannot  find  symbol	4	None	add
323	[BUG]  [BUGGY]    final  List  values  =(List)options.get(option);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  List  values  =(List)options.get(option);  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  List  values  =(List)options.get(option);		non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	4	None	add
324	[BUG]  [BUGGY]    final  Set  <  String>  values  =  defaultValues.get(option);  [CE]  incompatible  types  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  Set  <  String>  values  =  defaultValues.get(option);  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  Set  <  String>  values  =  defaultValues.get(option);		non-compiled	[CE]  incompatible  types	4	None	add
325	[BUG]  [BUGGY]    final  Set  <  String>  values  =  defaultValues.get(option.getKey());  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  Set  <  String>  values  =  defaultValues.get(option.getKey());  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  Set  <  String>  values  =  defaultValues.get(option.getKey());		non-compiled	[CE]  cannot  find  symbol	4	None	add
341	[BUG]  [BUGGY]  if(option.getArguments().containsKey(value))  {  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option.getArguments().containsKey(value))  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(option.getArguments().containsKey(value))  {	if  (option  instanceof  Argument)  {  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
342	[BUG]  [BUGGY]  if(option.getArgs().containsKey(value))  {  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option.getArgs().containsKey(value))  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(option.getArgs().containsKey(value))  {	if  (option  instanceof  Argument)  {  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
343	[BUG]  [BUGGY]  if(option.getArguments().contains(value))  {  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option.getArguments().contains(value))  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(option.getArguments().contains(value))  {	if  (option  instanceof  Argument)  {  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
361	[BUG]  [BUGGY]    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  valueList.add(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  valueList.add(value);  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
362	[BUG]  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  valueList.add(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  valueList.add(value);  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
363	[BUG]  [BUGGY]    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
364	[BUG]  [BUGGY]    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  addValue(option,  value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList  ==  null)  {  if(valueList.size()  ==  1)  {  addValue(option,  value);  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
365	[BUG]  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  addValue(option,  value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  addValue(option,  value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList!=  null)  {  if(valueList.size()  ==  1)  {  addValue(option,  value);  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
383	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]  valueList  =  new  ArrayList(values.size());  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	valueList  =  new  ArrayList(values.size());	valueList  =  new  ArrayList();  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	7	2
384	[BUG]  [BUGGY]  valueList  =  new  ArrayList(values.size());  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]  valueList  =  new  ArrayList(values.size());  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayList(values.size());	valueList  =  new  ArrayList();  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	7	2	replace
384	[BUG]  [BUGGY]  valueList  =  new  TreeSet();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]  valueList  =  new  TreeSet();  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  TreeSet();	valueList  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
4	[BUG]  [BUGGY]  valueList  =  new  ArrayListWithCapacity(values.size());  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]  valueList  =  new  ArrayListWithCapacity(values.size());  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	valueList  =  new  ArrayListWithCapacity(values.size());	valueList  =  new  ArrayList();  	non-compiled	[CE]  cannot  find  symbol	7	None	replace
31	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	add	    if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	14	2
32	[BUG]  [BUGGY]    if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	14	2	add
32	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(values.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	add	    if(values.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	14	2
33	[BUG]  [BUGGY]    if(values.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(values.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(values.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	14	2	add
33	[BUG]  [BUGGY]    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  setDefaultValue(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  setDefaultValue(value);  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  setDefaultValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
34	[BUG]  [BUGGY]    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  add(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  add(value);  }  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  add(value);  }		non-compiled	[CE]  illegal  start  of  expression	14	None	add
61	[BUG]  [BUGGY]    final  Map.Entry  <  String,JavaType>  values  =  map.entrySet().iterator().next();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  Map.Entry  <  String,JavaType>  values  =  map.entrySet().iterator().next();  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  Map.Entry  <  String,JavaType>  values  =  map.entrySet().iterator().next();		non-compiled	[CE]  cannot  find  symbol	4	None	add
62	[BUG]  [BUGGY]    final  Map.Entry  <  String,Object>  values  =  map.entrySet().iterator().next();  [CE]  cannot  find  symbol  map  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  Map.Entry  <  String,Object>  values  =  map.entrySet().iterator().next();  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  Map.Entry  <  String,Object>  values  =  map.entrySet().iterator().next();		non-compiled	[CE]  cannot  find  symbol  map	4	None	add
63	[BUG]  [BUGGY]    Preconditions.checkArgument(!Options.isEmpty());  [CE]  cannot  find  symbol  Options  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    Preconditions.checkArgument(!Options.isEmpty());  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    Preconditions.checkArgument(!Options.isEmpty());		non-compiled	[CE]  cannot  find  symbol  Options	4	None	add
64	[BUG]  [BUGGY]    Preconditions.checkArgument(!option.isRequired());  [CE]  cannot  find  symbol  Preconditions  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    Preconditions.checkArgument(!option.isRequired());  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    Preconditions.checkArgument(!option.isRequired());		non-compiled	[CE]  cannot  find  symbol  Preconditions	4	None	add
65	[BUG]  [BUGGY]    final  Map.Entry  <  String,JavaType>  values  =  map.entrySet();  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]    final  Map.Entry  <  String,JavaType>  values  =  map.entrySet();  [BUGGY]  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	    final  Map.Entry  <  String,JavaType>  values  =  map.entrySet();		non-compiled	[CE]  cannot  find  symbol	4	None	add
91	[BUG]  [BUGGY]  if(arguments.contains(value))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  if(arguments.contains(value))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	if(arguments.contains(value))  {  throw  new  IllegalArgumentException( " ");  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
93	[BUG]  [BUGGY]  if(arguments.contains(value))  {  for(Object  value  :  defaultSwitches.get(value))  {  writeRawLong(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  if(arguments.contains(value))  {  for(Object  value  :  defaultSwitches.get(value))  {  writeRawLong(value);  }  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	if(arguments.contains(value))  {  for(Object  value  :  defaultSwitches.get(value))  {  writeRawLong(value);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
94	[BUG]  [BUGGY]  if(arguments.contains(value))  {  for(Object  value  :  defaultSwitches.get(value))  {  setDefaultValue(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  [BUGGY]  if(arguments.contains(value))  {  for(Object  value  :  defaultSwitches.get(value))  {  setDefaultValue(value);  }  [BUGGY]    [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	88	88	2	replace	if(arguments.contains(value))  {  for(Object  value  :  defaultSwitches.get(value))  {  setDefaultValue(value);  }	}  	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]    writeOption(option,  value);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    writeOption(option,  value);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    writeOption(option,  value);		non-compiled	[CE]  cannot  find  symbol	2	None	add
122	[BUG]  [BUGGY]    writeOptionValue(option,  value);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    writeOptionValue(option,  value);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    writeOptionValue(option,  value);		non-compiled	[CE]  cannot  find  symbol	2	None	add
123	[BUG]  [BUGGY]    writeOption(option);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    writeOption(option);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    writeOption(option);		non-compiled	[CE]  cannot  find  symbol	2	None	add
124	[BUG]  [BUGGY]    setValue(value);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    setValue(value);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    setValue(value);		non-compiled	[CE]  cannot  find  symbol	2	None	add
125	[BUG]  [BUGGY]    writeOptionLine(option);  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]    writeOptionLine(option);  [BUGGY]  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	    writeOptionLine(option);		non-compiled	[CE]  cannot  find  symbol	2	None	add
154	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  ArrayList  valueList  =(ArrayList)values.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	add	ArrayList  valueList  =(ArrayList)values.get(option);	List  valueList  =  (List)  values.get(option);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	3	2
155	[BUG]  [BUGGY]  ArrayList  valueList  =(ArrayList)values.get(option);  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  [BUGGY]  ArrayList  valueList  =(ArrayList)values.get(option);  [BUGGY]    if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	80	80	2	replace	ArrayList  valueList  =(ArrayList)values.get(option);	List  valueList  =  (List)  values.get(option);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	3	2	replace
181	[BUG]  [BUGGY]    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
182	[BUG]  [BUGGY]    if(valueList.size()  >  0)  {  if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(valueList.size()  >  0)  {  if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(valueList.size()  >  0)  {  if(value.equals( " "))  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
183	[BUG]  [BUGGY]    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  throw  new  IllegalStateException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
184	[BUG]  [BUGGY]    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  createEmptyValue(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  createEmptyValue(value);  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(valueList.size()  ==  0)  {  if(value.equals( " "))  {  createEmptyValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
185	[BUG]  [BUGGY]    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  setDefaultValue(value);  }  [CE]  illegal  start  of  expression  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  setDefaultValue(value);  }  [BUGGY]  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	    if(value.equals( " "))  {  for(Object  value  :  defaultValues)  {  setDefaultValue(value);  }		non-compiled	[CE]  illegal  start  of  expression	12	None	add
212	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  else  {  throw  new  IllegalArgumentException( " ");  }	values.put(option,  valueList);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	9	2
213	[BUG]  [BUGGY]  if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  else  {  throw  new  IllegalArgumentException( " ");  }	values.put(option,  valueList);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	9	2	replace
213	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }	values.put(option,  valueList);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	9	2
214	[BUG]  [BUGGY]  if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.size()  ==  0)  {  values.put(option,  valueList);  }	values.put(option,  valueList);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	9	2	replace
214	[BUG]  [BUGGY]  if(valueList.contains(value))  {  values.put(option,  valueList);  }  else  {  createNode(valueList);  }  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]  if(valueList.contains(value))  {  values.put(option,  valueList);  }  else  {  createNode(valueList);  }  [BUGGY]  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	if(valueList.contains(value))  {  values.put(option,  valueList);  }  else  {  createNode(valueList);  }	values.put(option,  valueList);  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
243	[BUG]  [BUGGY]  valueList.add(new  Object(value));  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(new  Object(value));  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	valueList.add(new  Object(value));	valueList.add(value);  	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	11	None	replace
244	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(new  Object[]  {  null  }  );  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	add	valueList.add(new  Object[]  {  null  }  );	valueList.add(value);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	11	2
245	[BUG]  [BUGGY]  valueList.add(new  Object[]  {  null  }  );  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [BUGGY]  valueList.add(new  Object[]  {  null  }  );  [BUGGY]  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	87	87	2	replace	valueList.add(new  Object[]  {  null  }  );	valueList.add(value);  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	11	2	replace
271	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(value  instanceof  Option)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	add	if(value  instanceof  Option)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2
272	[BUG]  [BUGGY]  if(value  instanceof  Option)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(value  instanceof  Option)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(value  instanceof  Option)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2	replace
272	[BUG]  [BUGGY]  if(option  instanceof  String)  {  [CE]  inconvertible  types  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option  instanceof  String)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(option  instanceof  String)  {	if  (option  instanceof  Argument)  {  	non-compiled	[CE]  inconvertible  types	1	None	replace
273	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(value  instanceof  Argument)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	add	if(value  instanceof  Argument)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2
274	[BUG]  [BUGGY]  if(value  instanceof  Argument)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(value  instanceof  Argument)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(value  instanceof  Argument)  {	if  (option  instanceof  Argument)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	1	2	replace
274	[BUG]  [BUGGY]  if(option  instanceof  Invocation)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  [BUGGY]  if(option  instanceof  Invocation)  {  [BUGGY]  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	2	replace	if(option  instanceof  Invocation)  {	if  (option  instanceof  Argument)  {  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
303	[BUG]  [BUGGY]  final  String  prefix  =(String)i.prefix();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =(String)i.prefix();  [BUGGY]    if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	final  String  prefix  =(String)i.prefix();	final  String  prefix  =  (String)  i.next();  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
332	[BUG]  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList!=  null)  {  if(valueList.size()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
333	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	    if(valueList!=  null)  {  valueList.add(value);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	6	2
334	[BUG]  [BUGGY]    if(valueList!=  null)  {  valueList.add(value);  }  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList!=  null)  {  valueList.add(value);  }		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	6	2	add
334	[BUG]  [BUGGY]  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	    if(valueList  ==  null)  {  valueList.add(value);  }		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	6	2
335	[BUG]  [BUGGY]    if(valueList  ==  null)  {  valueList.add(value);  }  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList  ==  null)  {  valueList.add(value);  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList  ==  null)  {  valueList.add(value);  }		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	6	2	add
335	[BUG]  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]    if(valueList!=  null)  {  if(valueList.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	    if(valueList!=  null)  {  if(valueList.size()  >  0)  {  throw  new  IllegalArgumentException( " ");  }		non-compiled	[CE]  illegal  start  of  expression	6	None	add
364	[BUG]  [BUGGY]  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    valueList.add(value);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	add	    valueList.add(value);		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	8	2
365	[BUG]  [BUGGY]    valueList.add(value);  [FE]  NullPointerException  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  [BUGGY]    valueList.add(value);  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	83	83	2	replace	    valueList.add(value);		compilable	  [FE]  NullPointerException  testSingleOptionSingleArgument	8	2	add
391	[BUG]  [BUGGY]    final  String  prefix  =  prefix.trim().toLowerCase();  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  prefix  =  prefix.trim().toLowerCase();  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  prefix  =  prefix.trim().toLowerCase();		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	20	None	add
392	[BUG]  [BUGGY]    final  String  prefix  =  prefix.toLowerCase();  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  prefix  =  prefix.toLowerCase();  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  prefix  =  prefix.toLowerCase();		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	20	None	add
393	[BUG]  [BUGGY]    final  String  prefix  =  prefix.trim().toLowerCase();  if(prefix.startsWith(prefix))  {  return  true;  }  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  prefix  =  prefix.trim().toLowerCase();  if(prefix.startsWith(prefix))  {  return  true;  }  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  prefix  =  prefix.trim().toLowerCase();  if(prefix.startsWith(prefix))  {  return  true;  }		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	20	None	add
394	[BUG]  [BUGGY]    final  String  prefix  =(String)prefixes.get(prefix);  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  prefix  =(String)prefixes.get(prefix);  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  prefix  =(String)prefixes.get(prefix);		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	20	None	add
395	[BUG]  [BUGGY]    final  String  prefix  =  prefix.trim().toLowerCase();  Preconditions.checkArgument(prefix.length()  ==  0);  [CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]    final  String  prefix  =  prefix.trim().toLowerCase();  Preconditions.checkArgument(prefix.length()  ==  0);  [BUGGY]  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	    final  String  prefix  =  prefix.trim().toLowerCase();  Preconditions.checkArgument(prefix.length()  ==  0);		non-compiled	[CE]  variable  prefix  is  already  defined  in  method  looksLikeOption(String)	20	None	add
423	[BUG]  [BUGGY]  if(valueList  ==  null  ||  ValueUtils.isArray(valueList))  {  [CE]  cannot  find  symbol  ValueUtils  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  ValueUtils.isArray(valueList))  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	if(valueList  ==  null  ||  ValueUtils.isArray(valueList))  {	if  (valueList  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol  ValueUtils	5	None	replace
424	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  values.size()  ==  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	add	if(valueList  ==  null  ||  values.size()  ==  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2
425	[BUG]  [BUGGY]  if(valueList  ==  null  ||  values.size()  ==  0)  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  [BUGGY]  if(valueList  ==  null  ||  values.size()  ==  0)  {  [BUGGY]  valueList  =  new  ArrayList();  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	82	82	2	replace	if(valueList  ==  null  ||  values.size()  ==  0)  {	if  (valueList  ==  null)  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	5	2	replace
451	[BUG]  [BUGGY]    final  Set  prefixes  =  getDefaultPrefixes();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    final  Set  prefixes  =  getDefaultPrefixes();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    final  Set  prefixes  =  getDefaultPrefixes();		non-compiled	[CE]  cannot  find  symbol	16	None	add
452	[BUG]  [BUGGY]    final  Set  prefixes  =  getDefaultPrefixes();  Prefixes.addAll(prefixes);  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    final  Set  prefixes  =  getDefaultPrefixes();  Prefixes.addAll(prefixes);  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    final  Set  prefixes  =  getDefaultPrefixes();  Prefixes.addAll(prefixes);		non-compiled	[CE]  cannot  find  symbol	16	None	add
453	[BUG]  [BUGGY]    final  Set  <  String>  prefixes  =  getDefaultPrefixes();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    final  Set  <  String>  prefixes  =  getDefaultPrefixes();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    final  Set  <  String>  prefixes  =  getDefaultPrefixes();		non-compiled	[CE]  cannot  find  symbol	16	None	add
454	[BUG]  [BUGGY]    final  Set  prefixes  =  getPrefixes();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    final  Set  prefixes  =  getPrefixes();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    final  Set  prefixes  =  getPrefixes();		non-compiled	[CE]  cannot  find  symbol	16	None	add
455	[BUG]  [BUGGY]    Set  prefixes  =  getDefaultPrefixes();  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]    Set  prefixes  =  getDefaultPrefixes();  [BUGGY]  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	    Set  prefixes  =  getDefaultPrefixes();		non-compiled	[CE]  cannot  find  symbol	16	None	add
482	[BUG]  [BUGGY]  for(final  Iterator  i  =  defaultSwitches.iterator();  i.hasNext();)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  defaultSwitches.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  defaultSwitches.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
483	[BUG]  [BUGGY]  [FE]  ClassCastException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	add	for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	compilable	  [FE]  ClassCastException  testSingleOptionSingleArgument	15	2
484	[BUG]  [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [FE]  ClassCastException  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  options.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	compilable	  [FE]  ClassCastException  testSingleOptionSingleArgument	15	2	replace
484	[BUG]  [BUGGY]  for(final  Iterator  i  =  values.iterator();  i.hasNext();)  {  [CE]  cannot  find  symbol  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  [BUGGY]  for(final  Iterator  i  =  values.iterator();  i.hasNext();)  {  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	204	204	2	replace	for(final  Iterator  i  =  values.iterator();  i.hasNext();)  {	for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  	non-compiled	[CE]  cannot  find  symbol	15	None	replace
512	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.equals(trigger))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	add	if(prefix.equals(trigger))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	19	2
513	[BUG]  [BUGGY]  if(prefix.equals(trigger))  {  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  final  String  prefix  =  (String)  i.next();  [BUGGY]  if(prefix.equals(trigger))  {  [BUGGY]  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	207	207	2	replace	if(prefix.equals(trigger))  {	if  (trigger.startsWith(prefix))  {  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	19	2	replace
542	[BUG]  [BUGGY]    ValueUtils.addValue(value,  option);  [CE]  cannot  find  symbol  ValueUtils  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    ValueUtils.addValue(value,  option);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    ValueUtils.addValue(value,  option);		non-compiled	[CE]  cannot  find  symbol  ValueUtils	10	None	add
543	[BUG]  [BUGGY]    if(valueList.size()  ==  (numberof  options))  {  valueList.add(value);  }  [CE]  ')'  expected  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    if(valueList.size()  ==  (numberof  options))  {  valueList.add(value);  }  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    if(valueList.size()  ==  (numberof  options))  {  valueList.add(value);  }		non-compiled	[CE]  ')'  expected	10	None	add
544	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    valueList.add(null);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	    valueList.add(null);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	10	2
545	[BUG]  [BUGGY]    valueList.add(null);  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    valueList.add(null);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    valueList.add(null);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	10	2	add
545	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    valueList.add(option);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	add	    valueList.add(option);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	10	2
546	[BUG]  [BUGGY]    valueList.add(option);  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument  [CONTEXT]  public  void  addValue(final  Option  option,  final  Object  value)  {  if  (option  instanceof  Argument)  {  addOption(option);  }  List  valueList  =  (List)  values.get(option);  if  (valueList  ==  null)  {  valueList  =  new  ArrayList();  [BUGGY]    valueList.add(option);  [BUGGY]  values.put(option,  valueList);  }  valueList.add(value);  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  addValue  [RETURN_TYPE]  void  Option  option  Object  value  [VARIABLES]  List  arguments  normalised  options  valueList  Option  option  Object  value  Set  prefixes  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	84	84	2	replace	    valueList.add(option);		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[[1  testSingleOptionSingleArgument	10	2	add
571	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  String  nameToOption  =(String)i.next();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	add	    final  String  nameToOption  =(String)i.next();		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	18	2
572	[BUG]  [BUGGY]    final  String  nameToOption  =(String)i.next();  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  String  nameToOption  =(String)i.next();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  String  nameToOption  =(String)i.next();		compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[1[  testSingleOptionSingleArgument	18	2	add
572	[BUG]  [BUGGY]    final  Iterator  <  String>  trigger  =((  String)i.next()).looksLikeOption(trigger);  [CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Iterator  <  String>  trigger  =((  String)i.next()).looksLikeOption(trigger);  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Iterator  <  String>  trigger  =((  String)i.next()).looksLikeOption(trigger);		non-compiled	[CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)	18	None	add
573	[BUG]  [BUGGY]    final  Iterator  <  String>  trigger  =((  String)i.next()).looksLikeOption(triggering);  [CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Iterator  <  String>  trigger  =((  String)i.next()).looksLikeOption(triggering);  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Iterator  <  String>  trigger  =((  String)i.next()).looksLikeOption(triggering);		non-compiled	[CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)	18	None	add
574	[BUG]  [BUGGY]    final  String  nameToOption  =(final)i.next();  [CE]  illegal  start  of  expression  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  String  nameToOption  =(final)i.next();  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  String  nameToOption  =(final)i.next();		non-compiled	[CE]  illegal  start  of  expression	18	None	add
575	[BUG]  [BUGGY]    final  Iterator  <  String>  trigger  =((  String)i.next()).hasOption(trigger);  [CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)  [CONTEXT]  public  boolean  looksLikeOption(final  String  trigger)  {  for  (final  Iterator  i  =  prefixes.iterator();  i.hasNext();)  {  [BUGGY]    final  Iterator  <  String>  trigger  =((  String)i.next()).hasOption(trigger);  [BUGGY]  final  String  prefix  =  (String)  i.next();  if  (trigger.startsWith(prefix))  {  return  true;  }  }  return  false;  }  [CLASS]  WriteableCommandLineImpl  [METHOD]  looksLikeOption  [RETURN_TYPE]  boolean  String  trigger  [VARIABLES]  Iterator  i  List  arguments  defaultValues  normalised  options  valueList  Set  prefixes  String  prefix  trigger  boolean  Map  defaultSwitches  defaultValues  nameToOption  optionToProperties  switches  values  	projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	205	205	2	replace	    final  Iterator  <  String>  trigger  =((  String)i.next()).hasOption(trigger);		non-compiled	[CE]  variable  trigger  is  already  defined  in  method  looksLikeOption(String)	18	None	add
