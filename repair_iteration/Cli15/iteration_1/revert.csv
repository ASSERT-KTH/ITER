projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76Preconditions.checkState(value!=null);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76Preconditions.checkState(option.getClass()!=defaultValues.get(value));
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76Preconditions.checkState(option.getType()==Token.VAR);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76Preconditions.checkArgument(value!=null);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76Preconditions.checkState(option.getClass()==defaultValues.get(value));
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalListvalues=(List)this.defaultValues.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalListvalues=options.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80Preconditions.checkState(valueinstanceofList);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80Preconditions.checkState(valueinstanceofString);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80defaultValues.add(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultValues.add(defaultValue);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultValues.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultValues.put(option,value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultValues.add(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=prefixes.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=trigger.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=this.prefixes.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=getDefaultImpl();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83addNull();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83defaultValues.add(defaultValue);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83defaultValues.add(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83value=newArrayList();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83defaultValues.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80ListvalueList=(List)values.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80ListvalueList=(List)this.options.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80ListvalueList=(List)this.values.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80ListvalueList=(List)this.defaultValues.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalListvalueList=(List)values.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null||valueList.size()==0){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null||valueList.size()!=0){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(option.hasArgs()){defaultValues.add(defaultValue);}else{defaultValues.add(defaultValue);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(option.hasArgs()){defaultValues.add(defaultValue);}else{defaultValues.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(option.hasArgs()){defaultValues.add(value);}else{defaultValues.add(defaultValue);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(option.hasArgs()){defaultValues.add(defaultValue);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(trigger.startsWith(prefix)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(prefix.startsWith(trigger)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(!trigger.startsWith(prefix)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(prefix.startsWith(trigger)||prefix.startsWith("-")){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(prefix.startsWith(trigger)||prefix.startsWith(prefix)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82valueList.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null){valueList=newArrayList();values.put(option,valueList);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){valueList=newArrayList();values.put(option,valueList);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null){valueList=newArrayList();if(valueList.size()>0){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){valueList=newArrayList();if(valueList.size()==0){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.next();if(prefix.equals(trigger)){returntrue;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalIteratori=prefixes.iterator();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.next();if(trigger.startsWith(prefix)){returntrue;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.next();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.next();if(prefix.startsWith(trigger)){returntrue;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(defaultValue);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(newObject[]{);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList=newArrayList();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList=newLinkedList();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList=newArrayListWithCapacity(2);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList=newArrayListWithCapacity();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.previous();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205staticfinalStringprefix=(String)i.next();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Set<String>prefixes=trigger.getPrefix();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Set<String>prefixes=defaultValues.get(trigger);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Set<String>prefixes=trigger.getPrefix();Preconditions.checkNotNull(prefix);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Set<String>prefixes=trigger.getPrefix();Preconditions.checkState(prefix.length==0);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Set<String>prefixes=getDefaultPrefixes();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207Preconditions.checkState(prefix.length()==0);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207Preconditions.checkState(prefix.length()!=0);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringvalueList=(String)valueList.get(prefix);Preconditions.checkState(valueList.isEmpty());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringvalueList=(String)valueList.get(prefix);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringvalueList=(String)i.next();if(valueList.contains(prefix)){returnfalse;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87defaultValues.add(defaultValue);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87defaultValues.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87defaultValues.add(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87value=options.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87normalised.addAll(valueList);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(optioninstanceofArgument){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(optioninstanceofList){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(valueinstanceofList){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(option.isRequired()){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(!(optioninstanceofList)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84values.put(option,valueList);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84values.add(option,valueList);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84valueList.put(option,value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84valueList.add(option,value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()>0){valueList.add(defaultValue);}else{defaultValues.add(defaultValue);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()>0){valueList.add(defaultValue);}else{Preconditions.checkState(valueList.isEmpty());if(valueList.contains(value)){valueList.add(defaultValue);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()>0){valueList.add(defaultValue);}else{Preconditions.checkState(valueList.isEmpty());ValueUtils.setValue(option,value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()>0){valueList.add(defaultValue);}else{Preconditions.checkState(valueList.isEmpty());if(valueList.contains(value)){defaultValues.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()>0){valueList.add(defaultValue);}else{Preconditions.checkState(valueList.isEmpty());if(valueList.contains(value)){addOption(option,value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(prefix.endsWith(trigger)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(prefix.startsWith(triggering)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(prefix.startsWith(tregger)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.prefix;
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.getPrefix();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.prefixes.iterator().next();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(values.size()==(numberOfOption)){if(valueList.containsKey(value)){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(values.size()==(numberOfOption)){for(Objectvalue:defaultValues){addDefaultValue(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(values.size()==(numberOfOption)){for(Objectvalue:defaultValues){addDefaultValue(defaultValue);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList.add(defaultValue);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList.add(null);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Set<String>prefixes=getPrefixes();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Set<String>prefixes=defaultValues.iterator();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204finalSet<String>prefixes=defaultValues.iterator();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84defaultValues.add(defaultValue);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84valueList.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()==1){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84defaultValues.add(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84defaultValues.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(newDefaultValue(value));
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(value,defaultValues);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207Preconditions.checkArgument(prefix.length()==0);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringtrigger=(String)prefixes.iterator();if(trigger.endsWith(prefix)){returntrue;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207Preconditions.checkArgument(prefix.length()!=0);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringtrigger=(String)prefixes.iterator();if(trigger.startsWith(prefix)){returntrue;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringtrigger=(String)prefixes.iterator();if(Trigger.isLikeOption(prefix)){returntrue;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()==(numberOfOption)){values.put(option,valueList);}else{Preconditions.checkState(valueList.containsKey(value));addOption(option,valueList);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()==(number)){values.put(option,valueList);}else{Preconditions.checkState(valueList.containsKey(value));addOption(option,valueList);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()==(number)){values.put(option,valueList);}else{Preconditions.checkState(valueList.isEmpty());addOption(option,valueList);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultSwitches.add(defaultValue);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultSwitches.put(option,value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalIteratori=defaultValues.iterator();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalIteratori=prefixes.iterator();Preconditions.checkArgument(i.hasNext());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalIteratori=prefixes.iterator();i.hasNext();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalSet<String>defaultValues=i.getDefaultValues();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76option.setValue(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(value==null){if(option.getClass()!=option.getClass()){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(value==null){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(value==null){if(!option.isEmpty()){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(value==null){if(option.getClass()!=option.getClass()){addOption(option);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultSwitches.put(option,valueList);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88defaultSwitches.add(defaultValues);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null||valueList.size()<0){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null||valueList.size()==1){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80ListvalueList=(List)options.get(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=this.defaultValues.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=defaultValues.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalSet<String>values=getDefaultValues();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80Preconditions.checkArgument(!option.isEmpty());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalListvalues=(List)options.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalSet<String>values=defaultValues.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalSet<String>values=defaultValues.get(option.getKey());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(option.getArguments().containsKey(value)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(option.getArgs().containsKey(value)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(option.getArguments().contains(value)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null){if(valueList.size()==1){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){if(valueList.size()==1){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null){if(valueList.size()==1){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null){if(valueList.size()==1){addValue(option,value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){if(valueList.size()==1){addValue(option,value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList=newArrayList(values.size());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList=newTreeSet();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList=newArrayListWithCapacity(values.size());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(value.equals("")){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(values.size()==0){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(value.equals("")){for(Objectvalue:defaultValues){setDefaultValue(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(value.equals("")){for(Objectvalue:defaultValues){add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalMap.Entry<String,JavaType>values=map.entrySet().iterator().next();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalMap.Entry<String,Object>values=map.entrySet().iterator().next();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80Preconditions.checkArgument(!Options.isEmpty());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80Preconditions.checkArgument(!option.isRequired());
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80finalMap.Entry<String,JavaType>values=map.entrySet();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(arguments.contains(value)){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(arguments.contains(value)){for(Objectvalue:defaultSwitches.get(value)){writeRawLong(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java88if(arguments.contains(value)){for(Objectvalue:defaultSwitches.get(value)){setDefaultValue(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76writeOption(option,value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76writeOptionValue(option,value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76writeOption(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76setValue(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76writeOptionLine(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java80ArrayListvalueList=(ArrayList)values.get(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(valueList.size()==0){if(value.equals("")){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(valueList.size()>0){if(value.equals("")){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(valueList.size()==0){if(value.equals("")){thrownewIllegalStateException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(valueList.size()==0){if(value.equals("")){createEmptyValue(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87if(value.equals("")){for(Objectvalue:defaultValues){setDefaultValue(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()==0){values.put(option,valueList);}else{thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()==0){values.put(option,valueList);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.contains(value)){values.put(option,valueList);}else{createNode(valueList);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(newObject(value));
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java87valueList.add(newObject[]{null});
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(valueinstanceofOption){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(optioninstanceofString){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(valueinstanceofArgument){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java76if(optioninstanceofInvocation){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringprefix=(String)i.prefix();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){if(valueList.size()==0){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList!=null){if(valueList.size()>0){thrownewIllegalArgumentException("");}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java83valueList.add(value);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringprefix=prefix.trim().toLowerCase();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringprefix=prefix.toLowerCase();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringprefix=prefix.trim().toLowerCase();if(prefix.startsWith(prefix)){returntrue;}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringprefix=(String)prefixes.get(prefix);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207finalStringprefix=prefix.trim().toLowerCase();Preconditions.checkArgument(prefix.length()==0);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null||ValueUtils.isArray(valueList)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java82if(valueList==null||values.size()==0){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204finalSetprefixes=getDefaultPrefixes();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204finalSetprefixes=getDefaultPrefixes();Prefixes.addAll(prefixes);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204finalSet<String>prefixes=getDefaultPrefixes();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204finalSetprefixes=getPrefixes();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204Setprefixes=getDefaultPrefixes();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=defaultSwitches.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=options.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java204for(finalIteratori=values.iterator();i.hasNext();){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java207if(prefix.equals(trigger)){
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84ValueUtils.addValue(value,option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84if(valueList.size()==(numberofoptions)){valueList.add(value);}
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84valueList.add(null);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java84valueList.add(option);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringnameToOption=(String)i.next();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalIterator<String>trigger=((String)i.next()).looksLikeOption(trigger);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalIterator<String>trigger=((String)i.next()).looksLikeOption(triggering);
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalStringnameToOption=(final)i.next();
projects/Cli15/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java205finalIterator<String>trigger=((String)i.next()).hasOption(trigger);
