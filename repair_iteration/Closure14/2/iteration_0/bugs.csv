bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
3	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] if (NodeUtil.hasFinally(parent)) { // and have FINALLY block. return computeFallThrough(node.getNext()); } else { return computeFollowNode(fromNode, parent, cfa); }  } else if (parent.getLastChild() == node){ if (cfa != null) { for (Node finallyNode : cfa.finallyMap.get(parent)) { cfa.createEdge(fromNode, Branch.UNCOND, finallyNode); [BUGGY] } [BUGGY] } return computeFollowNode(fromNode, parent, cfa); } }   Node nextSibling = node.getNext();   [CLASS] ControlFlowAnalysis 1 AstControlFlowGraph 1 2 [METHOD] computeFollowNode [RETURN_TYPE] Node  Node fromNode Node node ControlFlowAnalysis cfa [VARIABLES] Multimap finallyMap AbstractCompiler compiler ControlFlowAnalysis cfa boolean edgeAnnotations shouldTraverseFunctions ControlFlowGraph cfg Node body child collection cond cur curHandler deflt elseBlock entry externs finallyNode forNode fromNode init item iter lastJump n next nextSibling node parent previous root thenBlock value Map astPosition nodePriorities priorities Deque exceptionHandler int astPositionCounter priorityCounter Comparator priorityComparator  	projects/Closure14/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.6123724356957946	768	768	3	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (NodeUtil.hasFinally(parent)) { // and have FINALLY block. return computeFallThrough(node.getNext()); } else { return computeFollowNode(fromNode, parent, cfa); }  } else if (parent.getLastChild() == node){ if (cfa != null) { for (Node finallyNode : cfa.finallyMap.get(parent)) { cfa.createEdge(fromNode, Branch.UNCOND, finallyNode); [BUGGY] [BUGGY] } } return computeFollowNode(fromNode, parent, cfa); } }   Node nextSibling = node.getNext();   [CLASS] ControlFlowAnalysis 1 AstControlFlowGraph 1 2 [METHOD] computeFollowNode [RETURN_TYPE] Node  Node fromNode Node node ControlFlowAnalysis cfa [VARIABLES] Multimap finallyMap AbstractCompiler compiler ControlFlowAnalysis cfa boolean edgeAnnotations shouldTraverseFunctions ControlFlowGraph cfg Node body child collection cond cur curHandler deflt elseBlock entry externs finallyNode forNode fromNode init item iter lastJump n next nextSibling node parent previous root thenBlock value Map astPosition nodePriorities priorities Deque exceptionHandler int astPositionCounter priorityCounter Comparator priorityComparator  	projects/Closure14/src/com/google/javascript/jscomp/ControlFlowAnalysis.java	0.6123724356957946	768	768	3	add	
