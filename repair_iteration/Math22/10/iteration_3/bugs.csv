bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  double  lower  =  getLowerCum(x)/  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getLowerCum(x)/  1;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getLowerCum(x)/  1;	  double    lower    =    getLowerCum(x)-    1;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  Double  lower  =  Math.floor(x);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  Double  lower  =  Math.floor(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	Double  lower  =  Math.floor(x);	          double    lower    =    Math.floor(x);    Double    lower    =    Math.floor(x);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getUpperCum(),  x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getUpperCum(),  x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getUpperCum(),  x);	  double    lower    =    Math.sqrt(getLowerCum(),    x);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	add	if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    lower    <    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	19	4	replace
5	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    lower    <    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	19	4	replace
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	add	if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    lower    <    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	19	4	replace
7	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    lower    <    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	19	4	replace
8	[BUG]  [BUGGY]  double  lower  =  Math.rint(x);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.rint(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.rint(x);	  double    lower    =    Math.log(x);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getUpperCum()  /  getLowerCum());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getUpperCum()  /  getLowerCum());  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getUpperCum()  /  getLowerCum());	  double    lower    =    Math.sqrt(getUpperCum());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
10	[BUG]  [BUGGY]  double  lower  =  getUpperCum()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getUpperCum()  -  1;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getUpperCum()  -  1;	  double    lower    =    getLowerCum()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
11	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getInitialValue(),  x  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getInitialValue(),  x  +  1);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getInitialValue(),  x  +  1);	  double    lower    =    Math.sqrt(getInitialValue(),    x);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
12	[BUG]  [BUGGY]  double  lower  =  x.doubleValue()  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  x.doubleValue()  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  x.doubleValue()  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;	  double    lower    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  double  lower  =  x.doubleValue()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  x.doubleValue()  +  1;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  x.doubleValue()  +  1;	  double    lower    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  double  lower  =  getLowerCum()  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getLowerCum()  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getLowerCum()  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;	  double    lower    =    getLowerCum()    /    DEFAULT_INVERSE_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  double  lower  =  getUpperCum()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getUpperCum()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getUpperCum()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;	  double    lower    =    getLowerCum()    /    DEFAULT_INVERSE_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  double  lower  =  getUpperCum(x);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getUpperCum(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getUpperCum(x);	  double    lower    =    getLowerCum(lower);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);  [CE]  variable  lower  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	                double        lower        =        Math.floor(x);        double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);	  	non-compiled	[CE]  variable  lower  is  already  defined  in  method  density(double)	3	None	add
18	[BUG]  [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(x);  double  upper  =  Math.ceil(x);  [CE]  variable  lower  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(x);  double  upper  =  Math.ceil(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	                double        lower        =        Math.floor(x);        double    upper    =    Math.floor(x);    double  lower  =  Math.ceil(x);  double  upper  =  Math.ceil(x);	  	non-compiled	[CE]  variable  lower  is  already  defined  in  method  density(double)	3	None	add
19	[BUG]  [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.log(x);  double  upper  =  Math.floor(x);  [CE]  variable  lower  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.log(x);  double  upper  =  Math.floor(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	                double        lower        =        Math.floor(x);        double    upper    =    Math.floor(x);    double  lower  =  Math.log(x);  double  upper  =  Math.floor(x);	  	non-compiled	[CE]  variable  lower  is  already  defined  in  method  density(double)	3	None	add
20	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getUpperCum(),  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getUpperCum(),  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getUpperCum(),  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	  double    lower    =    Math.sqrt(getLowerCum(),    DEFAULT_INVERSE_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
21	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getInitialValue(),  DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  x);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getInitialValue(),  DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getInitialValue(),  DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  x);	  double    lower    =    Math.sqrt(getInitialValue(),    DEFAULT_INVERSE_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  double  lower  =  Math.log(x);  double  upper  =  Math.log(x);  [CE]  illegal  start  of  type  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.log(x);  double  upper  =  Math.log(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.log(x);  double  upper  =  Math.log(x);	          double    lower    =    Math.floor(x);    double    upper    =    Math.floor(x);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  double  lower  =  Math.ceil(x);  double  upper  =  Math.ceil(x);  [CE]  illegal  start  of  type  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.ceil(x);  double  upper  =  Math.ceil(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.ceil(x);  double  upper  =  Math.ceil(x);	          double    lower    =    Math.floor(x);    double    upper    =    Math.floor(x);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
25	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  If  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  If  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    If  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
26	[BUG]  [BUGGY]  double  lower  =  Math.ceil(lower);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.ceil(lower);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.ceil(lower);	  double    lower    =    Math.ceil(x);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
27	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
28	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  upper  ||  lower  >>  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  upper  ||  lower  >>  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if  (x  <  lower  ||  x  >  upper  ||  lower  >>  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
29	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  upper  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  upper  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if  (x  <  lower  ||  x  >  upper  ||  lower  ==  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	add	if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	26	4	replace
31	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	26	4	replace
32	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    lower    <    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
33	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  If  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  If  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    lower    <    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    If  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
34	[BUG]  [BUGGY]  double  lower  =  getUpperCase(x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getUpperCase(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getUpperCase(x);	  double    lower    =    getLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  double  lower  =  Math.floor(x  /  1);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.floor(x  /  1);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.floor(x  /  1);	  double    lower    =    Math.floor(x    -    1);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
36	[BUG]  [BUGGY]  If  (x  <  lower  ||  x  >  upper  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  ';'  expected  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  If  (x  <  lower  ||  x  >  upper  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	If  (x  <  lower  ||  x  >  upper  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    upper    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    If    (x    <    lower    ||    x    >    upper    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
37	[BUG]  [BUGGY]  double  lower  =  upper.doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  upper.doubleValue();  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  upper.doubleValue();	  double    lower    =    x.doubleValue();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getInitialValue(),  upper);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getInitialValue(),  upper);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getInitialValue(),  upper);	  double    lower    =    Math.sqrt(getInitialValue(),    x);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
39	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  >  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  >  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if  (x  >  lower  ||  x  >  upper  ||  lower  >=  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
40	[BUG]  [BUGGY]  double  lower  =  getLowerCum()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getLowerCum()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getLowerCum()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1;	  double    lower    =    getLowerCum()    /    DEFAULT_INVERSE_ABSOLUTE_ACCURACY;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
41	[BUG]  [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  Double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);  [CE]  variable  lower  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  Double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	                double        lower        =        Math.floor(x);        double    upper    =    Math.floor(x);    Double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);	  	non-compiled	[CE]  variable  lower  is  already  defined  in  method  density(double)	3	None	add
42	[BUG]  [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  Double  upper  =  Math.floor(x);  [CE]  variable  lower  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  Double  upper  =  Math.floor(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	                double        lower        =        Math.floor(x);        double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  Double  upper  =  Math.floor(x);	  	non-compiled	[CE]  variable  lower  is  already  defined  in  method  density(double)	3	None	add
43	[BUG]  [BUGGY]  double  lower  =  getUpperCum(lower);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getUpperCum(lower);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getUpperCum(lower);	  double    lower    =    getLowerCum(lower);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getLowerCum(),  upper);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getLowerCum(),  upper);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getLowerCum(),  upper);	  double    lower    =    Math.sqrt(getLowerCum(),    x);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	add	if  (x  <  lower  ||  x  >  upper  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	26	2	replace
46	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  upper  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if  (x  <  lower  ||  x  >  upper  ||  lower  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    upper    ||    lower    >=    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	compilable	  [FE]  AssertionError  	26	2	replace
47	[BUG]  [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  >  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if  (x  <  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  if  (x  >  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if    (x    <    lower    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    ||    lower    <    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if  (x  >  lower  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  ||  lower  <  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
48	[BUG]  [BUGGY]  Double  lower  =  Math.sqrt(getLowerCum());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  Double  lower  =  Math.sqrt(getLowerCum());  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	Double  lower  =  Math.sqrt(getLowerCum());	  double    lower    =    Math.sqrt(getUpperCum());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
49	[BUG]  [BUGGY]  double  lower  =  Math.floor(x);  Double  lower  =  Math.floor(lower);  [CE]  illegal  start  of  type  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.floor(x);  Double  lower  =  Math.floor(lower);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.floor(x);  Double  lower  =  Math.floor(lower);	          double    lower    =    Math.floor(x);    Double    lower    =    Math.floor(x);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
50	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getInitialValue()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getInitialValue()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getInitialValue()  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	  double    lower    =    Math.sqrt(getInitialValue(),    DEFAULT_INVERSE_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
51	[BUG]  [BUGGY]  double  lower  =  getLowerCase(x  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getLowerCase(x  -  1);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getLowerCase(x  -  1);	  double    lower    =    getLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
52	[BUG]  [BUGGY]  double  lower  =  Math.sqrt(getLowCum());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.sqrt(getLowCum());  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.sqrt(getLowCum());	  double    lower    =    Math.sqrt(getUpperCum());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
53	[BUG]  [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(x);  double  upper  =  Math.floor(x);  [CE]  variable  lower  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {      [BUGGY]          double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(x);  double  upper  =  Math.floor(x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	                double        lower        =        Math.floor(x);        double    upper    =    Math.floor(x);    double  lower  =  Math.ceil(x);  double  upper  =  Math.floor(x);	  	non-compiled	[CE]  variable  lower  is  already  defined  in  method  density(double)	3	None	add
54	[BUG]  [BUGGY]  double  lower  =  Math.min(0.0,  x);  [CE]  illegal  start  of  type  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  Math.min(0.0,  x);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  Math.min(0.0,  x);	  double    lower    =    Math.log(x);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
55	[BUG]  [BUGGY]  double  lower  =  getLowerCase(x  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getLowerCase(x  +  1);  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getLowerCase(x  +  1);	  double    lower    =    getLowerCase(x);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
56	[BUG]  [BUGGY]  if(x  <  =  0  ||  x  >  upper  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  if(x  <  =  0  ||  x  >  upper  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {  [BUGGY]      return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	if(x  <  =  0  ||  x  >  upper  ||  x  >  DEFAULT_INVERSE_ABSOLUTE_ACCURACY)  {	  if    (x    <    lower    ||    x    >    upper    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    if    (x    <    lower    ||    x    >    upper    ||    x    >    DEFAULT_INVERSE_ABSOLUTE_ACCURACY)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
57	[BUG]  [BUGGY]  double  lower  =  getLowerCum()  /  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {      [BUGGY]  double  lower  =  getLowerCum()  /  1;  [BUGGY]      if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	109	109	2	replace	double  lower  =  getLowerCum()  /  1;	  double    lower    =    getLowerCum()    -    1;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
