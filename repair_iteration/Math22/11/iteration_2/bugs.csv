bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  1  /(lower  -  x);  double  lower  =  upper.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(lower  -  x);  double  lower  =  upper.doubleValue();  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(lower    -    x);    double  lower  =  upper.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	add
2	[BUG]  [BUGGY]  return  1  /(lower  -  x);  double  lower  =  lower.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(lower  -  x);  double  lower  =  lower.doubleValue();  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(lower    -    x);    double  lower  =  lower.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	add
3	[BUG]  [BUGGY]  return  1  /(lower  -  x);  double  lower  =  lower  +  x;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(lower  -  x);  double  lower  =  lower  +  x;  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(lower    -    x);    double  lower  =  lower  +  x;	  	non-compiled	[CE]  unreachable  statement	11	None	add
4	[BUG]  [BUGGY]      double  upper  =  lower  -(x  -  lower);  double  upper  =  lower  -(x  -  lower);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -(x  -  lower);  double  upper  =  lower  -(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -(x    -    lower);    double  upper  =  lower  -(x  -  lower);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	15	None	add
5	[BUG]  [BUGGY]      double  upper  =  lower  -(x  -  lower);  double  lower  =  lower  -(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -(x  -  lower);  double  lower  =  lower  -(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -(x    -    lower);    double  lower  =  lower  -(x  -  lower);	  	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	15	None	add
6	[BUG]  [BUGGY]      double  upper  =  lower  -(x  -  lower);  Double  upper  =  lower  -(x  -  lower);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -(x  -  lower);  Double  upper  =  lower  -(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -(x    -    lower);    Double  upper  =  lower  -(x  -  lower);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	15	None	add
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  *(x  -  lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  *(x  -  lower);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	4	replace
8	[BUG]  [BUGGY]  return  1  *(x  -  lower);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  *(x  -  lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  *(x  -  lower);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	4	replace
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(upper  -  x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(upper  -  x);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	3	replace
10	[BUG]  [BUGGY]  return  1  /(upper  -  x);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(upper  -  x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(upper  -  x);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	3	replace
11	[BUG]  [BUGGY]      double  upper  =  Math.floor(x);  double  upper  =  Math.floor(x);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  Math.floor(x);  double  upper  =  Math.floor(x);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    Math.floor(x);    double  upper  =  Math.floor(x);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	13	None	add
12	[BUG]  [BUGGY]      double  upper  =  Math.floor(x);  Double  upper  =  Math.floor(x);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  Math.floor(x);  Double  upper  =  Math.floor(x);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    Math.floor(x);    Double  upper  =  Math.floor(x);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	13	None	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	        double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);	  	compilable	  [FE]  AssertionError  	13	4	add
14	[BUG]  [BUGGY]      double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);	  	compilable	  [FE]  AssertionError  	13	4	add
15	[BUG]  [BUGGY]  double  lower  =  x  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  lower  =  x  -  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  x  -  lower;	      double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	10	None	replace
16	[BUG]  [BUGGY]  double  lower  =  upper  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  lower  =  upper  -  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  upper  -  lower;	      double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	10	None	replace
17	[BUG]  [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  double  upper  =  lower  +(x  *  Math.log(lower));  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  double  upper  =  lower  +(x  *  Math.log(lower));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    *    Math.log(lower));    double  upper  =  lower  +(x  *  Math.log(lower));	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	8	None	add
18	[BUG]  [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  double  lower  =  lower  +(x  *  Math.log(lower));  [CE]  variable  lower  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  double  lower  =  lower  +(x  *  Math.log(lower));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    *    Math.log(lower));    double  lower  =  lower  +(x  *  Math.log(lower));	  	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	8	None	add
19	[BUG]  [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  Double  upper  =  lower  +(x  *  Math.log(lower));  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  Double  upper  =  lower  +(x  *  Math.log(lower));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    *    Math.log(lower));    Double  upper  =  lower  +(x  *  Math.log(lower));	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	8	None	add
20	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  x  =  upper.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  x  =  upper.doubleValue();  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  x  =  upper.doubleValue();	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	1	None	add
21	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  x  =  lower.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  x  =  lower.doubleValue();  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  x  =  lower.doubleValue();	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	1	None	add
22	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  x  =  lower  +(x  -  lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  x  =  lower  +(x  -  lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  x  =  lower  +(x  -  lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	1	None	add
23	[BUG]  [BUGGY]      double  upper  =  lower  +(x  -  lower);  double  upper  =  lower  +(x  -  lower);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  -  lower);  double  upper  =  lower  +(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    -    lower);    double  upper  =  lower  +(x  -  lower);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	4	None	add
24	[BUG]  [BUGGY]      double  upper  =  lower  +(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    -    lower);    double  lower  =  lower  +(x  -  lower);	  	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	4	None	add
25	[BUG]  [BUGGY]      double  upper  =  lower  +(x  -  lower);  Double  upper  =  lower  +(x  -  lower);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  -  lower);  Double  upper  =  lower  +(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    -    lower);    Double  upper  =  lower  +(x  -  lower);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	4	None	add
26	[BUG]  [BUGGY]      double  upper  =  lower  -  lower;  double  upper  =  lower  -  lower;  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -  lower;  double  upper  =  lower  -  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -    lower;    double  upper  =  lower  -  lower;	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	6	None	add
27	[BUG]  [BUGGY]      double  upper  =  lower  -  lower;  double  lower  =  lower  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -  lower;  double  lower  =  lower  -  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -    lower;    double  lower  =  lower  -  lower;	  	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	6	None	add
28	[BUG]  [BUGGY]      double  upper  =  lower  -  lower;  Double  upper  =  lower  -  lower;  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -  lower;  Double  upper  =  lower  -  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -    lower;    Double  upper  =  lower  -  lower;	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	6	None	add
29	[BUG]  [BUGGY]  double  upper  =  x  -  lower;  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  x  -  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  lower;	      double    upper    =    lower    -    lower;    	non-compiled	[CE]  missing  return  statement	7	None	replace
30	[BUG]  [BUGGY]  double  upper  =  lower  -  lower  +  1;  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  -  lower  +  1;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -  lower  +  1;	      double    upper    =    lower    -    lower;    	non-compiled	[CE]  missing  return  statement	7	None	replace
31	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  lower);  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  +(x  *  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  lower);	      double    upper    =    lower    +(x    -    lower);    	non-compiled	[CE]  missing  return  statement	5	None	replace
32	[BUG]  [BUGGY]  solverAbsoluteAccuracy  =  Math.floor(lower,  x);  [CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy  [FE]          AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  solverAbsoluteAccuracy  =  Math.floor(lower,  x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	solverAbsoluteAccuracy  =  Math.floor(lower,  x);	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy	3	None	replace
33	[BUG]  [BUGGY]  solverAbsoluteAccuracy  =  Math.max(lower,  x);  [CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy  [FE]            AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  solverAbsoluteAccuracy  =  Math.max(lower,  x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	solverAbsoluteAccuracy  =  Math.max(lower,  x);	      	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy	3	None	replace
34	[BUG]  [BUGGY]  double  upper  =  lower  /(x  -  lower);  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  /(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  /(x  -  lower);	      double    upper    =    lower    -(x    -    lower);    	non-compiled	[CE]  missing  return  statement	16	None	replace
35	[BUG]  [BUGGY]  double  upper  =  lower  -(x  *  lower);  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  -(x  *  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -(x  *  lower);	      double    upper    =    lower    -(x    -    lower);    	non-compiled	[CE]  missing  return  statement	16	None	replace
36	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.log(upper));	      double    upper    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	9	None	replace
37	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.rint(lower));  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  +(x  *  Math.rint(lower));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.rint(lower));	      double    upper    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  missing  return  statement	9	None	replace
38	[BUG]  [BUGGY]  double  upper  =  Math.log(x);  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  Math.log(x);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.log(x);	      double    upper    =    Math.floor(x);    	non-compiled	[CE]  missing  return  statement	14	None	replace
39	[BUG]  [BUGGY]  double  upper  =  Math.floor(lower);  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  Math.floor(lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.floor(lower);	      double    upper    =    Math.floor(x);    	non-compiled	[CE]  missing  return  statement	14	None	replace
40	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  10.0  /(x  -  lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  10.0  /(x  -  lower);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	5	replace
41	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  10.0  /(x  -  lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  10.0  /(x  -  lower);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	5	replace
42	[BUG]  [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  Double  lower  =  lower  +(x  *  Math.log(lower));  [CE]  variable  lower  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  Double  lower  =  lower  +(x  *  Math.log(lower));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    *    Math.log(lower));    Double  lower  =  lower  +(x  *  Math.log(lower));	  	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	8	None	add
43	[BUG]  [BUGGY]  double  lower  =  Math.floor(lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  lower  =  Math.floor(lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  Math.floor(lower);	      	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	3	None	replace
44	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  lower  +  density(x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  lower  +  density(x);	      	compilable	  [FE]  AssertionError  	3	5	replace
45	[BUG]  [BUGGY]  return  lower  +  density(x);  [FE]  AssertionError  [FE]            AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  lower  +  density(x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  lower  +  density(x);	      	compilable	  [FE]  AssertionError  	3	5	replace
46	[BUG]  [BUGGY]  double  upper  =  lower  -  1;  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  -  1;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -  1;	      double    upper    =    lower    -    lower;    	non-compiled	[CE]  missing  return  statement	7	None	replace
47	[BUG]  [BUGGY]  double  upper  =  lower  /  lower;  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  /  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  /  lower;	      double    upper    =    lower    -    lower;    	non-compiled	[CE]  missing  return  statement	7	None	replace
48	[BUG]  [BUGGY]  return  1  /(lower  -  x);  double  lower  =  lower  -  x;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(lower  -  x);  double  lower  =  lower  -  x;  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(lower    -    x);    double  lower  =  lower  -  x;	  	non-compiled	[CE]  unreachable  statement	11	None	add
49	[BUG]  [BUGGY]      double  upper  =  lower  +(x  -  lower);  Double  lower  =  lower  +(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  -  lower);  Double  lower  =  lower  +(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    -    lower);    Double  lower  =  lower  +(x  -  lower);	  	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	4	None	add
50	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  lower  =  upper.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  lower  =  upper.doubleValue();  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  lower  =  upper.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	add
51	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  lower  =  lower  +(x  -  lower);	  	non-compiled	[CE]  unreachable  statement	1	None	add
52	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  -  lower;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  -  lower;  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  lower  =  lower  -  lower;	  	non-compiled	[CE]  unreachable  statement	1	None	add
53	[BUG]  [BUGGY]  double  upper  =  lower  -(x  /  lower);  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  -(x  /  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -(x  /  lower);	      double    upper    =    lower    -(x    -    lower);    	non-compiled	[CE]  missing  return  statement	16	None	replace
54	[BUG]  [BUGGY]      double  upper  =  lower  -  lower;  Double  lower  =  lower  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -  lower;  Double  lower  =  lower  -  lower;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -    lower;    Double  lower  =  lower  -  lower;	  	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	6	None	add
55	[BUG]  [BUGGY]  double  upper  =  lower  +(x  /  Math.log(lower));  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  lower  +(x  /  Math.log(lower));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  /  Math.log(lower));	      double    upper    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  missing  return  statement	9	None	replace
56	[BUG]  [BUGGY]  double  upper  =  x  +(lower  *  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  upper  =  x  +(lower  *  Math.log(upper));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(lower  *  Math.log(upper));	      double    upper    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	9	None	replace
57	[BUG]  [BUGGY]  double  lower  =  x  -  upper;  [CE]  missing  return  statement  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  double  lower  =  x  -  upper;  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  x  -  upper;	      double    lower    =    lower    -    lower;    	non-compiled	[CE]  missing  return  statement	10	None	replace
58	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower  +  1);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(x  -  lower  +  1);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	4	replace
59	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower  +  1);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  lower  +  1);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	4	replace
60	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  upper);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(x  -  upper);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	3	replace
61	[BUG]  [BUGGY]  return  1  /(x  -  upper);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  upper);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  upper);	  return    1    /(x    -    lower);    	compilable	  [FE]  AssertionError  	2	3	replace
62	[BUG]  [BUGGY]  return  this.denominator  *  Math.floor(x);  [CE]  cannot  find  symbol  denominator  [FE]          AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  this.denominator  *  Math.floor(x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  this.denominator  *  Math.floor(x);	      	non-compiled	[CE]  cannot  find  symbol  denominator	3	None	replace
63	[BUG]  [BUGGY]  return  this.density  *  Math.floor(x);  [CE]  cannot  find  symbol  density  [FE]            AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  this.density  *  Math.floor(x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  this.density  *  Math.floor(x);	      	non-compiled	[CE]  cannot  find  symbol  density	3	None	replace
64	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  /(x  -  lower);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  /(x  -  lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  /(x  -  lower);	  	non-compiled	[CE]  not  a  statement	1	None	add
65	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  x  =  Math.sqrt(lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  x  =  Math.sqrt(lower);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  x  =  Math.sqrt(lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	1	None	add
66	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  x  =  Math.sqrt(new  Double(x));  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(x  -  lower);  double  x  =  Math.sqrt(new  Double(x));  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower);    double  x  =  Math.sqrt(new  Double(x));	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	1	None	add
67	[BUG]  [BUGGY]  return  1  /(lower  -  x);  double  lower  =  upper.doubleValue();  return  1  /(lower  -  x);  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(lower  -  x);  double  lower  =  upper.doubleValue();  return  1  /(lower  -  x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(lower    -    x);    double  lower  =  upper.doubleValue();  return  1  /(lower  -  x);	  	non-compiled	[CE]  double  cannot  be  dereferenced	11	None	add
68	[BUG]  [BUGGY]  return  1  /(lower  -  x);  double  lower  =  Math.abs(x);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]  return  1  /(lower  -  x);  double  lower  =  Math.abs(x);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(lower    -    x);    double  lower  =  Math.abs(x);	  	non-compiled	[CE]  unreachable  statement	11	None	add
69	[BUG]  [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  double  upper  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  +(x  *  Math.log(lower));  double  upper  =  lower  +(x  *  Math.log(upper));  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    +(x    *    Math.log(lower));    double  upper  =  lower  +(x  *  Math.log(upper));	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	8	None	add
70	[BUG]  [BUGGY]      double  upper  =  lower  -(x  -  lower);  double  upper  =  low  -(x  -  lower);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]    public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }    [BUGGY]      double  upper  =  lower  -(x  -  lower);  double  upper  =  low  -(x  -  lower);  [BUGGY]    return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	        double    upper    =    lower    -(x    -    lower);    double  upper  =  low  -(x  -  lower);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	15	None	add
