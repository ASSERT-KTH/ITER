bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Double  upper  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  upper  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  upper  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    Double    upper    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	19	None	replace
2	[BUG]  [BUGGY]  Double  upper  =  lower  +(x  -  lower);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  upper  =  lower  +(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  upper  =  lower  +(x  -  lower);	          double    upper    =    lower    +(x    -    lower);    Double    upper    =    lower    +(x    -    lower);    	non-compiled	[CE]  missing  return  statement	25	None	replace
3	[BUG]  [BUGGY]  double  upper  =  x  -  lower  +  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -  lower  +  1;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  lower  +  1;	  double    upper    =    x    -    lower;    	non-compiled	[CE]  missing  return  statement	29	None	replace
4	[BUG]  [BUGGY]  double  upper  =  lower  -  x;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  -  x;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -  x;	  double    upper    =    x    -    lower;    	non-compiled	[CE]  missing  return  statement	29	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  upper  +  density(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  lower  +  upper  +  density(x);	  return    lower    +    density(x);    	compilable	  [FE]  AssertionError  	45	5	replace
6	[BUG]  [BUGGY]  return  lower  +  upper  +  density(x);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  upper  +  density(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  lower  +  upper  +  density(x);	  return    lower    +    density(x);    	compilable	  [FE]  AssertionError  	45	5	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  /  density(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  lower  /  density(x);	  return    lower    +    density(x);    	compilable	  [FE]  AssertionError  	45	5	replace
8	[BUG]  [BUGGY]  return  lower  /  density(x);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  /  density(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  lower  /  density(x);	  return    lower    +    density(x);    	compilable	  [FE]  AssertionError  	45	5	replace
9	[BUG]  [BUGGY]  double  lower  =  lower  +(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  +(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  +(x  -  lower);	  return    1    /(x    -    lower);    double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	51	None	replace
10	[BUG]  [BUGGY]  double  lower  =  1  +(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  1  +(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  1  +(x  -  lower);	  return    1    /(x    -    lower);    double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	51	None	replace
11	[BUG]  [BUGGY]  Double  upper  =  lower  -(x  -  lower);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  upper  =  lower  -(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  upper  =  lower  -(x  -  lower);	          double    upper    =    lower    -(x    -    lower);    Double    upper    =    lower    -(x    -    lower);    	non-compiled	[CE]  missing  return  statement	6	None	replace
12	[BUG]  [BUGGY]  double  lower  =  Math.floor(x);  [CE]  missing  return  statement  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  Math.floor(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  Math.floor(x);	  double    lower    =    Math.floor(lower);    	non-compiled	[CE]  missing  return  statement	43	None	replace
13	[BUG]  [BUGGY]  double  lower  =  Math.floor(upper);  [CE]  missing  return  statement  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  Math.floor(upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  Math.floor(upper);	  double    lower    =    Math.floor(lower);    	non-compiled	[CE]  missing  return  statement	43	None	replace
14	[BUG]  [BUGGY]  double  lower  =  upper.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  upper.doubleValue();	  return    1    /(lower    -    x);    double    lower    =    upper.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	1	None	replace
15	[BUG]  [BUGGY]  return  lower  +  density(x);  double  lower  =  lower  +  density(x);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  density(x);  double  lower  =  lower  +  density(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    lower    +    density(x);    double  lower  =  lower  +  density(x);	  	non-compiled	[CE]  unreachable  statement	44	None	add
16	[BUG]  [BUGGY]  return  lower  +  density(x);  double  lower  =  density(x);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  density(x);  double  lower  =  density(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    lower    +    density(x);    double  lower  =  density(x);	  	non-compiled	[CE]  unreachable  statement	44	None	add
17	[BUG]  [BUGGY]  return  lower  +  density(x);  double  lower  =  lower  -  density(x);  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  density(x);  double  lower  =  lower  -  density(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    lower    +    density(x);    double  lower  =  lower  -  density(x);	  	non-compiled	[CE]  unreachable  statement	44	None	add
18	[BUG]  [BUGGY]  double  upper  =  lower  +(lower  *  x);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(lower  *  x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(lower  *  x);	  double    upper    =    lower    +(x    *    lower);    	non-compiled	[CE]  missing  return  statement	31	None	replace
19	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  lower  +  1);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  lower  +  1);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  lower  +  1);	  double    upper    =    lower    +(x    *    lower);    	non-compiled	[CE]  missing  return  statement	31	None	replace
20	[BUG]  [BUGGY]  Double  upper  =  Math.floor(x);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  upper  =  Math.floor(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  upper  =  Math.floor(x);	          double    upper    =    Math.floor(x);    Double    upper    =    Math.floor(x);    	non-compiled	[CE]  missing  return  statement	12	None	replace
21	[BUG]  [BUGGY]  double  x  =  Math.sqrt(new  Double(lower));  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  x  =  Math.sqrt(new  Double(lower));  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  x  =  Math.sqrt(new  Double(lower));	  return    1    /(x    -    lower);    double    x    =    Math.sqrt(new    Double(x));    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	66	None	replace
22	[BUG]  [BUGGY]  double  x  =  Math.sqrt(new  Double(x));  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  x  =  Math.sqrt(new  Double(x));  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  x  =  Math.sqrt(new  Double(x));	  return    1    /(x    -    lower);    double    x    =    Math.sqrt(new    Double(x));    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	66	None	replace
23	[BUG]  [BUGGY]  double  lower  =  x  /  upper;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  x  /  upper;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  x  /  upper;	  double    lower    =    x    -    upper;    	non-compiled	[CE]  missing  return  statement	57	None	replace
24	[BUG]  [BUGGY]  double  upper  =  low  -(x  -  lower);  [CE]  cannot  find  symbol  low  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  low  -(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  low  -(x  -  lower);	          double    upper    =    lower    -(x    -    lower);    double    upper    =    low    -(x    -    lower);    	non-compiled	[CE]  cannot  find  symbol  low	70	None	replace
25	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  lower);  double  lower  =  lower.doubleValue();	  return    1    /(lower    -    x);    double    lower    =    lower.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
26	[BUG]  [BUGGY]  double  lower  =  lower.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower.doubleValue();	  return    1    /(lower    -    x);    double    lower    =    lower.doubleValue();    	non-compiled	[CE]  double  cannot  be  dereferenced	2	None	replace
27	[BUG]  [BUGGY]  return  this.density  *  Math.floor(x  +  1);  [CE]  cannot  find  symbol  density  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  this.density  *  Math.floor(x  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  this.density  *  Math.floor(x  +  1);	  return    this.density    *    Math.floor(x);    	non-compiled	[CE]  cannot  find  symbol  density	63	None	replace
28	[BUG]  [BUGGY]  double  upper  =  lower  -(lower  /  x);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  -(lower  /  x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -(lower  /  x);	  double    upper    =    lower    -(x    /    lower);    	non-compiled	[CE]  missing  return  statement	53	None	replace
29	[BUG]  [BUGGY]  Double  upper  =  lower  -  lower;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  upper  =  lower  -  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  upper  =  lower  -  lower;	          double    upper    =    lower    -    lower;    Double    upper    =    lower    -    lower;    	non-compiled	[CE]  missing  return  statement	28	None	replace
30	[BUG]  [BUGGY]  double  lower  =  lower  +(x  -  upper);  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  +(x  -  upper);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  +(x  -  upper);	          double    upper    =    lower    +(x    -    lower);    double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	24	None	replace
31	[BUG]  [BUGGY]  return  this.denominator  *  Math.floor(x  +  1);  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  this.denominator  *  Math.floor(x  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  this.denominator  *  Math.floor(x  +  1);	  return    this.denominator    *    Math.floor(x);    	non-compiled	[CE]  cannot  find  symbol  denominator	62	None	replace
32	[BUG]  [BUGGY]  double  upper  =  lower  -(x  *  lower  +  1);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  -(x  *  lower  +  1);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -(x  *  lower  +  1);	  double    upper    =    lower    -(x    *    lower);    	non-compiled	[CE]  missing  return  statement	35	None	replace
33	[BUG]  [BUGGY]  double  upper  =  lower  -(lower  *  x);  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  -(lower  *  x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -(lower  *  x);	  double    upper    =    lower    -(x    *    lower);    	non-compiled	[CE]  missing  return  statement	35	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  10.0  /(x  -  upper);	  return    10.0    /(x    -    lower);    	compilable	  [FE]  AssertionError  	41	3	replace
35	[BUG]  [BUGGY]  return  10.0  /(x  -  upper);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  10.0  /(x  -  upper);	  return    10.0    /(x    -    lower);    	compilable	  [FE]  AssertionError  	41	3	replace
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  *  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  10.0  /(x  *  lower);	  return    10.0    /(x    -    lower);    	compilable	  [FE]  AssertionError  	41	4	replace
37	[BUG]  [BUGGY]  return  10.0  /(x  *  lower);  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  *  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  10.0  /(x  *  lower);	  return    10.0    /(x    -    lower);    	compilable	  [FE]  AssertionError  	41	4	replace
38	[BUG]  [BUGGY]  solverAbsoluteAccuracy  =  Math.floor(lower,  upper);  [CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  solverAbsoluteAccuracy  =  Math.floor(lower,  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	solverAbsoluteAccuracy  =  Math.floor(lower,  upper);	  solverAbsoluteAccuracy    =    Math.floor(lower,    x);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy	32	None	replace
39	[BUG]  [BUGGY]  solverAbsoluteAccuracy  =  Math.floor(lower,  x  +  1);  [CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  solverAbsoluteAccuracy  =  Math.floor(lower,  x  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	solverAbsoluteAccuracy  =  Math.floor(lower,  x  +  1);	  solverAbsoluteAccuracy    =    Math.floor(lower,    x);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy	32	None	replace
40	[BUG]  [BUGGY]  solverAbsoluteAccuracy  =  Math.max(lower,  upper);  [CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  solverAbsoluteAccuracy  =  Math.max(lower,  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	solverAbsoluteAccuracy  =  Math.max(lower,  upper);	  solverAbsoluteAccuracy    =    Math.max(lower,    x);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy	33	None	replace
41	[BUG]  [BUGGY]  solverAbsoluteAccuracy  =  Math.max(lower,  x  +  1);  [CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy  [FE]                  AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  solverAbsoluteAccuracy  =  Math.max(lower,  x  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	solverAbsoluteAccuracy  =  Math.max(lower,  x  +  1);	  solverAbsoluteAccuracy    =    Math.max(lower,    x);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  solverAbsoluteAccuracy	33	None	replace
42	[BUG]  [BUGGY]  double  lower  =  lower  +  x;  [CE]  variable  lower  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  +  x;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  +  x;	  return    1    /(lower    -    x);    double    lower    =    lower    +    x;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	3	None	replace
43	[BUG]  [BUGGY]  double  lower  =  lower  /(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  /(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  /(x  -  lower);	  return    1    /(lower    -    x);    double    lower    =    lower    +    x;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	3	None	replace
44	[BUG]  [BUGGY]  double  /(x  -  lower);  [CE]  not  a  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  /(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  /(x  -  lower);	  return    1    /(x    -    lower);    double    /(x    -    lower);    	non-compiled	[CE]  not  a  statement	64	None	replace
45	[BUG]  [BUGGY]  double  /(lower  -  x);  [CE]  not  a  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  /(lower  -  x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  /(lower  -  x);	  return    1    /(x    -    lower);    double    /(x    -    lower);    	non-compiled	[CE]  not  a  statement	64	None	replace
46	[BUG]  [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	                double        upper        =        Math.floor(x);        double    lower    =    Math.floor(x);    double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	13	None	add
47	[BUG]  [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  upper  =  Math.ceil(x);  double  lower  =  Math.floor(x);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  upper  =  Math.ceil(x);  double  lower  =  Math.floor(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	                double        upper        =        Math.floor(x);        double    lower    =    Math.floor(x);    double  upper  =  Math.ceil(x);  double  lower  =  Math.floor(x);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	13	None	add
48	[BUG]  [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  upper  =  Math.log(x);  double  lower  =  Math.floor(x);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  upper  =  Math.log(x);  double  lower  =  Math.floor(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	                double        upper        =        Math.floor(x);        double    lower    =    Math.floor(x);    double  upper  =  Math.log(x);  double  lower  =  Math.floor(x);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	13	None	add
49	[BUG]  [BUGGY]  double  upper  =  lower  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY;	  double    upper    =    lower    /    lower;    	non-compiled	[CE]  missing  return  statement	47	None	replace
50	[BUG]  [BUGGY]  double  upper  =  x  /  lower;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  /  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  /  lower;	  double    upper    =    lower    /    lower;    	non-compiled	[CE]  missing  return  statement	47	None	replace
51	[BUG]  [BUGGY]  double  upper  =  x  -  lower;  double  lower  =  lower  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -  lower;  double  lower  =  lower  -  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  lower;  double  lower  =  lower  -  lower;	          double    upper    =    lower    -    lower;    double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	27	None	replace
52	[BUG]  [BUGGY]  Double  lower  =  lower  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  lower  =  lower  -  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  lower  =  lower  -  lower;	          double    upper    =    lower    -    lower;    Double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	54	None	replace
53	[BUG]  [BUGGY]  double  upper  =  x  -  lower;  Double  lower  =  lower  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -  lower;  Double  lower  =  lower  -  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  lower;  Double  lower  =  lower  -  lower;	          double    upper    =    lower    -    lower;    Double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	54	None	replace
54	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  double  lower  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  double  lower  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.log(upper));  double  lower  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    double    lower    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	18	None	replace
55	[BUG]  [BUGGY]  double  lower  =  upper  +(x  *  Math.log(upper));  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  upper  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  upper  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    double    lower    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  missing  return  statement	18	None	replace
56	[BUG]  [BUGGY]  double  upper  =  Math.log(lower);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.log(lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.log(lower);	  double    upper    =    Math.floor(lower);    	non-compiled	[CE]  missing  return  statement	39	None	replace
57	[BUG]  [BUGGY]  double  upper  =  x  +(lower  *  Math.log(x));  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(lower  *  Math.log(x));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(lower  *  Math.log(x));	  double    upper    =    x    +(lower    *    Math.log(upper));    	non-compiled	[CE]  missing  return  statement	56	None	replace
58	[BUG]  [BUGGY]  double  upper  =  x  +(Math.log(lower));  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(Math.log(lower));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(Math.log(lower));	  double    upper    =    x    +(lower    *    Math.log(upper));    	non-compiled	[CE]  missing  return  statement	56	None	replace
59	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  /(x  -  lower);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  /(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    10.0    /(x    -    lower);    double  /(x  -  lower);	  	non-compiled	[CE]  not  a  statement	40	None	add
60	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  -(x  -  lower);  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  -(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    10.0    /(x    -    lower);    double  -(x  -  lower);	  	non-compiled	[CE]  not  a  statement	40	None	add
61	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  x  =  lower  +(x  -  lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  x  =  lower  +(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    10.0    /(x    -    lower);    double  x  =  lower  +(x  -  lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	40	None	add
62	[BUG]  [BUGGY]  Double  lower  =  lower  +(x  *  Math.log(upper));  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  lower  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  lower  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    Double    lower    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	42	None	replace
63	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  Double  lower  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  Double  lower  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.log(upper));  Double  lower  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    Double    lower    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	42	None	replace
64	[BUG]  [BUGGY]  double  lower  =  Math.abs(x);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  Math.abs(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  Math.abs(x);	  return    1    /(lower    -    x);    double    lower    =    Math.abs(x);    	non-compiled	[CE]  missing  return  statement	68	None	replace
65	[BUG]  [BUGGY]  double  x  =  lower  +(x  -  lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  x  =  lower  +(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  x  =  lower  +(x  -  lower);	  return    1    /(x    -    lower);    double    x    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	22	None	replace
66	[BUG]  [BUGGY]  Double  x  =  lower  +(x  -  lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  x  =  lower  +(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  x  =  lower  +(x  -  lower);	  return    1    /(x    -    lower);    double    x    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	22	None	replace
67	[BUG]  [BUGGY]  double  upper  =  Math.ceil(x);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.ceil(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.ceil(x);	          double    upper    =    Math.floor(x);    double    upper    =    Math.floor(x);    	non-compiled	[CE]  missing  return  statement	11	None	replace
68	[BUG]  [BUGGY]  double  lower  =  lower  -(x  -  upper);  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  -(x  -  upper);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  -(x  -  upper);	          double    upper    =    lower    -(x    -    lower);    double    lower    =    lower    -(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	5	None	replace
69	[BUG]  [BUGGY]  double  lower  =  lower  -(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  -(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  -(x  -  lower);	          double    upper    =    lower    -(x    -    lower);    double    lower    =    lower    -(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	5	None	replace
70	[BUG]  [BUGGY]  Double  lower  =  lower  +(x  -  upper);  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  lower  =  lower  +(x  -  upper);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  lower  =  lower  +(x  -  upper);	          double    upper    =    lower    +(x    -    lower);    Double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	49	None	replace
71	[BUG]  [BUGGY]  double  upper  =  lower  +(x  /  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  /  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  /  Math.log(upper));	  double    upper    =    lower    +(x    /    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	55	None	replace
72	[BUG]  [BUGGY]  double  upper  =  lower  +(x  /  Math.rint(lower));  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  /  Math.rint(lower));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  /  Math.rint(lower));	  double    upper    =    lower    +(x    /    Math.log(lower));    	non-compiled	[CE]  missing  return  statement	55	None	replace
73	[BUG]  [BUGGY]  double  lower  =  1  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  1  -  lower;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  1  -  lower;	  return    1    /(x    -    lower);    double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	52	None	replace
74	[BUG]  [BUGGY]  double  lower  =  lower  -  1;  [CE]  variable  lower  might  not  have  been  initialized  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  -  1;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  -  1;	  return    1    /(x    -    lower);    double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	52	None	replace
75	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  upper.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  x  =  upper.doubleValue();	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	58	None	add
76	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  lower  +  1;  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  lower  +  1;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  x  =  lower  +  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	58	None	add
77	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  upper.doubleValue()  +  1;  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  upper.doubleValue()  +  1;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  x  =  upper.doubleValue()  +  1;	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	58	None	add
78	[BUG]  [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower  +(x  -  upper);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower  +(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    upper);    double  x  =  lower  +(x  -  upper);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	60	None	add
79	[BUG]  [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    upper);    double  x  =  lower.doubleValue();	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	60	None	add
80	[BUG]  [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower  +  Math.log(x);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower  +  Math.log(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    upper);    double  x  =  lower  +  Math.log(x);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	60	None	add
81	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  *(x  -  upper);	  return    1    /(x    -    upper);    	compilable	  [FE]  AssertionError  	61	4	replace
82	[BUG]  [BUGGY]  return  1  *(x  -  upper);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  *(x  -  upper);	  return    1    /(x    -    upper);    	compilable	  [FE]  AssertionError  	61	4	replace
83	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  /  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  *(x  /  lower);	  return    1    *(x    -    lower);    	compilable	  [FE]  AssertionError  	8	4	replace
84	[BUG]  [BUGGY]  return  1  *(x  /  lower);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  /  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  *(x  /  lower);	  return    1    *(x    -    lower);    	compilable	  [FE]  AssertionError  	8	4	replace
85	[BUG]  [BUGGY]  return  1  *(x  -  lower);  double  x  =  upper.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  lower);  double  x  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    *(x    -    lower);    double  x  =  upper.doubleValue();	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	7	None	add
86	[BUG]  [BUGGY]  return  1  *(x  -  lower);  double  x  =  lower.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  lower);  double  x  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    *(x    -    lower);    double  x  =  lower.doubleValue();	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	7	None	add
87	[BUG]  [BUGGY]  return  1  *(x  -  lower);  double  x  =  lower  +(x  -  lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  lower);  double  x  =  lower  +(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    *(x    -    lower);    double  x  =  lower  +(x  -  lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	7	None	add
88	[BUG]  [BUGGY]  double  lower  =  lower  -  x;  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  -  x;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  -  x;	  return    1    /(lower    -    x);    double    lower    =    lower    -    x;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	48	None	replace
89	[BUG]  [BUGGY]  return  1  /(upper  -  x);  double  upper  =  lower.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(upper  -  x);  double  upper  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(upper    -    x);    double  upper  =  lower.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	9	None	add
90	[BUG]  [BUGGY]  return  1  /(upper  -  x);  double  upper  =  lower  -  x;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(upper  -  x);  double  upper  =  lower  -  x;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(upper    -    x);    double  upper  =  lower  -  x;	  	non-compiled	[CE]  unreachable  statement	9	None	add
91	[BUG]  [BUGGY]  return  1  /(upper  -  x);  double  upper  =  lower  +  x;  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(upper  -  x);  double  upper  =  lower  +  x;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(upper    -    x);    double  upper  =  lower  +  x;	  	non-compiled	[CE]  unreachable  statement	9	None	add
92	[BUG]  [BUGGY]  double  x  =  Math.sqrt(lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  x  =  Math.sqrt(lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  x  =  Math.sqrt(lower);	  return    1    /(x    -    lower);    double    x    =    Math.sqrt(lower);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	65	None	replace
93	[BUG]  [BUGGY]  Double  x  =  Math.sqrt(lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  x  =  Math.sqrt(lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  x  =  Math.sqrt(lower);	  return    1    /(x    -    lower);    double    x    =    Math.sqrt(lower);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	65	None	replace
94	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.log(double));  [CE]  '.class'  expected  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  Math.log(double));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.log(double));	  double    upper    =    lower    +(x    *    Math.log(upper));    	non-compiled	[CE]  '.class'  expected	36	None	replace
95	[BUG]  [BUGGY]  double  upper  =  x  -  1;  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -  1;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  1;	  double    upper    =    lower    -    1;    	non-compiled	[CE]  missing  return  statement	46	None	replace
96	[BUG]  [BUGGY]  double  upper  =  lower  /  1;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  /  1;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  /  1;	  double    upper    =    lower    -    1;    	non-compiled	[CE]  missing  return  statement	46	None	replace
97	[BUG]  [BUGGY]  double  upper  =  Math.log(x);  double  lower  =  Math.log(lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.log(x);  double  lower  =  Math.log(lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.log(x);  double  lower  =  Math.log(lower);	          double    upper    =    Math.floor(x);    double    lower    =    Math.floor(x);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	14	None	replace
98	[BUG]  [BUGGY]  double  upper  =  Math.ceil(x);  double  lower  =  Math.ceil(lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.ceil(x);  double  lower  =  Math.ceil(lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.ceil(x);  double  lower  =  Math.ceil(lower);	          double    upper    =    Math.floor(x);    double    lower    =    Math.floor(x);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	14	None	replace
99	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.rint(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  Math.rint(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.rint(upper));	  double    upper    =    lower    +(x    *    Math.rint(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	37	None	replace
100	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(lower  -  x  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(lower  -  x  +  1);	  return    1    /(x    -    lower    +    1);    	compilable	  [FE]  AssertionError  	59	4	replace
101	[BUG]  [BUGGY]  return  1  /(lower  -  x  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(lower  -  x  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(lower  -  x  +  1);	  return    1    /(x    -    lower    +    1);    	compilable	  [FE]  AssertionError  	59	4	replace
102	[BUG]  [BUGGY]  double  x  =  upper.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  x  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  x  =  upper.doubleValue();	  return    1    /(x    -    lower);    double    x    =    upper.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	20	None	replace
103	[BUG]  [BUGGY]  double  x  =  lower.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  x  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  x  =  lower.doubleValue();	  return    1    /(x    -    lower);    double    x    =    upper.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	20	None	replace
104	[BUG]  [BUGGY]  double  upper  =  lower  /(lower  -  x);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  /(lower  -  x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  /(lower  -  x);	  double    upper    =    lower    /(x    -    lower);    	non-compiled	[CE]  missing  return  statement	34	None	replace
105	[BUG]  [BUGGY]  double  upper  =  lower  /(x  -  lower  +  1);  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  /(x  -  lower  +  1);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  /(x  -  lower  +  1);	  double    upper    =    lower    /(x    -    lower);    	non-compiled	[CE]  missing  return  statement	34	None	replace
106	[BUG]  [BUGGY]  Double  x  =  lower.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  x  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  x  =  lower.doubleValue();	  return    1    /(x    -    lower);    double    x    =    lower.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	21	None	replace
107	[BUG]  [BUGGY]  double  upper  =  lower  -(x  -  upper);  double  lower  =  lower  -(x  -  lower);  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  -(x  -  upper);  double  lower  =  lower  -(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -(x  -  upper);  double  lower  =  lower  -(x  -  lower);	          double    upper    =    lower    -(x    -    lower);    double    lower    =    lower    -(x    -    lower);    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	5	None	replace
108	[BUG]  [BUGGY]  double  upper  =  x  -(lower  -  x);  double  lower  =  lower  -(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -(lower  -  x);  double  lower  =  lower  -(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -(lower  -  x);  double  lower  =  lower  -(x  -  lower);	          double    upper    =    lower    -(x    -    lower);    double    lower    =    lower    -(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	5	None	replace
109	[BUG]  [BUGGY]  double  x  =  Math.sqrt(upper);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  x  =  Math.sqrt(upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  x  =  Math.sqrt(upper);	  return    1    /(x    -    lower);    double    x    =    Math.sqrt(lower);    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	65	None	replace
110	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  upper.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  lower  =  upper.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	add
111	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  upper.doubleValue()  /(x  -  lower);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  upper.doubleValue()  /(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  lower  =  upper.doubleValue()  /(x  -  lower);	  	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	add
112	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  upper.doubleValue()  /(x  -  lower  +  1);  [CE]  double  cannot  be  dereferenced  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  upper.doubleValue()  /(x  -  lower  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  lower  =  upper.doubleValue()  /(x  -  lower  +  1);	  	non-compiled	[CE]  double  cannot  be  dereferenced	58	None	add
113	[BUG]  [BUGGY]  double  upper  =  Math.log(x);  double  lower  =  Math.log(x);  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.log(x);  double  lower  =  Math.log(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.log(x);  double  lower  =  Math.log(x);	          double    upper    =    Math.floor(x);    double    lower    =    Math.floor(x);    	non-compiled	[CE]  missing  return  statement	14	None	replace
114	[BUG]  [BUGGY]  double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(x);  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(x);	          double    upper    =    Math.floor(x);    double    lower    =    Math.floor(x);    	non-compiled	[CE]  missing  return  statement	14	None	replace
115	[BUG]  [BUGGY]  double  upper  =  lower  +(x  -  upper);  double  lower  =  lower  +(x  -  lower);  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  -  upper);  double  lower  =  lower  +(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  -  upper);  double  lower  =  lower  +(x  -  lower);	          double    upper    =    lower    +(x    -    lower);    double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	24	None	replace
116	[BUG]  [BUGGY]  return  1  /(x  -  upper);  double  y  =  lower  +(x  -  upper);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper);  double  y  =  lower  +(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    upper);    double  y  =  lower  +(x  -  upper);	  	non-compiled	[CE]  unreachable  statement	60	None	add
117	[BUG]  [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower  +  Math.abs(x  -  upper);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper);  double  x  =  lower  +  Math.abs(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    upper);    double  x  =  lower  +  Math.abs(x  -  upper);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	60	None	add
118	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  Double  upper  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  Math.log(upper));  Double  upper  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.log(upper));  Double  upper  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    Double    upper    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	19	None	replace
119	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  Math.log(lower));  Double  upper  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  Math.log(lower));  Double  upper  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  Math.log(lower));  Double  upper  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    Double    upper    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	19	None	replace
120	[BUG]  [BUGGY]  double  upper  =  lower  +(x  -  lower);  Double  upper  =  lower  +(upper  -  lower);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  -  lower);  Double  upper  =  lower  +(upper  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  -  lower);  Double  upper  =  lower  +(upper  -  lower);	          double    upper    =    lower    +(x    -    lower);    Double    upper    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	25	None	replace
121	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [CE]  unreachable  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  10.0  /(x  -  lower);  double  lower  =  lower  +(x  -  lower);	  return    1    /(x    -    lower);    double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  unreachable  statement	51	None	replace
122	[BUG]  [BUGGY]  return  this.denominator  /  Math.floor(x);  [CE]  cannot  find  symbol  denominator  [FE]              AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  this.denominator  /  Math.floor(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  this.denominator  /  Math.floor(x);	  return    this.denominator    *    Math.floor(x);    	non-compiled	[CE]  cannot  find  symbol  denominator	62	None	replace
123	[BUG]  [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  Double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  Double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	                double        upper        =        Math.floor(x);        double    lower    =    Math.floor(x);    Double  upper  =  Math.floor(x);  double  lower  =  Math.floor(x);	  	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	13	None	add
124	[BUG]  [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  lower  =  Math.floor(x);  double  lower  =  Math.floor(x);  [CE]  variable  lower  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]          double    upper    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  lower  =  Math.floor(x);  double  lower  =  Math.floor(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	                double        upper        =        Math.floor(x);        double    lower    =    Math.floor(x);    double  lower  =  Math.floor(x);  double  lower  =  Math.floor(x);	  	non-compiled	[CE]  variable  lower  is  already  defined  in  method  density(double)	13	None	add
125	[BUG]  [BUGGY]  double  upper  =  lower  /  DEFAULT_INVERSION_ABSOLUTE_ACCURACY;  [CE]  cannot  find  symbol  DEFAULT_INVERSION_ABSOLUTE_ACCURACY  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  /  DEFAULT_INVERSION_ABSOLUTE_ACCURACY;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  /  DEFAULT_INVERSION_ABSOLUTE_ACCURACY;	  double    upper    =    lower    /    lower;    	non-compiled	[CE]  cannot  find  symbol  DEFAULT_INVERSION_ABSOLUTE_ACCURACY	47	None	replace
126	[BUG]  [BUGGY]  double  upper  =  lower  +(x  -  upper);  Double  lower  =  lower  +(x  -  lower);  [CE]  variable  upper  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  -  upper);  Double  lower  =  lower  +(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  -  upper);  Double  lower  =  lower  +(x  -  lower);	          double    upper    =    lower    +(x    -    lower);    Double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	49	None	replace
127	[BUG]  [BUGGY]  double  lower  =  upper  -  x;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  upper  -  x;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  upper  -  x;	  double    lower    =    x    -    upper;    	non-compiled	[CE]  missing  return  statement	57	None	replace
128	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  -  x;  [CE]  unreachable  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  -  x;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  lower);  double  lower  =  lower  -  x;	  return    1    /(lower    -    x);    double    lower    =    lower    -    x;    	non-compiled	[CE]  unreachable  statement	48	None	replace
129	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  lower  -  lower;  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  lower  -  lower;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  10.0  /(x  -  lower);  double  lower  =  lower  -  lower;	  return    1    /(x    -    lower);    double    lower    =    lower    -    lower;    	non-compiled	[CE]  unreachable  statement	52	None	replace
130	[BUG]  [BUGGY]  double  upper  =  lower  +(x  /  lower);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  /  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  /  lower);	  double    upper    =    lower    +(x    *    lower);    	non-compiled	[CE]  missing  return  statement	31	None	replace
131	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  upper);  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  upper);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  upper);	  double    upper    =    lower    +(x    *    lower);    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	31	None	replace
132	[BUG]  [BUGGY]  double  upper  =  x  -(lower  /  lower);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -(lower  /  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -(lower  /  lower);	  double    upper    =    lower    -(x    /    lower);    	non-compiled	[CE]  missing  return  statement	53	None	replace
133	[BUG]  [BUGGY]  return  1  *(x  -  lower);  double  lower  =  upper.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  lower);  double  lower  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    *(x    -    lower);    double  lower  =  upper.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	7	None	add
134	[BUG]  [BUGGY]  return  1  *(x  -  lower);  double  lower  =  lower  -  lower;  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  lower);  double  lower  =  lower  -  lower;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    *(x    -    lower);    double  lower  =  lower  -  lower;	  	non-compiled	[CE]  unreachable  statement	7	None	add
135	[BUG]  [BUGGY]  double  upper  =  Math.log(x  -  lower);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.log(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.log(x  -  lower);	  double    upper    =    Math.log(x);    	non-compiled	[CE]  missing  return  statement	38	None	replace
136	[BUG]  [BUGGY]  double  upper  =  x  +(x  *  Math.log(upper));  Double  lower  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(x  *  Math.log(upper));  Double  lower  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(x  *  Math.log(upper));  Double  lower  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    Double    lower    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	42	None	replace
137	[BUG]  [BUGGY]  double  upper  =  x  -  lower;  double  lower  =  x  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -  lower;  double  lower  =  x  -  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  lower;  double  lower  =  x  -  lower;	          double    upper    =    lower    -    lower;    double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	27	None	replace
138	[BUG]  [BUGGY]  return  lower  +  density(x);  double  lower  =  upper.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  density(x);  double  lower  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    lower    +    density(x);    double  lower  =  upper.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	44	None	add
139	[BUG]  [BUGGY]  return  1  /(upper  -  x);  Double  upper  =  getLowerCum();  [CE]  cannot  find  symbol  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(upper  -  x);  Double  upper  =  getLowerCum();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(upper    -    x);    Double  upper  =  getLowerCum();	  	non-compiled	[CE]  cannot  find  symbol	9	None	add
140	[BUG]  [BUGGY]  return  this.density  *  Math.floor(x  -  lower);  [CE]  cannot  find  symbol  density  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  this.density  *  Math.floor(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  this.density  *  Math.floor(x  -  lower);	  return    this.density    *    Math.floor(x);    	non-compiled	[CE]  cannot  find  symbol  density	63	None	replace
141	[BUG]  [BUGGY]  double  upper  =  Math.floor(x);  Double  upper  =  Math.floor(upper);  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.floor(x);  Double  upper  =  Math.floor(upper);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.floor(x);  Double  upper  =  Math.floor(upper);	          double    upper    =    Math.floor(x);    Double    upper    =    Math.floor(x);    	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	12	None	replace
142	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  upper.doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    10.0    /(x    -    lower);    double  lower  =  upper.doubleValue();	  	non-compiled	[CE]  double  cannot  be  dereferenced	40	None	add
143	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  upper.doubleValue()  /(x  -  lower);  [CE]  double  cannot  be  dereferenced  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  lower  =  upper.doubleValue()  /(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    10.0    /(x    -    lower);    double  lower  =  upper.doubleValue()  /(x  -  lower);	  	non-compiled	[CE]  double  cannot  be  dereferenced	40	None	add
144	[BUG]  [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  +  x;  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower);  double  lower  =  lower  +  x;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  lower);  double  lower  =  lower  +  x;	  return    1    /(lower    -    x);    double    lower    =    lower    +    x;    	non-compiled	[CE]  unreachable  statement	3	None	replace
145	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(x  -  upper  +  1);	  return    1    /(x    -    lower    +    1);    	compilable	  [FE]  AssertionError  	59	4	replace
146	[BUG]  [BUGGY]  return  1  /(x  -  upper  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  upper  +  1);	  return    1    /(x    -    lower    +    1);    	compilable	  [FE]  AssertionError  	59	4	replace
147	[BUG]  [BUGGY]  return  1  /(double  -  x);  double  lower  =  upper.doubleValue();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(double  -  x);  double  lower  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(double  -  x);  double  lower  =  upper.doubleValue();	  return    1    /(lower    -    x);    double    lower    =    upper.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
148	[BUG]  [BUGGY]  return  1  /(upper  -  x);  double  x  =  lower.doubleValue();  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(upper  -  x);  double  x  =  lower.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(upper  -  x);  double  x  =  lower.doubleValue();	  return    1    /(x    -    lower);    double    x    =    lower.doubleValue();    	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	21	None	replace
149	[BUG]  [BUGGY]  double  upper  =  lower  -(x  *  upper);  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  -(x  *  upper);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -(x  *  upper);	  double    upper    =    lower    -(x    *    lower);    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	35	None	replace
150	[BUG]  [BUGGY]  Double  lower  =  lower  -  upper;  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  Double  lower  =  lower  -  upper;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	Double  lower  =  lower  -  upper;	          double    upper    =    lower    -    lower;    Double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	54	None	replace
151	[BUG]  [BUGGY]  double  upper  =  x  +(x  *  Math.log(upper));  double  lower  =  lower  +(x  *  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(x  *  Math.log(upper));  double  lower  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(x  *  Math.log(upper));  double  lower  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    double    lower    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	18	None	replace
152	[BUG]  [BUGGY]  double  upper  =  x  -  lower;  Double  upper  =  x  -  lower;  [CE]  variable  upper  is  already  defined  in  method  density(double)  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -  lower;  Double  upper  =  x  -  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  lower;  Double  upper  =  x  -  lower;	          double    upper    =    lower    -    lower;    Double    upper    =    lower    -    lower;    	non-compiled	[CE]  variable  upper  is  already  defined  in  method  density(double)	28	None	replace
153	[BUG]  [BUGGY]  double  upper  =  Math.pow(10,  x);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.pow(10,  x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.pow(10,  x);	  double    upper    =    Math.log(x);    	non-compiled	[CE]  missing  return  statement	38	None	replace
154	[BUG]  [BUGGY]  double  upper  =  x  +(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(x  -  lower);  double  lower  =  lower  +(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(x  -  lower);  double  lower  =  lower  +(x  -  lower);	          double    upper    =    lower    +(x    -    lower);    double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	24	None	replace
155	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  *  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(x  *  upper);	  return    1    /(x    -    upper);    	compilable	  [FE]  AssertionError  	61	4	replace
156	[BUG]  [BUGGY]  return  1  /(x  *  upper);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  *  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  *  upper);	  return    1    /(x    -    upper);    	compilable	  [FE]  AssertionError  	61	4	replace
157	[BUG]  [BUGGY]  double  upper  =  x  /(lower  -  lower);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  /(lower  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  /(lower  -  lower);	  double    upper    =    lower    /(x    -    lower);    	non-compiled	[CE]  missing  return  statement	34	None	replace
158	[BUG]  [BUGGY]  double  upper  =  x  /(upper  -  lower);  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  /(upper  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  /(upper  -  lower);	  double    upper    =    lower    /(x    -    lower);    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	34	None	replace
159	[BUG]  [BUGGY]  double  upper  =  x  -(lower  -  lower);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -(lower  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -(lower  -  lower);	          double    upper    =    lower    -(x    -    lower);    double    upper    =    lower    -(x    -    lower);    	non-compiled	[CE]  missing  return  statement	4	None	replace
160	[BUG]  [BUGGY]  double  lower  =  lower  +(x  *  Math.log(upper));  [CE]  variable  lower  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  lower  +(x  *  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  lower  +(x  *  Math.log(upper));	          double    upper    =    lower    +(x    *    Math.log(lower));    double    lower    =    lower    +(x    *    Math.log(lower));    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	18	None	replace
161	[BUG]  [BUGGY]  double  upper  =  x  +(lower  -  lower);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(lower  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(lower  -  lower);	          double    upper    =    lower    +(x    -    lower);    double    upper    =    lower    +(x    -    lower);    	non-compiled	[CE]  missing  return  statement	23	None	replace
162	[BUG]  [BUGGY]  double  upper  =  x  -(x  -  upper);  double  lower  =  lower  -(x  -  lower);  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -(x  -  upper);  double  lower  =  lower  -(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -(x  -  upper);  double  lower  =  lower  -(x  -  lower);	          double    upper    =    lower    -(x    -    lower);    double    lower    =    lower    -(x    -    lower);    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	5	None	replace
163	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  lower  -  lower;  [CE]  unreachable  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  lower  =  lower  -  lower;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  lower  +  1);  double  lower  =  lower  -  lower;	  return    1    /(x    -    lower);    double    lower    =    lower    -    lower;    	non-compiled	[CE]  unreachable  statement	52	None	replace
164	[BUG]  [BUGGY]  double  upper  =  lower  -  x  +  1;  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  -  x  +  1;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  -  x  +  1;	  double    upper    =    lower    -    lower    +    1;    	non-compiled	[CE]  missing  return  statement	30	None	replace
165	[BUG]  [BUGGY]  double  upper  =  x  -(lower  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -(lower  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -(lower  /  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	  double    upper    =    lower    -(x    /    lower);    	non-compiled	[CE]  missing  return  statement	53	None	replace
166	[BUG]  [BUGGY]  return  lower  +  density(x);  double  lower  =  Math.min(lower,  upper);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  density(x);  double  lower  =  Math.min(lower,  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    lower    +    density(x);    double  lower  =  Math.min(lower,  upper);	  	non-compiled	[CE]  unreachable  statement	44	None	add
167	[BUG]  [BUGGY]  return  lower  +  density(x);  double  lower  =  Math.min(lower,  x);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  +  density(x);  double  lower  =  Math.min(lower,  x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    lower    +    density(x);    double  lower  =  Math.min(lower,  x);	  	non-compiled	[CE]  unreachable  statement	44	None	add
168	[BUG]  [BUGGY]  return  1  /(double  -  lower);  double  lower  =  upper.doubleValue();  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(double  -  lower);  double  lower  =  upper.doubleValue();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(double  -  lower);  double  lower  =  upper.doubleValue();	  return    1    /(x    -    lower);    double    lower    =    upper.doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
169	[BUG]  [BUGGY]  return  1  /(upper  -  x);  double  upper  =  Math.abs(x);  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(upper  -  x);  double  upper  =  Math.abs(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(upper    -    x);    double  upper  =  Math.abs(x);	  	non-compiled	[CE]  unreachable  statement	9	None	add
170	[BUG]  [BUGGY]  return  1  /(upper  -  x);  double  upper  =  Math.floor(x);  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(upper  -  x);  double  upper  =  Math.floor(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(upper    -    x);    double  upper  =  Math.floor(x);	  	non-compiled	[CE]  unreachable  statement	9	None	add
171	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  *  Math.floor(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  lower  *  Math.floor(x);	  return    this.density    *    Math.floor(x);    	compilable	  [FE]  AssertionError  	63	4	replace
172	[BUG]  [BUGGY]  return  lower  *  Math.floor(x);  [FE]  AssertionError  [FE]                AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  lower  *  Math.floor(x);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  lower  *  Math.floor(x);	  return    this.density    *    Math.floor(x);    	compilable	  [FE]  AssertionError  	63	4	replace
173	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  /(x  -  lower  +  1);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  /(x  -  lower  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  /(x  -  lower  +  1);	  	non-compiled	[CE]  not  a  statement	58	None	add
174	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  /(x  -  lower  +  1));  [CE]  not  a  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  /(x  -  lower  +  1));  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  /(x  -  lower  +  1));	  	non-compiled	[CE]  not  a  statement	58	None	add
175	[BUG]  [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  Math.sqrt(lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]        AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  lower  +  1);  double  x  =  Math.sqrt(lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    lower    +    1);    double  x  =  Math.sqrt(lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	58	None	add
176	[BUG]  [BUGGY]  double  upper  =  x  +(x  -  lower);  Double  lower  =  lower  +(x  -  lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(x  -  lower);  Double  lower  =  lower  +(x  -  lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(x  -  lower);  Double  lower  =  lower  +(x  -  lower);	          double    upper    =    lower    +(x    -    lower);    Double    lower    =    lower    +(x    -    lower);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	49	None	replace
177	[BUG]  [BUGGY]  double  upper  =  x  +(lower  *  Math.rint(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(lower  *  Math.rint(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(lower  *  Math.rint(upper));	  double    upper    =    lower    +(x    *    Math.rint(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	37	None	replace
178	[BUG]  [BUGGY]  double  upper  =  lower  +(x  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  *  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	  double    upper    =    lower    +(x    *    lower);    	non-compiled	[CE]  missing  return  statement	31	None	replace
179	[BUG]  [BUGGY]  return  1  /(x  -  upper);  double  x  =  Math.sqrt(new  Integer(x));  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper);  double  x  =  Math.sqrt(new  Integer(x));  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    upper);    double  x  =  Math.sqrt(new  Integer(x));	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	60	None	add
180	[BUG]  [BUGGY]  return  1  /(x  -  upper);  double  x  =  Math.sqrt(new  Double(lower));  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  /(x  -  upper);  double  x  =  Math.sqrt(new  Double(lower));  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    /(x    -    upper);    double  x  =  Math.sqrt(new  Double(lower));	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	60	None	add
181	[BUG]  [BUGGY]  double  upper  =  x  +(lower  /  Math.log(upper));  [CE]  variable  upper  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(lower  /  Math.log(upper));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(lower  /  Math.log(upper));	  double    upper    =    lower    +(x    /    Math.log(lower));    	non-compiled	[CE]  variable  upper  might  not  have  been  initialized	55	None	replace
182	[BUG]  [BUGGY]  double  upper  =  lower  +(x  /  Math.pow(10,  x));  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  lower  +(x  /  Math.pow(10,  x));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  lower  +(x  /  Math.pow(10,  x));	  double    upper    =    lower    +(x    /    Math.log(lower));    	non-compiled	[CE]  missing  return  statement	55	None	replace
183	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  /(x  -  upper);  [CE]  not  a  statement  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  /(x  -  upper);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    10.0    /(x    -    lower);    double  /(x  -  upper);	  	non-compiled	[CE]  not  a  statement	40	None	add
184	[BUG]  [BUGGY]  return  10.0  /(x  -  lower);  double  x  =  Math.abs(lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower);  double  x  =  Math.abs(lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    10.0    /(x    -    lower);    double  x  =  Math.abs(lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	40	None	add
185	[BUG]  [BUGGY]  double  lower  =  x  -  this.upper;  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  lower  =  x  -  this.upper;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  lower  =  x  -  this.upper;	  double    lower    =    x    -    lower;    	non-compiled	[CE]  missing  return  statement	15	None	replace
186	[BUG]  [BUGGY]  double  upper  =  x  +(x  *  Math.log(lower));  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  +(x  *  Math.log(lower));  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  +(x  *  Math.log(lower));	  double    upper    =    x    +(lower    *    Math.log(upper));    	non-compiled	[CE]  missing  return  statement	56	None	replace
187	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  10.0  /(x  -  lower  +  1);	  return    10.0    /(x    -    lower);    	compilable	  [FE]  AssertionError  	41	4	replace
188	[BUG]  [BUGGY]  return  10.0  /(x  -  lower  +  1);  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  10.0  /(x  -  lower  +  1);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  10.0  /(x  -  lower  +  1);	  return    10.0    /(x    -    lower);    	compilable	  [FE]  AssertionError  	41	4	replace
189	[BUG]  [BUGGY]  double  upper  =  x  -  lower;  Double  lower  =  x  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]        AssertionError      [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  x  -  lower;  Double  lower  =  x  -  lower;  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  x  -  lower;  Double  lower  =  x  -  lower;	          double    upper    =    lower    -    lower;    Double    lower    =    lower    -    lower;    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	54	None	replace
190	[BUG]  [BUGGY]  return  1  *(x  -  lower);  double  x  =  lower.doubleValue();  return  1  *(x  -  lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  lower);  double  x  =  lower.doubleValue();  return  1  *(x  -  lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    *(x    -    lower);    double  x  =  lower.doubleValue();  return  1  *(x  -  lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	7	None	add
191	[BUG]  [BUGGY]  return  1  *(x  -  lower);  double  x  =  Math.abs(lower);  [CE]  variable  x  is  already  defined  in  method  density(double)  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  return  1  *(x  -  lower);  double  x  =  Math.abs(lower);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return    1    *(x    -    lower);    double  x  =  Math.abs(lower);	  	non-compiled	[CE]  variable  x  is  already  defined  in  method  density(double)	7	None	add
192	[BUG]  [BUGGY]  double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(lower);  [CE]  variable  lower  might  not  have  been  initialized  [FE]    AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(lower);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.floor(x);  double  lower  =  Math.ceil(lower);	          double    upper    =    Math.floor(x);    double    lower    =    Math.floor(x);    	non-compiled	[CE]  variable  lower  might  not  have  been  initialized	14	None	replace
193	[BUG]  [BUGGY]  double  upper  =  Math.max(0.0,  x);  double  lower  =  Math.floor(x);  [CE]  missing  return  statement  [FE]      AssertionError    [CONTEXT]      public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }      [BUGGY]  double  upper  =  Math.max(0.0,  x);  double  lower  =  Math.floor(x);  [BUGGY]      return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	double  upper  =  Math.max(0.0,  x);  double  lower  =  Math.floor(x);	          double    upper    =    Math.floor(x);    double    lower    =    Math.floor(x);    	non-compiled	[CE]  missing  return  statement	14	None	replace
