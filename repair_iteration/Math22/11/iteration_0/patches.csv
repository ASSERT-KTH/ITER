bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]  return  1  /(x  -  lower);  [BUGGY]  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(x  -  lower);	return  1  /  (upper  -  lower);  	compilable	  [FE]  AssertionError  	21	5	replace
2	[BUG]  [BUGGY]  return  1  /(x  -  lower);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]  return  1  /(x  -  lower);  [BUGGY]  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(x  -  lower);	return  1  /  (upper  -  lower);  	compilable	  [FE]  AssertionError  	21	5	replace
3	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]      AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    [BUGGY]  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	  	return  1  /  (upper  -  lower);  	non-compiled	[CE]  missing  return  statement	21	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  +(x  -  lower);  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	    double  upper  =  lower  +(x  -  lower);		compilable	  [FE]  AssertionError  	22	5	add
5	[BUG]  [BUGGY]    double  upper  =  lower  +(x  -  lower);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  +(x  -  lower);  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	    double  upper  =  lower  +(x  -  lower);		compilable	  [FE]  AssertionError  	22	5	add
6	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  -  lower;  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	    double  upper  =  lower  -  lower;		compilable	  [FE]  AssertionError  	22	4	add
7	[BUG]  [BUGGY]    double  upper  =  lower  -  lower;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  -  lower;  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	    double  upper  =  lower  -  lower;		compilable	  [FE]  AssertionError  	22	4	add
8	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  +(x  *  Math.log(lower));  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	    double  upper  =  lower  +(x  *  Math.log(lower));		compilable	  [FE]  AssertionError  	22	4	add
9	[BUG]  [BUGGY]    double  upper  =  lower  +(x  *  Math.log(lower));  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  +(x  *  Math.log(lower));  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	    double  upper  =  lower  +(x  *  Math.log(lower));		compilable	  [FE]  AssertionError  	22	4	add
10	[BUG]  [BUGGY]    double  lower  =  lower  -  lower;  [CE]  variable  lower  might  not  have  been  initialized  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  lower  =  lower  -  lower;  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	    double  lower  =  lower  -  lower;		non-compiled	[CE]  variable  lower  might  not  have  been  initialized	22	None	add
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]  return  1  /(lower  -  x);  [BUGGY]  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	return  1  /(lower  -  x);	return  1  /  (upper  -  lower);  	compilable	  [FE]  AssertionError  	21	5	replace
12	[BUG]  [BUGGY]  return  1  /(lower  -  x);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]  return  1  /(lower  -  x);  [BUGGY]  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	return  1  /(lower  -  x);	return  1  /  (upper  -  lower);  	compilable	  [FE]  AssertionError  	21	5	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  Math.floor(x);  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	    double  upper  =  Math.floor(x);		compilable	  [FE]  AssertionError  	22	4	add
14	[BUG]  [BUGGY]    double  upper  =  Math.floor(x);  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  Math.floor(x);  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	    double  upper  =  Math.floor(x);		compilable	  [FE]  AssertionError  	22	4	add
15	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  -(x  -  lower);  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	add	    double  upper  =  lower  -(x  -  lower);		compilable	  [FE]  AssertionError  	22	5	add
16	[BUG]  [BUGGY]    double  upper  =  lower  -(x  -  lower);  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  public  double  density(double  x)  {  if  (x  <  lower  ||  x  >  upper)  {  return  0.0;  }  [BUGGY]    double  upper  =  lower  -(x  -  lower);  [BUGGY]  return  1  /  (upper  -  lower);  }  [CLASS]  UniformRealDistribution  [METHOD]  density  [RETURN_TYPE]  double  double  x  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.35355339059327373	112	112	2	replace	    double  upper  =  lower  -(x  -  lower);		compilable	  [FE]  AssertionError  	22	5	add
