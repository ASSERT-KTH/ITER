bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.supportUpperBoundInclusive  =  false;  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  this.supportUpperBoundInclusive  =  false;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.supportUpperBoundInclusive  =  false;	  this.supportUpperBoundInclusive    =    true;    	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	33	None	replace
2	[BUG]  [BUGGY]  this.lower  =  Math.min(deFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]              AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  this.lower  =  Math.min(deFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.min(deFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();	  this.lower    =    Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	17	None	replace
3	[BUG]  [BUGGY]  double  lower  =  getUpperBound()  -  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  double  lower  =  getUpperBound()  -  1;  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  lower  =  getUpperBound()  -  1;	  double    lower    =    getLowerBound()    -    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
4	[BUG]  [BUGGY]  this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  2);  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  2);  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  2);	  this.lower    =    Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    +    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	10	None	replace
5	[BUG]  [BUGGY]  Double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  Double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	Double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }	  if(isSupportUpperBoundInclusive())    {    double    upper    =    getLowerBound();    if(upper    >=    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
6	[BUG]  [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  false;  }	  return    true;    if(this.isSupportUpperBoundInclusive())    {    if(this.upper!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
7	[BUG]  [BUGGY]  if(this.upper!=  null)  {  return  false;  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper!=  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  return  false;  }	  return    true;    if(this.isSupportUpperBoundInclusive())    {    if(this.upper!=    null)    {    return    true;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	31	None	replace
8	[BUG]  [BUGGY]  return(this.supportUpperBoundInclusive  ==  null)&&(this.supportUpperBoundInclusive  ==  null);  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  return(this.supportUpperBoundInclusive  ==  null)&&(this.supportUpperBoundInclusive  ==  null);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return(this.supportUpperBoundInclusive  ==  null)&&(this.supportUpperBoundInclusive  ==  null);	  return(this.supportUpperBoundInclusive!=    null)&&(this.supportUpperBoundInclusive    ==    null);    	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	2	None	replace
9	[BUG]  [BUGGY]  ||  isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  ||  isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	||  isSupportUpperBoundInclusive())  {  return  true;  }	          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  if(this.upper  ==  null)  {  return  false;  }  [CE]  incomparable  types:  double  and  <null>  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper  ==  null)  {  return  false;  }	  if(this.lower    ==    null)    {    if(this.upper    ==    null)    {    return    false;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	32	None	replace
11	[BUG]  [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  if(this.upper  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  if(this.upper  ==  null)  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.isSupportUpperBoundInclusive())  {  if(this.upper  ==  null)  {  return  false;  }	  return    true;    if(this.isSupportUpperBoundInclusive())    {    if(this.upper!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
12	[BUG]  [BUGGY]  double  upper  =  getUpperBound();  if(upper  >=  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                  AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  double  upper  =  getUpperBound();  if(upper  >=  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getUpperBound();  if(upper  >=  lower)  {  return  true;  }	  double    upper    =    getLowerBound();    if(upper    >=    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
13	[BUG]  [BUGGY]  if(this.isSupportUpperBoundInclusive)  {  return  true;  }  [CE]  cannot  find  symbol  isSupportUpperBoundInclusive  [FE]          AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.isSupportUpperBoundInclusive)  {  return  true;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.isSupportUpperBoundInclusive)  {  return  true;  }	  return    true;    if(this.isSupportUpperBoundInclusive)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  isSupportUpperBoundInclusive	36	None	replace
14	[BUG]  [BUGGY]  if(this.isSupportUpperBoundInclusive)  {  return  false;  }  [CE]  cannot  find  symbol  isSupportUpperBoundInclusive  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.isSupportUpperBoundInclusive)  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.isSupportUpperBoundInclusive)  {  return  false;  }	  return    true;    if(this.isSupportUpperBoundInclusive)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  isSupportUpperBoundInclusive	36	None	replace
15	[BUG]  [BUGGY]  double  upper  =  getUpperBound();  if(upper!=  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  double  upper  =  getUpperBound();  if(upper!=  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getUpperBound();  if(upper!=  lower)  {  return  true;  }	  double    upper    =    getLowerBound();    if(upper!=    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
16	[BUG]  [BUGGY]  if(!isSupportUpperBoundInclusive())  {  return  false;  }  [CE]  missing  return  statement  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(!isSupportUpperBoundInclusive())  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(!isSupportUpperBoundInclusive())  {  return  false;  }	  return    true;    if(!isSupportUpperBoundInclusive())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	15	None	replace
17	[BUG]  [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1);  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1);  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1);	  this.lower    =    Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	27	None	replace
18	[BUG]  [BUGGY]  null  =  false;  if(isSupportUpperBoundInclusive())  {  return  false;  }  [CE]  unexpected  type  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  null  =  false;  if(isSupportUpperBoundInclusive())  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	null  =  false;  if(isSupportUpperBoundInclusive())  {  return  false;  }	  return    true;    if(isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  unexpected  type	13	None	replace
19	[BUG]  [BUGGY]  if(this.upper!=  null)  {  if(this.lower!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper!=  null)  {  if(this.lower!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  if(this.lower!=  null)  {  return  true;  }	  if(this.lower!=    null)    {    if(this.upper!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
20	[BUG]  [BUGGY]  if(this.upper!=  null)  {  return  true;  }  [CE]  incomparable  types:  double  and  <null>  [FE]              AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  return  true;  }	  if(this.lower!=    null)    {    if(this.upper!=    null)    {    return    true;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	34	None	replace
21	[BUG]  [BUGGY]  if(this.upper!=  null)  {  if(this.upper!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper!=  null)  {  if(this.upper!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  if(this.upper!=  null)  {  return  false;  }	  if(this.upper    ==    null)    {    if(this.upper!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  return  this.upper.isSupportUpperBoundInclusive()  &&  this.inverseCumAccuracy.isSupportUpperBoundInclusive();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  return  this.upper.isSupportUpperBoundInclusive()  &&  this.inverseCumAccuracy.isSupportUpperBoundInclusive();  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return  this.upper.isSupportUpperBoundInclusive()  &&  this.inverseCumAccuracy.isSupportUpperBoundInclusive();	  return    this.upper.isSupportUpperBoundInclusive();    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
23	[BUG]  [BUGGY]  return  this.upper.equals(this.supportUpperBoundInclusive);  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  return  this.upper.equals(this.supportUpperBoundInclusive);  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return  this.upper.equals(this.supportUpperBoundInclusive);	  return    this.supportUpperBoundInclusive.equals(this.upper);    	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	23	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	add	                if(isSupportUpperBoundInclusive())        {        return        true;        }        if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }	  	compilable	  [FE]  AssertionError  	3	2	add
25	[BUG]  [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	                if(isSupportUpperBoundInclusive())        {        return        true;        }        if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }	  	compilable	  [FE]  AssertionError  	3	2	add
26	[BUG]  [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	                if(isSupportUpperBoundInclusive())        {        return        true;        }        if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true	  	non-compiled	[CE]  ';'  expected	3	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	add	                if(isSupportUpperBoundInclusive())        {        return        true;        }        if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }	  	compilable	  [FE]  AssertionError  	3	2	add
28	[BUG]  [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]          if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	                if(isSupportUpperBoundInclusive())        {        return        true;        }        if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }	  	compilable	  [FE]  AssertionError  	3	2	add
29	[BUG]  [BUGGY]  if(isSupportUpperBoundInclusive()  ||  isSupportLowerBoundInclusive())  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(isSupportUpperBoundInclusive()  ||  isSupportLowerBoundInclusive())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(isSupportUpperBoundInclusive()  ||  isSupportLowerBoundInclusive())  {  return  false;  }	  if(isSupportUpperBoundInclusive())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
30	[BUG]  [BUGGY]  Double  upper  =  getUpperBound();  if(upper  ==  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  Double  upper  =  getUpperBound();  if(upper  ==  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	Double  upper  =  getUpperBound();  if(upper  ==  lower)  {  return  true;  }	  Double    upper    =    getLowerBound();    if(upper    ==    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
31	[BUG]  [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.isSupportUpperBoundInclusive())  {  return  false;  }	  return    true;    if(this.isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	29	None	replace
32	[BUG]  [BUGGY]  if(!this.isSupportUpperBoundInclusive())  {  return  false;  }  [CE]  missing  return  statement  [FE]          AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(!this.isSupportUpperBoundInclusive())  {  return  false;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(!this.isSupportUpperBoundInclusive())  {  return  false;  }	  return    true;    if(this.isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	29	None	replace
33	[BUG]  [BUGGY]  double  upper  =  getUpperBound();  if(upper  ==  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  double  upper  =  getUpperBound();  if(upper  ==  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getUpperBound();  if(upper  ==  lower)  {  return  true;  }	  double    upper    =    getLowerBound();    if(upper    ==    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
34	[BUG]  [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.isSupportUpperBoundInclusive())  {  return  true;  }	  return    true;    if(this.isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	29	None	replace
35	[BUG]  [BUGGY]  return  this.upper.isSupportUpperBoundInclusive()  &&  this.inverseCumAccuracy;  [CE]  double  cannot  be  dereferenced  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  return  this.upper.isSupportUpperBoundInclusive()  &&  this.inverseCumAccuracy;  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return  this.upper.isSupportUpperBoundInclusive()  &&  this.inverseCumAccuracy;	  return    this.upper.isSupportUpperBoundInclusive();    	non-compiled	[CE]  double  cannot  be  dereferenced	8	None	replace
36	[BUG]  [BUGGY]  if(this.upper!=  null)  {  if(this.lower!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper!=  null)  {  if(this.lower!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  if(this.lower!=  null)  {  return  false;  }	  if(this.lower!=    null)    {    if(this.upper    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
37	[BUG]  [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURAY);  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURAY);  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURAY);	  this.lower    =    Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	27	None	replace
38	[BUG]  [BUGGY]  if(this.lower!=  null)  {  if(this.upper!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.lower!=  null)  {  if(this.upper!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.lower!=  null)  {  if(this.upper!=  null)  {  return  false;  }	  if(this.upper    ==    null)    {    if(this.upper!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  double  upper  =  getLowerBound();  if(upper  >  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  double  upper  =  getLowerBound();  if(upper  >  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getLowerBound();  if(upper  >  lower)  {  return  true;  }	  double    upper    =    getLowerBound();    if(upper    ==    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
40	[BUG]  [BUGGY]  double  upper  =  getLowerBound();  if(upper  <  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  double  upper  =  getLowerBound();  if(upper  <  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getLowerBound();  if(upper  <  lower)  {  return  true;  }	  double    upper    =    getLowerBound();    if(upper    ==    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
41	[BUG]  [BUGGY]  Double  upper  =  getLowerBound();  if(upper  <  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  Double  upper  =  getLowerBound();  if(upper  <  lower)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	Double  upper  =  getLowerBound();  if(upper  <  lower)  {  return  true;  }	  Double    upper    =    getLowerBound();    if(upper    ==    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
42	[BUG]  [BUGGY]  if(this.upper  ==  null)  {  if(isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper  ==  null)  {  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper  ==  null)  {  if(isSupportUpperBoundInclusive())  {  return  true;  }	          if(isSupportUpperBoundInclusive())    {    return    true;    }    If(isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  double  lower  =  getLowerBound()  /  1;  [CE]  cannot  find  symbol  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  double  lower  =  getLowerBound()  /  1;  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  lower  =  getLowerBound()  /  1;	  double    lower    =    getLowerBound()    -    1;    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
44	[BUG]  [BUGGY]  if(isSupportLowerBoundInclusive())  {  return  false;  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(isSupportLowerBoundInclusive())  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(isSupportLowerBoundInclusive())  {  return  false;  }	  if(isSupportUpperBoundInclusive())    {    return    false;    }    	non-compiled	[CE]  missing  return  statement	11	None	replace
45	[BUG]  [BUGGY]  if(this.upper  ==  null)  {  if(this.lower!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper  ==  null)  {  if(this.lower!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper  ==  null)  {  if(this.lower!=  null)  {  return  true;  }	  if(this.lower!=    null)    {    if(this.upper!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
46	[BUG]  [BUGGY]  if(this.upper!=  null)  {  if(this.lower  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper!=  null)  {  if(this.lower  ==  null)  {  return  false;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  if(this.lower  ==  null)  {  return  false;  }	  if(this.lower    ==    null)    {    if(this.upper    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
47	[BUG]  [BUGGY]  if(this.upper!=  null)  {  if(this.lower  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper!=  null)  {  if(this.lower  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  if(this.lower  ==  null)  {  return  true;  }	  if(this.lower    ==    null)    {    if(this.upper    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
48	[BUG]  [BUGGY]  if(this.upper  ==  null)  {  if(this.lower  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.upper  ==  null)  {  if(this.lower  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper  ==  null)  {  if(this.lower  ==  null)  {  return  true;  }	  if(this.lower    ==    null)    {    if(this.upper    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
49	[BUG]  [BUGGY]  if(!isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  missing  return  statement  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(!isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(!isSupportUpperBoundInclusive())  {  return  true;  }	  if(isSupportLowerBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	26	None	replace
50	[BUG]  [BUGGY]  if(this.supportUpperBoundInclusive!=  null)  {  return  true;  }  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]        AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.supportUpperBoundInclusive!=  null)  {  return  true;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.supportUpperBoundInclusive!=  null)  {  return  true;  }	  return    true;    return    true;    	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	35	None	replace
51	[BUG]  [BUGGY]  if(this.lower!=  null)  {  if(this.upper  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(this.lower!=  null)  {  if(this.upper  ==  null)  {  return  true;  }  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.lower!=  null)  {  if(this.upper  ==  null)  {  return  true;  }	  if(this.lower    ==    null)    {    if(this.upper    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
52	[BUG]  [BUGGY]  this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  /  1);  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]            AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  /  1);  [BUGGY]      return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  /  1);	  this.lower    =    Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY    +    1);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	10	None	replace
53	[BUG]  [BUGGY]  if(!this.isSupportUpperBoundInclusive)  {  return  true;  }  [CE]  cannot  find  symbol  isSupportUpperBoundInclusive  [FE]          AssertionError      [CONTEXT]      public  boolean  isSupportUpperBoundInclusive()  {      [BUGGY]  if(!this.isSupportUpperBoundInclusive)  {  return  true;  }  [BUGGY]      }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(!this.isSupportUpperBoundInclusive)  {  return  true;  }	  return    true;    if(this.isSupportUpperBoundInclusive)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  isSupportUpperBoundInclusive	36	None	replace
