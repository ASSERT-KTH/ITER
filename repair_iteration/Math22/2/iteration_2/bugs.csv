bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(this.upper  ==  null);  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return(this.upper  ==  null);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return(this.upper  ==  null);	  return(this.upper!=    null);    	non-compiled	[CE]  incomparable  types:  double  and  <null>	3	None	replace
2	[BUG]  [BUGGY]  return(this.supportUpperBoundInclusive!=  null)&&(this.supportUpperBoundInclusive  ==  null);  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return(this.supportUpperBoundInclusive!=  null)&&(this.supportUpperBoundInclusive  ==  null);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return(this.supportUpperBoundInclusive!=  null)&&(this.supportUpperBoundInclusive  ==  null);	  return    true;    	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	2	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]      if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	add	        if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }	  	compilable	  [FE]  AssertionError  	5	2	add
4	[BUG]  [BUGGY]      if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]      if(isSupportUpperBoundInclusive())  {  return  true;  }  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	        if(isSupportUpperBoundInclusive())    {    return    true;    }    if(isSupportUpperBoundInclusive())  {  return  true;  }	  	compilable	  [FE]  AssertionError  	5	2	add
5	[BUG]  [BUGGY]      if(isSupportUpperBoundInclusive())  {  return  true;  }  If(isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  ';'  expected  [FE]      AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]      if(isSupportUpperBoundInclusive())  {  return  true;  }  If(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	        if(isSupportUpperBoundInclusive())    {    return    true;    }    If(isSupportUpperBoundInclusive())  {  return  true;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
6	[BUG]  [BUGGY]  if(isSupportUpperBoundInclusive())  {  double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(isSupportUpperBoundInclusive())  {  double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(isSupportUpperBoundInclusive())  {  double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }	      if(isSupportUpperBoundInclusive())    {    double    upper    =    getLowerBound();    if(upper!=    lower)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(this.upper  ==  null)  {  if(this.upper  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.upper  ==  null)  {  if(this.upper  ==  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper  ==  null)  {  if(this.upper  ==  null)  {  return  true;  }	      if(this.upper!=    null)    {    if(this.upper    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  return  this.upper.isSupportUpperBoundInclusive();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  this.upper.isSupportUpperBoundInclusive();  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return  this.upper.isSupportUpperBoundInclusive();	      	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
9	[BUG]  [BUGGY]  return  this.supportUpperBoundInclusive;  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]              AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  this.supportUpperBoundInclusive;  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return  this.supportUpperBoundInclusive;	      	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	4	None	replace
10	[BUG]  [BUGGY]  this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1);  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]        AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1);  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  +  1);	      this.lower    =    Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	13	None	replace
11	[BUG]  [BUGGY]  if(isSupportUpperBoundInclusive())  {  return  false;  }  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(isSupportUpperBoundInclusive())  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(isSupportUpperBoundInclusive())  {  return  false;  }	      if(isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
12	[BUG]  [BUGGY]  this.supportUpperBoundInclusive  =  isSupportUpperBoundInclusive();  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]      AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  this.supportUpperBoundInclusive  =  isSupportUpperBoundInclusive();  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.supportUpperBoundInclusive  =  isSupportUpperBoundInclusive();	      if(isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	6	None	replace
13	[BUG]  [BUGGY]  return  true;  if(isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  if(isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    if(isSupportUpperBoundInclusive())  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
14	[BUG]  [BUGGY]  return  true;  if(!isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  unreachable  statement  [FE]      AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  if(!isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    if(!isSupportUpperBoundInclusive())  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
15	[BUG]  [BUGGY]  return  true;  if(!isSupportUpperBoundInclusive())  {  return  false;  }  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  if(!isSupportUpperBoundInclusive())  {  return  false;  }  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    if(!isSupportUpperBoundInclusive())  {  return  false;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
16	[BUG]  [BUGGY]  return  this.upper  ==  null;  [CE]  incomparable  types:  double  and  <null>  [FE]        AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  this.upper  ==  null;  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return  this.upper  ==  null;	  return    this.upper!=    null;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	12	None	replace
17	[BUG]  [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]          AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();	      this.lower    =    Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY).doubleValue();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	14	None	replace
18	[BUG]  [BUGGY]  double  lower  =  getLowerBound()  -  1;  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  double  lower  =  getLowerBound()  -  1;  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  lower  =  getLowerBound()  -  1;	      double    lower    =    getLowerBound();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
19	[BUG]  [BUGGY]  if(this.upper  ==  null)  {  if(this.upper!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.upper  ==  null)  {  if(this.upper!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper  ==  null)  {  if(this.upper!=  null)  {  return  false;  }	      if(this.upper!=    null)    {    if(this.upper    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  if(this.upper!=  null)  {  if(this.upper!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.upper!=  null)  {  if(this.upper!=  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper!=  null)  {  if(this.upper!=  null)  {  return  true;  }	      if(this.upper    ==    null)    {    if(this.upper!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
21	[BUG]  [BUGGY]  return(this.supportUpperBoundInclusive!=  null);  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return(this.supportUpperBoundInclusive!=  null);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return(this.supportUpperBoundInclusive!=  null);	  return    true;    	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	2	None	replace
22	[BUG]  [BUGGY]  if(this.lower!=  null)  {  if(this.upper  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.lower!=  null)  {  if(this.upper  ==  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.lower!=  null)  {  if(this.upper  ==  null)  {  return  false;  }	      if(this.upper!=    null)    {    if(this.upper    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  return  this.supportUpperBoundInclusive.equals(this.upper);  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  this.supportUpperBoundInclusive.equals(this.upper);  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return  this.supportUpperBoundInclusive.equals(this.upper);	      	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	4	None	replace
24	[BUG]  [BUGGY]  double  upper  =  getLowerBound();  if(upper!=  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  double  upper  =  getLowerBound();  if(upper!=  lower)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getLowerBound();  if(upper!=  lower)  {  return  true;  }	      if(isSupportUpperBoundInclusive())    {    double    upper    =    getLowerBound();    if(upper!=    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
25	[BUG]  [BUGGY]  double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]              AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getLowerBound();  if(upper  >=  lower)  {  return  true;  }	      if(isSupportUpperBoundInclusive())    {    double    upper    =    getLowerBound();    if(upper!=    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
26	[BUG]  [BUGGY]  if(isSupportLowerBoundInclusive())  {  return  true;  }  [CE]  missing  return  statement  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(isSupportLowerBoundInclusive())  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(isSupportLowerBoundInclusive())  {  return  true;  }	      if(isSupportUpperBoundInclusive())    {    return    true;    }    	non-compiled	[CE]  missing  return  statement	6	None	replace
27	[BUG]  [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [CE]  cannot  assign  a  value  to  final  variable  lower  [FE]        AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.lower  =  Math.min(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,  DEFAULT_INVERSE_ABSOLUTE_ACCURACY);	      this.lower    =    Math.max(DEFAULT_INVERSE_ABSOLUTE_ACCURACY,    DEFAULT_INVERSE_ABSOLUTE_ACCURACY);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  lower	13	None	replace
28	[BUG]  [BUGGY]  double  upper  =  getLowerBound();  if(upper  ==  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  double  upper  =  getLowerBound();  if(upper  ==  lower)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	double  upper  =  getLowerBound();  if(upper  ==  lower)  {  return  true;  }	      if(isSupportUpperBoundInclusive())    {    double    upper    =    getLowerBound();    if(upper    ==    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
29	[BUG]  [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive())  {  return  true;  }  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive())  {  return  true;  }  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    if(this.isSupportUpperBoundInclusive())  {  return  true;  }	  	non-compiled	[CE]  unreachable  statement	1	None	add
30	[BUG]  [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  false;  }  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  false;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
31	[BUG]  [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  true;  }  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    if(this.isSupportUpperBoundInclusive())  {  if(this.upper!=  null)  {  return  true;  }	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
32	[BUG]  [BUGGY]  if(this.lower  ==  null)  {  if(this.upper  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.lower  ==  null)  {  if(this.upper  ==  null)  {  return  false;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.lower  ==  null)  {  if(this.upper  ==  null)  {  return  false;  }	      if(this.upper!=    null)    {    if(this.upper    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
33	[BUG]  [BUGGY]  this.supportUpperBoundInclusive  =  true;  [CE]  cannot  find  symbol  supportUpperBoundInclusive  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  this.supportUpperBoundInclusive  =  true;  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	this.supportUpperBoundInclusive  =  true;	      	non-compiled	[CE]  cannot  find  symbol  supportUpperBoundInclusive	4	None	replace
34	[BUG]  [BUGGY]  if(this.lower!=  null)  {  if(this.upper!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.lower!=  null)  {  if(this.upper!=  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.lower!=  null)  {  if(this.upper!=  null)  {  return  true;  }	      if(this.upper    ==    null)    {    if(this.upper!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  return  true;  return  true;  [CE]  unreachable  statement  [FE]    AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  return  true;  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    return  true;	  	non-compiled	[CE]  unreachable  statement	1	None	add
36	[BUG]  [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive)  {  return  true;  }  [CE]  cannot  find  symbol  isSupportUpperBoundInclusive  [FE]      AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  return  true;  if(this.isSupportUpperBoundInclusive)  {  return  true;  }  [BUGGY]    }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	return    true;    if(this.isSupportUpperBoundInclusive)  {  return  true;  }	  	non-compiled	[CE]  cannot  find  symbol  isSupportUpperBoundInclusive	1	None	add
37	[BUG]  [BUGGY]  Double  upper  =  getLowerBound();  if(upper  ==  lower)  {  return  true;  }  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  Double  upper  =  getLowerBound();  if(upper  ==  lower)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	Double  upper  =  getLowerBound();  if(upper  ==  lower)  {  return  true;  }	      if(isSupportUpperBoundInclusive())    {    double    upper    =    getLowerBound();    if(upper    ==    lower)    {    return    true;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
38	[BUG]  [BUGGY]  if(this.upper  ==  null)  {  return  true;  }  [CE]  incomparable  types:  double  and  <null>  [FE]          AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.upper  ==  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.upper  ==  null)  {  return  true;  }	      if(this.upper!=    null)    {    if(this.upper    ==    null)    {    return    true;    }    	non-compiled	[CE]  incomparable  types:  double  and  <null>	10	None	replace
39	[BUG]  [BUGGY]  if(this.lower  ==  null)  {  if(this.upper  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    public  boolean  isSupportUpperBoundInclusive()  {    [BUGGY]  if(this.lower  ==  null)  {  if(this.upper  ==  null)  {  return  true;  }  [BUGGY]    return  false;  }  [CLASS]  UniformRealDistribution  [METHOD]  isSupportUpperBoundInclusive  [RETURN_TYPE]  boolean  [VARIABLES]  double  DEFAULT_INVERSE_ABSOLUTE_ACCURACY  inverseCumAccuracy  lower  solverAbsoluteAccuracy  ul  upper  x  long  serialVersionUID  boolean  	projects/Math22/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution.java	0.7071067811865475	184	184	2	replace	if(this.lower  ==  null)  {  if(this.upper  ==  null)  {  return  true;  }	      if(this.upper!=    null)    {    if(this.upper    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
