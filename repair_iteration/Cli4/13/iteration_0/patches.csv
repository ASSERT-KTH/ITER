bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]  while  (iterator.hasNext()  &&  iterator.hasNext())  {  [BUGGY]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	add	while  (iterator.hasNext()  &&  iterator.hasNext())  {	while  (iterator.hasNext())  {  	compilable	  [FE]  ComparisonFailure  	26	2	replace
2	[BUG]  [BUGGY]  while  (iterator.hasNext()  &&  iterator.hasNext())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]  while  (iterator.hasNext()  &&  iterator.hasNext())  {  [BUGGY]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	while  (iterator.hasNext()  &&  iterator.hasNext())  {	while  (iterator.hasNext())  {  	compilable	  [FE]  ComparisonFailure  	26	2	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]  while  (iterator.hasNext()  ||  iterator.hasNext())  {  [BUGGY]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	add	while  (iterator.hasNext()  ||  iterator.hasNext())  {	while  (iterator.hasNext())  {  	compilable	  [FE]  ComparisonFailure  	26	2	replace
4	[BUG]  [BUGGY]  while  (iterator.hasNext()  ||  iterator.hasNext())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]  while  (iterator.hasNext()  ||  iterator.hasNext())  {  [BUGGY]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	while  (iterator.hasNext()  ||  iterator.hasNext())  {	while  (iterator.hasNext())  {  	compilable	  [FE]  ComparisonFailure  	26	2	replace
5	[BUG]  [BUGGY]    [CE]  invalid  method  declaration;  return  type  required  [FE]        ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    [BUGGY]  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	  	while  (iterator.hasNext())  {  	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
6	[BUG]  [BUGGY]    Iterator  iterator  =  this.options.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  this.options.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Iterator  iterator  =  this.options.iterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	27	None	add
7	[BUG]  [BUGGY]    Iterator  iterator  =  options.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  options.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Iterator  iterator  =  options.iterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	27	None	add
8	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]        ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    iterator.next();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	add	    iterator.next();		compilable	  [FE]  NoSuchElementException  	27	2	add
9	[BUG]  [BUGGY]    iterator.next();  [FE]  NoSuchElementException  [FE]        ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    iterator.next();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    iterator.next();		compilable	  [FE]  NoSuchElementException  	27	2	add
10	[BUG]  [BUGGY]    Iterator  iterator  =  this.options.keySet().iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  this.options.keySet().iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Iterator  iterator  =  this.options.keySet().iterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	27	None	add
11	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Option  cmd  =  options.getOption(this.options);  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Option  cmd  =  options.getOption(this.options);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	27	None	add
12	[BUG]  [BUGGY]    Iterator  iterator  =  this.options.listIterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  this.options.listIterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Iterator  iterator  =  this.options.listIterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	27	None	add
13	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(this.options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Option  cmd  =  options.getOption(this.options,  stopAtNonOption);  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Option  cmd  =  options.getOption(this.options,  stopAtNonOption);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	27	None	add
14	[BUG]  [BUGGY]    Iterator  iterator  =  this.requiredOptions.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Iterator  iterator  =  this.requiredOptions.iterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	27	None	add
15	[BUG]  [BUGGY]    Iterator  <  String>  iterator  =  this.options.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  <  String>  iterator  =  this.options.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Iterator  <  String>  iterator  =  this.options.iterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	27	None	add
16	[BUG]  [BUGGY]    Iterator  iterator  =  requiredOptions.iterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ComparisonFailure  [CONTEXT]  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  ListIterator  iterator  =  tokenList.listIterator();    [BUGGY]    Iterator  iterator  =  requiredOptions.iterator();  [BUGGY]  while  (iterator.hasNext())  {  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  }    [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	160	161	2	replace	    Iterator  iterator  =  requiredOptions.iterator();		non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	27	None	add
