bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString());  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(requiredOptions.toString());	  buff.append(   "    <    /   ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
2	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buffer.toString());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(buffer.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(buffer.toString());	  buff.append(   "    <    /   ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
3	[BUG]  [BUGGY]  Iterator  iter  =  opts.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  opts.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  opts.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
4	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  this.options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
5	[BUG]  [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	32	None	replace
6	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append('>');  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append('>');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
7	[BUG]  [BUGGY]  buff.append( "  <   ").append(mv.toString()).append('>');  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(mv.toString()).append('>');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(mv.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
8	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append('>');  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append('>');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(buff.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
9	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()  -  1);  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.size()  -  1);	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
10	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	replace
11	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	replace
12	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	replace
13	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  'n')  {  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	replace
14	[BUG]  [BUGGY]  buff.append( ",n ").append(iter.next());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",n ").append(iter.next());  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",n ").append(iter.next());	  buff.append(   ",   ").append(iter.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
15	[BUG]  [BUGGY]  Iterator  iter  =  this.neededOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  this.neededOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  this.neededOptions.iterator();	  Iterator    iter    =    neededOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
16	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
17	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {	  	non-compiled	[CE]  ';'  expected	20	None	add
18	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
19	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {	  	non-compiled	[CE]  ';'  expected	20	None	add
20	[BUG]  [BUGGY]  while(buff.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('-');    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
21	[BUG]  [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('-');    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	28	None	replace
22	[BUG]  [BUGGY]  While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    While    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    	non-compiled	[CE]  ';'  expected	66	None	replace
23	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  opts.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  opts.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  opts.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
24	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  this.options.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	38	2	add
26	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	38	2	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	38	2	add
28	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	38	2	add
29	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <        .  <        <            <        .  <      [FE]        ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <              .    <              <                      <              .    <        	38	2	add
30	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <        .  <        <            <        .  <      [FE]        ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <              .    <              <                      <              .    <        	38	2	add
31	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.get(0)).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.get(0)).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.get(0)).append( "> ");	  buff.append(   "    <       ").append(options.get(   ">   ")).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
32	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.getValue( "> ")).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.getValue( "> ")).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.getValue( "> ")).append( "> ");	  buff.append(   "    <       ").append(options.get(   ">   ")).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
33	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.get(0)).append( "> ",  options.get(1));  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.get(0)).append( "> ",  options.get(1));  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.get(0)).append( "> ",  options.get(1));	  buff.append(   "    <       ").append(options.get(   ">   ")).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
34	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:  ]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:  ]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:  ]fx>  but  was:  <  [	  	non-compiled	[CE]  not  a  statement	12	None	add
35	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [	  	non-compiled	[CE]  not  a  statement	12	None	add
36	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  required  options:  <  [Missing  required  options:  ]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  required  options:  <  [Missing  required  options:  ]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    junit.framework.ComparisonFailure:  required  options:  <  [Missing  required  options:  ]fx>  but  was:  <  [	  	non-compiled	[CE]  not  a  statement	12	None	add
37	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( ", ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       ",       ");        buff.append(   ",    n   ");    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  	12	2	add
38	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( ", ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  	12	2	add
39	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  required  options:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]            junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  required  options:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    junit.framework.ComparisonFailure:  required  options:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [	  	non-compiled	[CE]  not  a  statement	12	None	add
40	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(Buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(Buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(Buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(Buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
41	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.toString());  buff.append( "  <   ").append(Buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.toString());  buff.append( "  <   ").append(Buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.toString());  buff.append( "  <   ").append(Buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(Buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
42	[BUG]  [BUGGY]  buff.append( "  <   ").append(mv.toString());  buff.append( "  <   ").append(Buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(mv.toString());  buff.append( "  <   ").append(Buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(mv.toString());  buff.append( "  <   ").append(Buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(Buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
43	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
44	[BUG]  [BUGGY]  buff.append( "  <   ").append(mv.toString()).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(mv.toString()).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(mv.toString()).append( "> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
45	[BUG]  [BUGGY]  buff.append( "  <   ").append(mcd.toString()).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(mcd.toString()).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(mcd.toString()).append( "> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
46	[BUG]  [BUGGY]  while(buff.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
47	[BUG]  [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	6	None	replace
48	[BUG]  [BUGGY]  buff.append('[');  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('[');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('[');	  buff.append('n');    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
49	[BUG]  [BUGGY]  buff.append('N');  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('N');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('N');	  buff.append('n');    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
50	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()  +  1);  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.size()  +  1);	  buff.append(   "    <       ").append(requiredOptions.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
51	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.size());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.size());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.size());	  buff.append(   "    <       ").append(requiredOptions.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
52	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:  ]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:  ]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:  ]fx>  but  was:  <  [	  	non-compiled	[CE]  not  a  statement	10	None	add
53	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:  ]fx>  but  was:  <  [	  	non-compiled	[CE]  not  a  statement	10	None	add
54	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( ", ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  	10	2	add
55	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( ", ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  	10	2	add
56	[BUG]  [BUGGY]  buff.append( ",null ");  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",null ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",null ");	  buff.append(   ",n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
57	[BUG]  [BUGGY]  buff.append( ",' ");  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",' ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",' ");	          buff.append(       ",       ");    buff.append(   ",');    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
58	[BUG]  [BUGGY]  buff.append( ",');  [CE]  unclosed  string  literal  [FE]              junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",');  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",');	          buff.append(       ",       ");    buff.append(   ",');    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
59	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.neededOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  this.neededOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  this.neededOptions.iterator();	  Iterator    <    String>    iter    =    neededOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
60	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.get(buff.toString()));  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.get(buff.toString()));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.get(buff.toString()));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
61	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString()  +  1));  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString()  +  1));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.get(buff.toString()  +  1));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
62	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [CE]  class,  interface,  or  enum  expected  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
63	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [CE]  class,  interface,  or  enum  expected  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
64	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "[ ").append(buff.toString());  }  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "[ ").append(buff.toString());  }  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "[ ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
65	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
66	[BUG]  [BUGGY]  Iterator  iter  =  this.selectedOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  this.selectedOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  this.selectedOptions.iterator();	  Iterator    iter    =    selectedOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
67	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
68	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  'n')  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
69	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
70	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  'n')  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
71	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	2	replace
72	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '-')  {  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)  ==  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	2	replace
73	[BUG]  [BUGGY]  buff.append( ",  <   ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",  <   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
74	[BUG]  [BUGGY]  buff.append( ",n ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",n ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",n ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
75	[BUG]  [BUGGY]  buff.append('  <  ').append(buff.toString());  [CE]  unclosed  character  literal  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('  <  ').append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('  <  ').append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
76	[BUG]  [BUGGY]  Iterator  iter  =  neededOptions.iterator();  buff.append( "null ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  neededOptions.iterator();  buff.append( "null ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  neededOptions.iterator();  buff.append( "null ");	  Iterator    iter    =    this.requiredOptions.iterator();    buff.append(   "null   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
77	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(buffer.toString());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(buffer.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(buffer.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
78	[BUG]  [BUGGY]  buff.append( "  <   ").append(mv.toString());  buff.append( "  <   ").append(mv.toString());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(mv.toString());  buff.append( "  <   ").append(mv.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(mv.toString());  buff.append( "  <   ").append(mv.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
79	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.toString());  buff.append( "  <   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
80	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	junit.framework.ComparisonFailure:  expected:  <  [Missing  requiredOptions:]fx>  but  was:  <  [	          buff.append(       ",       ");    buff.append(   ",       ");    	non-compiled	[CE]  not  a  statement	11	None	replace
81	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:]fx>  but  was:  <  [  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:]fx>  but  was:  <  [  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	junit.framework.ComparisonFailure:  expected:  <  [Missing  required  options:]fx>  but  was:  <  [	          buff.append(       ",       ");    buff.append(   ",       ");    	non-compiled	[CE]  not  a  statement	11	None	replace
82	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(1));  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(1));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.get(1));	  buff.append(   "    <       ").append(requiredOptions.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
83	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.get(0));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.get(0));	  buff.append(   "    <       ").append(requiredOptions.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
84	[BUG]  [BUGGY]  buff.append( "null ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "null ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "null ");	  buff.append(   "n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
85	[BUG]  [BUGGY]  buff.append( "  <   ");  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ");	  buff.append(   "n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
86	[BUG]  [BUGGY]  buff.append( "msg.bad.interface.required.key ");  [CE]  class,  interface,  or  enum  expected  [FE]                        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "msg.bad.interface.required.key ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "msg.bad.interface.required.key ");	  buff.append(   "n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
87	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    >=    '/')    {    	compilable	  [FE]  NoSuchElementException  	7	2	replace
88	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  [FE]  NoSuchElementException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    >=    '/')    {    	compilable	  [FE]  NoSuchElementException  	7	2	replace
89	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.selectedOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  this.selectedOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  this.selectedOptions.iterator();	  Iterator    <    String>    iter    =    selectedOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
90	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
91	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  '/')  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
92	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {	  	non-compiled	[CE]  ';'  expected	41	None	add
93	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  '/')  {  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  '/')  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
95	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
97	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
98	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          <        <            <          <      [FE]        ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                  <              <                      <                  <        	33	2	add
99	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          <        <            <          <      [FE]        ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                  <              <                      <                  <        	33	2	add
100	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append('  <  ').append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append('  <  ').append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append('  <  ').append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	non-compiled	[CE]  unclosed  character  literal	33	None	add
101	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(Buff.toString());  buff.append( "  <   ").append(Buff.toString());  [CE]  cannot  find  symbol  Buff  [FE]            ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(Buff.toString());  buff.append( "  <   ").append(Buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(Buff.toString());  buff.append( "  <   ").append(Buff.toString());	  	non-compiled	[CE]  cannot  find  symbol  Buff	33	None	add
102	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	2	replace
103	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	2	replace
104	[BUG]  [BUGGY]  while  (buff.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (buff.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (buff.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
105	[BUG]  [BUGGY]  Iterator  iter  =  this.requiredOptions.iterator();  buff.append( ",null ");  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  this.requiredOptions.iterator();  buff.append( ",null ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  this.requiredOptions.iterator();  buff.append( ",null ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   ",n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
106	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
107	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
108	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
109	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
110	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    <            <          [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append(',').append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append(',').append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[        <                      <                	35	2	add
111	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append(',').append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    <            <          [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append(',').append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append(',').append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[        <                      <                	35	2	add
112	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    <            <          [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(cmd.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[        <                      <                	35	2	add
113	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(cmd.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    <            <          [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(cmd.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[        <                      <                	35	2	add
114	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
115	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  'n')  {  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())  ==  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
116	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    While  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {	  	non-compiled	[CE]  ';'  expected	18	None	add
117	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  'n')  {  [CE]  illegal  start  of  expression  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  'n')  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
118	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	2	replace
119	[BUG]  [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '-')  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  ||  buff.charAt(buff.length())!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	2	replace
120	[BUG]  [BUGGY]  while  (buff.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (buff.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (buff.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
121	[BUG]  [BUGGY]  while(buff.hasNext()  &&  requiredOptions.charAt(buff.length()  -  1)!=  '/')  {  Iterator  iter  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff.hasNext()  &&  requiredOptions.charAt(buff.length()  -  1)!=  '/')  {  Iterator  iter  =  requiredOptions.iterator();  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff.hasNext()  &&  requiredOptions.charAt(buff.length()  -  1)!=  '/')  {  Iterator  iter  =  requiredOptions.iterator();	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    Iterator    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
122	[BUG]  [BUGGY]  While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    While    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    	non-compiled	[CE]  ';'  expected	72	None	replace
123	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.getKey());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.getKey());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.getKey());	  buff.append(   "    <       ").append(iter.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
124	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!='m')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!='m')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!='m')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
125	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!='m')  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!='m')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!='m')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!='m')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
126	[BUG]  [BUGGY]  buff.append( "  }  n ");  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  }  n ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  }  n ");	  buff.append(   "    }       ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
127	[BUG]  [BUGGY]  buff.append( "  }  if(options.size()  >  0)  {  buff.append( "  }   ");  [CE]  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  }  if(options.size()  >  0)  {  buff.append( "  }   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  }  if(options.size()  >  0)  {  buff.append( "  }   ");	  buff.append(   "    }       ");    	non-compiled	[CE]  	54	None	replace
128	[BUG]  [BUGGY]  buff.append( "  }  if(options.size()  ==  0)  {  buff.append( "  }   ");  [CE]  [FE]            junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  }  if(options.size()  ==  0)  {  buff.append( "  }   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  }  if(options.size()  ==  0)  {  buff.append( "  }   ");	  buff.append(   "    }       ");    	non-compiled	[CE]  	54	None	replace
129	[BUG]  [BUGGY]  While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	While  (iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    While    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    	non-compiled	[CE]  ';'  expected	65	None	replace
130	[BUG]  [BUGGY]  while(buff.hasNext()  &&  requiredOptions.charAt(buff.length()  -  1)!=  '-')  {  Iterator  iter  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff.hasNext()  &&  requiredOptions.charAt(buff.length()  -  1)!=  '-')  {  Iterator  iter  =  requiredOptions.iterator();  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff.hasNext()  &&  requiredOptions.charAt(buff.length()  -  1)!=  '-')  {  Iterator  iter  =  requiredOptions.iterator();	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    Iterator    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
131	[BUG]  [BUGGY]  Iterator  iter  =  this.requiredOptions.iterator();  buff.append( "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  this.requiredOptions.iterator();  buff.append( "' ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  this.requiredOptions.iterator();  buff.append( "' ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
132	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  buff.append( "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  options.iterator();  buff.append( "' ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  options.iterator();  buff.append( "' ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
133	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.toString()).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.toString()).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.toString()).append( "> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
134	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.toString()).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.toString()).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.toString()).append( "> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
135	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	2	replace
136	[BUG]  [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	2	replace
137	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	2	replace
138	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	42	2	replace
139	[BUG]  [BUGGY]  while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('-');    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	28	None	replace
140	[BUG]  [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(i.next())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(i.next())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext())  {  buff.append(buff.charAt(i.next())!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('-');    }    	non-compiled	[CE]  ';'  expected	28	None	replace
141	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   "null   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
142	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  buff.append( "[null] ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  options.iterator();  buff.append( "[null] ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  options.iterator();  buff.append( "[null] ");	  Iterator    iter    =    options.iterator();    buff.append(   "null   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
143	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.toString());  buff.append( "  <   ").append(buffer.toString());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.toString());  buff.append( "  <   ").append(buffer.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.toString());  buff.append( "  <   ").append(buffer.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
144	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.toString());  buff.append( "  <   ").append(options.toString());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.toString());  buff.append( "  <   ").append(options.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.toString());  buff.append( "  <   ").append(options.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
145	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
146	[BUG]  [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	19	2	replace
147	[BUG]  [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n  [CE]  unclosed  string  literal  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  unclosed  string  literal	32	None	replace
148	[BUG]  [BUGGY]  while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	32	None	replace
149	[BUG]  [BUGGY]  buff.append( "  <   ").append(Buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(Buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(Buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(Buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
150	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '/')    {    for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
151	[BUG]  [BUGGY]  buff.append( "  <  / ").append(requiredOptions.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(requiredOptions.get(0));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(requiredOptions.get(0));	  buff.append(   "    <       ").append(requiredOptions.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
152	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  opts.iterator();  buff.append( ", ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  opts.iterator();  buff.append( ", ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  opts.iterator();  buff.append( ", ");	  Iterator    <    String>    iter    =    options.iterator();    buff.append(   ",   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
153	[BUG]  [BUGGY]  buff.append( "  <  / ").append(requiredOptions.get(buff.toString()));  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(requiredOptions.get(buff.toString()));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(requiredOptions.get(buff.toString()));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
154	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buffer.toString()));  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buffer.toString()));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.get(buffer.toString()));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
155	[BUG]  [BUGGY]  buff.append( "  }  :  {   ");  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  }  :  {   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  }  :  {   ");	  buff.append(   "    }       ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
156	[BUG]  [BUGGY]  buff.append('  }  ');  [CE]  unclosed  character  literal  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('  }  ');  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('  }  ');	  buff.append(   "    }       ");    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
157	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  }   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
158	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  }   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
159	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
160	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <                	35	2	add
161	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    <            <          [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[        <                      <                	35	2	add
162	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    <            <          [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[        <                      <                	35	2	add
163	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	2	replace
164	[BUG]  [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff!=  null  &&  iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	2	replace
165	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	2	replace
166	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '-')  {  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length()  -  2)!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	21	2	replace
167	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
168	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
169	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'N')  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'n')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'N')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    'n')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  'N')  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
170	[BUG]  [BUGGY]  buff.append( "msg.no.required ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "msg.no.required ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "msg.no.required ");	  buff.append(   "n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
171	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.toString()).append('>');  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.toString()).append('>');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  class,  interface,  or  enum  expected	57	None	replace
172	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  options.values().iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  options.values().iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
173	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.size());  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.size());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.size());	  buff.append(   "    <       ").append(requiredOptions.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
174	[BUG]  [BUGGY]  buff.append( "  <  / ").append(requiredOptions.size());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(requiredOptions.size());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(requiredOptions.size());	  buff.append(   "    <       ").append(requiredOptions.size());    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
175	[BUG]  [BUGGY]  buff.append('  <  ').append(requiredOptions.toString());  [CE]  unclosed  character  literal  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('  <  ').append(requiredOptions.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('  <  ').append(requiredOptions.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
176	[BUG]  [BUGGY]  buff.append('  <  ').append(requiredOptions.get(buff.toString()));  [CE]  unclosed  character  literal  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('  <  ').append(requiredOptions.get(buff.toString()));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('  <  ').append(requiredOptions.get(buff.toString()));	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
177	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!='m')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
178	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(buff.length())!='m')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!='m')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
179	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.toString()).append( ".> ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.toString()).append( ".> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.toString()).append( ".> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
180	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "' ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "' ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
182	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <! ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( "  <! ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
184	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <! ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <! ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( "  <! ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	33	2	add
185	[BUG]  [BUGGY]  while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(buff!=  null  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	6	None	replace
186	[BUG]  [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(i.next())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(i.next())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext())  {  buff.append(buff.charAt(i.next())!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	non-compiled	[CE]  ';'  expected	6	None	replace
187	[BUG]  [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(  [CE]  ';'  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext())  {  buff.append(buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	non-compiled	[CE]  ';'  expected	6	None	replace
188	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  buff.append( ",null ");  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  options.iterator();  buff.append( ",null ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  options.iterator();  buff.append( ",null ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   ",n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
189	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  '-')  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(buff.length())!=  '-')  {  while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while    (iter.hasNext()    &&    buff.charAt(buff.length())!=    '-')    {    while  (iter.hasNext()  &&  buff.charAt(buff.length())  >=  '-')  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
190	[BUG]  [BUGGY]  buff.append( "  <  / ").append(iter.toString());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(iter.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(iter.toString());	  buff.append(   "    <       ").append(iter.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
191	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Ilerator  iter  =  options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
192	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected;  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	12	None	add
193	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  expected  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	12	None	add
194	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  required;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  junit.framework.ComparisonFailure:  required;  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    junit.framework.ComparisonFailure:  required;	  	non-compiled	[CE]  not  a  statement	12	None	add
195	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       ",       ");        buff.append(   ",    n   ");    buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	12	2	add
196	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	12	2	add
197	[BUG]  [BUGGY]  buff.append( "  }   ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  }   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  }   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
198	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected;  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	10	None	add
199	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  expected  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	10	None	add
200	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	10	2	add
201	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	10	2	add
202	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <  [ ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <  [ ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  	10	2	add
203	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <  [ ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <  [ ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( "  <  [Missing  required  options:  ]fx>  but  was:  <  [ ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[  	10	2	add
204	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  buff.append( ",null ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  options.iterator();  buff.append( ",null ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  options.iterator();  buff.append( ",null ");	  Iterator    <    String>    iter    =    requiredOptions.iterator();    buff.append(   ",n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
205	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.get( "> ")).append( ">n ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.get( "> ")).append( ">n ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.get( "> ")).append( ">n ");	  buff.append(   "    <       ").append(options.get(   ">   ")).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
206	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(0)  ==  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	replace
207	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(0)  ==  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	2	replace
208	[BUG]  [BUGGY]  buff.append( ",  expected: ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",  expected: ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",  expected: ").append(buff.toString());	  buff.append(   ",   ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
209	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append('  <   ").append(buff.toString());  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append('  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append('  <   ").append(buff.toString());	  	non-compiled	[CE]  unclosed  character  literal	33	None	add
210	[BUG]  [BUGGY]  buff.append( ". ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ". ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ". ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
211	[BUG]  [BUGGY]  buff.append( "[ ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]      ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "[ ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "[ ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	39	None	replace
212	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  expectedOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  expectedOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  expectedOptions.iterator();	  Iterator    <    String>    iter    =    selectedOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
213	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(0)  ==  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	2	replace
214	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  '-')  {  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(0)  ==  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	27	2	replace
215	[BUG]  [BUGGY]  buff.append( ",  expected: ").append(iter.next());  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",  expected: ").append(iter.next());  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",  expected: ").append(iter.next());	  buff.append(   ",   ").append(iter.next());    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
216	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(0)!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    >=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	2	replace
217	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  '/')  {  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  '/')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(0)!=  '/')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    >=    '/')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	2	replace
218	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <        .  <        <            <        .  <    <      <            <        .  <        <            <        .  <    <    [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",.  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ",.  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <              .    <              <                      <              .    <        <          <                      <              .    <              <                      <              .    <        <    	38	2	add
219	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",.  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    <            <        .  <        <            <        .  <    <      <            <        .  <        <            <        .  <    <    [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",.  <   ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ",.  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[        <                      <              .    <              <                      <              .    <        <          <                      <              .    <              <                      <              .    <        <    	38	2	add
220	[BUG]  [BUGGY]  buff.append( "[null] ");  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "[null] ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "[null] ");	  buff.append(   ",n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	43	None	replace
221	[BUG]  [BUGGY]  Iterator  iter  =  expectedOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  expectedOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  expectedOptions.iterator();	  Iterator    iter    =    neededOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
222	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.get(0));  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.get(0));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.get(0));	  buff.append(   "    <       ").append(requiredOptions.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
223	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.next());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.next());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.next());	  buff.append(   "    <       ").append(requiredOptions.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
224	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.get(1));  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.get(1));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.get(1));	  buff.append(   "    <       ").append(requiredOptions.get(0));    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
225	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buff.toString()  + "> ");  [CE]  class,  interface,  or  enum  expected  [FE]        ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  / ").append(buff.toString()  + "> ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  / ").append(buff.toString()  + "> ");	  buff.append(   "    <    /   ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
226	[BUG]  [BUGGY]  buff.append( ", ").append(requiredOptions.toString());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ", ").append(requiredOptions.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ", ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
227	[BUG]  [BUGGY]  buff.append( "[ ").append(requiredOptions.toString());  [CE]  class,  interface,  or  enum  expected  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "[ ").append(requiredOptions.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "[ ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
228	[BUG]  [BUGGY]  while(iter.hasNext())  {  buff.charAt(buff.length()  -  1)!=  '/')  {  Iterator  iter  =  requiredOptions.iterator();  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext())  {  buff.charAt(buff.length()  -  1)!=  '/')  {  Iterator  iter  =  requiredOptions.iterator();  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext())  {  buff.charAt(buff.length()  -  1)!=  '/')  {  Iterator  iter  =  requiredOptions.iterator();	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    Iterator    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  not  a  statement	59	None	replace
229	[BUG]  [BUGGY]  while(iter.hasNext())  {  buff.charAt(buff.length()  -  1)!=  '-')  {  Iterator  iter  =  requiredOptions.iterator();  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext())  {  buff.charAt(buff.length()  -  1)!=  '-')  {  Iterator  iter  =  requiredOptions.iterator();  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext())  {  buff.charAt(buff.length()  -  1)!=  '-')  {  Iterator  iter  =  requiredOptions.iterator();	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    Iterator    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  not  a  statement	55	None	replace
230	[BUG]  [BUGGY]  while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('/');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	6	None	replace
231	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  buff.append('/');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  buff.append('/');	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	replace
232	[BUG]  [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  buff.append('/');  [FE]  StringIndexOutOfBoundsException  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  buff.append('/');  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  &&  buff.charAt(buff.length()  -  1)!=  '/')  {  buff.append('/');	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '/')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('/');    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	2	replace
233	[BUG]  [BUGGY]  buff.append('>').append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('>').append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('>').append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
234	[BUG]  [BUGGY]  buff.append('  <  ').append(requiredOptions.get(0));  [CE]  unclosed  character  literal  [FE]              ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append('  <  ').append(requiredOptions.get(0));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append('  <  ').append(requiredOptions.get(0));	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
235	[BUG]  [BUGGY]  buff.append( "  <   ").append(buffer.toString()).append( "> ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(buffer.toString()).append( "> ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(buffer.toString()).append( "> ");	  buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
236	[BUG]  [BUGGY]  while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('-');    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	28	None	replace
237	[BUG]  [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(0)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [CE]  ';'  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(0)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext())  {  buff.append(buff.charAt(0)!=  '-')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('-');    }    	non-compiled	[CE]  ';'  expected	28	None	replace
238	[BUG]  [BUGGY]  Ilerator  iter  =  requiredOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Ilerator  iter  =  requiredOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Ilerator  iter  =  requiredOptions.iterator();	  Iterator    iter    =    selectedOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
239	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( ",   ");  buff.append( ",  n   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       ",       ");        buff.append(   ",    n   ");    buff.append( ",   ");  buff.append( ",  n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	12	2	add
240	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( ",   ");  buff.append( ",  n   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",  n   ");  buff.append( ",   ");  buff.append( ",  n   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",    n   ");    buff.append( ",   ");  buff.append( ",  n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	12	2	add
241	[BUG]  [BUGGY]  buff.append( ",  expected:  [ ");  [CE]  class,  interface,  or  enum  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",  expected:  [ ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",  expected:  [ ");	          buff.append(       ",       ");    buff.append(   ",    n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	13	None	replace
242	[BUG]  [BUGGY]  Iterator  iter  =  neededOptions.iterator();  buff.append( "' ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  neededOptions.iterator();  buff.append( "' ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  neededOptions.iterator();  buff.append( "' ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   "'   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
243	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  required;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  junit.framework.ComparisonFailure:  required;  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    junit.framework.ComparisonFailure:  required;	  	non-compiled	[CE]  not  a  statement	10	None	add
244	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  }   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( "  }   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	10	2	add
245	[BUG]  [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  }   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]          buff.append(     ",     ");    buff.append(   ",     ");  buff.append( "  }   ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	                buff.append(       ",       ");        buff.append(   ",       ");    buff.append( "  }   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  	10	2	add
246	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(0)!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	2	replace
247	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  'n')  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(0)!=  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	29	2	replace
248	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  true));  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  true));  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  true));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
249	[BUG]  [BUGGY]  buff.append( "  }  : ");  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  }  : ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  }  : ");	  buff.append(   "    }       ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
250	[BUG]  [BUGGY]  buff.append( "  }   ").append(requiredOptions.size());  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  }   ").append(requiredOptions.size());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  }   ").append(requiredOptions.size());	  buff.append(   "    }       ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	54	None	replace
251	[BUG]  [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  buff.append( "[null] ");  [CE]  class,  interface,  or  enum  expected  [FE]                  ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  buff.append( "[null] ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  requiredOptions.iterator();  buff.append( "[null] ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   "null   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
252	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.preferredOptions.iterator();  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  this.preferredOptions.iterator();  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  this.preferredOptions.iterator();	  Iterator    <    String>    iter    =    preferredOptions.iterator();    	non-compiled	[CE]  class,  interface,  or  enum  expected	68	None	replace
253	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!='m')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(0)!='m')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!='m')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
254	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!='m')  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!='m')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(0)!='m')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!='m')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	48	2	replace
255	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(0)  ==  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	replace
256	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  'n')  {  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)  ==  'n')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(0)  ==  'n')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)    ==    'n')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	30	2	replace
257	[BUG]  [BUGGY]  buff.append( "  <   ").append(value.toString());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(value.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(value.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
258	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.toString());  [CE]  class,  interface,  or  enum  expected  [FE]            ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(options.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(options.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	53	None	replace
259	[BUG]  [BUGGY]  Iterator  iter  =  neededOptions.iterator();  buff.append( ", ");  [CE]  class,  interface,  or  enum  expected  [FE]                      ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  iter  =  neededOptions.iterator();  buff.append( ", ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  iter  =  neededOptions.iterator();  buff.append( ", ");	  Iterator    iter    =    requiredOptions.iterator();    buff.append(   ",n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
260	[BUG]  [BUGGY]  buff.append( "  <   ").append(iter.getValue());  [CE]  class,  interface,  or  enum  expected  [FE]          ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <   ").append(iter.getValue());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <   ").append(iter.getValue());	  buff.append(   "    <       ").append(iter.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
261	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  neededOptions.iterator();  buff.append( ", ");  [CE]  class,  interface,  or  enum  expected  [FE]                ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  Iterator  <  String>  iter  =  neededOptions.iterator();  buff.append( ", ");  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	Iterator  <  String>  iter  =  neededOptions.iterator();  buff.append( ", ");	  Iterator    <    String>    iter    =    requiredOptions.iterator();    buff.append(   ",n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
262	[BUG]  [BUGGY]  buff.append( "[no] ");  [CE]  class,  interface,  or  enum  expected  [FE]                    ComparisonFailure      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "[no] ");  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "[no] ");	  buff.append(   "n   ");    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
263	[BUG]  [BUGGY]  buff.append( ",> ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:]  fx>  but  was:<[  <      <        [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",> ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",> ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
264	[BUG]  [BUGGY]  while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext()  ||  buff.charAt(buff.length()  -  1)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	32	None	replace
265	[BUG]  [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(iter.next()).charAt(0)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [CE]  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while(iter.hasNext())  {  buff.append(buff.charAt(iter.next()).charAt(0)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while(iter.hasNext())  {  buff.append(buff.charAt(iter.next()).charAt(0)!=  'n')  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    'n')    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  	32	None	replace
266	[BUG]  [BUGGY]  buff.append( "  <  n ").append(buff.toString());  [CE]  class,  interface,  or  enum  expected  [FE]    ComparisonFailure    [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( "  <  n ").append(buff.toString());  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( "  <  n ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
267	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	add	while  (iter.hasNext()  &&  buff.charAt(0)!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	2	replace
268	[BUG]  [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  '-')  {  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  while  (iter.hasNext()  &&  buff.charAt(0)!=  '-')  {  [BUGGY]      {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	while  (iter.hasNext()  &&  buff.charAt(0)!=  '-')  {	  while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    while    (iter.hasNext()    &&    buff.charAt(buff.length()    -    1)!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	2	replace
269	[BUG]  [BUGGY]  buff.append( ",   ")  [CE]  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  ]fx>  but  was:<[      [CONTEXT]      {    if  (requiredOptions.size()  >  0)  {  Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();        [BUGGY]  buff.append( ",   ")  [BUGGY]      while  (iter.hasNext())    {  {  buff.append(iter.next());  }  throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	302	303	2	replace	buff.append( ",   ")	          buff.append(       ",       ");    buff.append(   ",       ")    	non-compiled	[CE]  	73	None	replace
