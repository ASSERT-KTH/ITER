bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ListIterator  iterator  =  options.iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  options.iterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  options.iterator();	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
2	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  ListIterator  iterator  =  this.requiredOptions.listIterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  ListIterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator  iterator  =  this.requiredOptions.listIterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	15	None	add
3	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator    iterator    =    this.requiredOptions.listIterator();    Iterator  iterator  =  this.requiredOptions.listIterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	15	None	add
4	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  Option  iterator  =  this.requiredOptions.listIterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  Option  iterator  =  this.requiredOptions.listIterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator    iterator    =    this.requiredOptions.listIterator();    Option  iterator  =  this.requiredOptions.listIterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	15	None	add
5	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null));	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	1	None	replace
6	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  options));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  options));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  options));	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	1	None	replace
7	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	1	None	replace
8	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.iterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  incompatible  types	16	None	replace
9	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList);  [CE]  no  suitable  method  found  for  listIterator(List)  [FE]      ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList);  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList);	  ListIterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(List)	16	None	replace
10	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.requiredOptions.iterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;	16	None	replace
11	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.options.iterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.options.iterator();	  ListIterator    iterator    =    this.options.listIterator();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
12	[BUG]  [BUGGY]  ListIterator  iterator  =  this.tokenList.iterator();  [CE]  cannot  find  symbol  tokenList  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.tokenList.iterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.tokenList.iterator();	  ListIterator    iterator    =    this.tokenList.listIterator();    	non-compiled	[CE]  cannot  find  symbol  tokenList	6	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(tokenList,  stopAtNonOption);	      Option    cmd    =    options.getOptions(tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  tokenList);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOptions(this.options,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  tokenList);	      Option    cmd    =    options.getOptions(tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(t,  tokenList);  [CE]  cannot  find  symbol  t  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOptions(t,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(t,  tokenList);	      Option    cmd    =    options.getOptions(tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	10	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  tokenList);  [CE]  cannot  find  symbol  opts  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.opts,  tokenList);	      Option    cmd    =    options.getOptions(tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	10	None	replace
17	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  option  =  options.getOption(this.options,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.options,  tokenList);	      Option    option    =    options.getOption(tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenList,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  option  =  options.getOption(tokenList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(tokenList,  stopAtNonOption);	      Option    option    =    options.getOption(tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  tokenList);  [CE]  cannot  find  symbol  t  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  option  =  options.getOption(t,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(t,  tokenList);	      Option    option    =    options.getOption(tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	11	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.opts,  tokenList);  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  option  =  options.getOption(this.opts,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.opts,  tokenList);	      Option    option    =    options.getOption(tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	11	None	replace
21	[BUG]  [BUGGY]  ListIterator  iterator  =  arguments.iterator();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  arguments.iterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  arguments.iterator();	  ListIterator    iterator    =    tokenList.iterator();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
22	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  stopAtNonOption));	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    argument,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	3	None	replace
23	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  tokenList);	      Option    cmd    =    options.getOption(tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	4	None	replace
24	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  tokenList);	      Option    cmd    =    options.getOption(tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	4	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.opts,  tokenList);  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.opts,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.opts,  tokenList);	      Option    cmd    =    options.getOption(tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	4	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  tokenList,  stopAtNonOption);	      Option    cmd    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(tokenList,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(tokenList,  arguments,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(tokenList,  arguments,  stopAtNonOption);	      Option    cmd    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  tokenList,  stopAtNonOption);	      Option    cmd    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  t	14	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(tokenList,  this.options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(tokenList,  this.options,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(tokenList,  this.options,  stopAtNonOption);	      Option    cmd    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
30	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  -  1);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  -  1);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  -  1);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(tokenList.size());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
31	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  +  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  +  1);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  +  1);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(tokenList.size());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
32	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  -  2);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  -  2);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  -  2);	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(tokenList.size());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
33	[BUG]  [BUGGY]  Arrays.sort(tokenList,  arguments);  [CE]  no  suitable  method  found  for  sort(List,String[])  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Arrays.sort(tokenList,  arguments);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  arguments);	      Arrays.sort(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,String[])	12	None	replace
34	[BUG]  [BUGGY]  Arrays.sort(tokenList,  this.options);  [CE]  no  suitable  method  found  for  sort(List,Options)  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Arrays.sort(tokenList,  this.options);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  this.options);	      Arrays.sort(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,Options)	12	None	replace
35	[BUG]  [BUGGY]  Arrays.sort(tokenList,  options);  [CE]  no  suitable  method  found  for  sort(List,Options)  [FE]                ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Arrays.sort(tokenList,  options);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  options);	      Arrays.sort(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,Options)	12	None	replace
36	[BUG]  [BUGGY]  Arrays.sort(arguments,  tokenList);  [CE]  no  suitable  method  found  for  sort(String[],List)  [FE]                  ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Arrays.sort(arguments,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(arguments,  tokenList);	      Arrays.sort(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(String[],List)	12	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption);	      Option    cmd    =    options.getOption(this.options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	5	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  this.options.getOption(options,  arguments);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(options,  arguments);	      Option    cmd    =    options.getOption(this.options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	5	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  argument,  stopAtNonOption);  [CE]  cannot  find  symbol  argument  [FE]                    ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.options,  argument,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  argument,  stopAtNonOption);	      Option    cmd    =    options.getOption(this.options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argument	5	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption));  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption));	      Option    cmd    =    options.getOption(this.options,    arguments);    	non-compiled	[CE]  ';'  expected	5	None	replace
41	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keySet().listIterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  options.keySet().listIterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  options.keySet().listIterator();	  ListIterator    iterator    =    options.listIterator();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
42	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  ListIterator  iterator  =  this.requiredOptions.listIterator();  if(   "-- ".equals(t))  {  eatTheRest  =  true;  }  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  ListIterator  iterator  =  this.requiredOptions.listIterator();  if(   "-- ".equals(t))  {  eatTheRest  =  true;  }  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator  iterator  =  this.requiredOptions.listIterator();  if(   "-- ".equals(t))  {  eatTheRest  =  true;  }	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	15	None	add
43	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  ListIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  ListIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();	  	non-compiled	[CE]  variable  iterator  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	15	None	add
44	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  argumentList,  stopAtNonOption);  [CE]  cannot  find  symbol  argumentList  [FE]                ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.options,  argumentList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  argumentList,  stopAtNonOption);	      Option    cmd    =    options.getOption(this.options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argumentList	5	None	replace
45	[BUG]  [BUGGY]  Arrays.sort(tokenList,  stopAtNonOption);  [CE]  no  suitable  method  found  for  sort(List,boolean)  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Arrays.sort(tokenList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  stopAtNonOption);	      Arrays.sort(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,boolean)	12	None	replace
46	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    argument,    stopAtNonOption));    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(options,  tokenList);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOptions(options,  tokenList);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(options,  tokenList);	      Option    cmd    =    options.getOptions(tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOptions(this.options);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options);	      Option    cmd    =    options.getOptions(tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
49	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.opts,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(this.opts,  tokenList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.opts,  tokenList,  stopAtNonOption);	      Option    cmd    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opts	14	None	replace
50	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(tokenList.size());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(tokenList.size());  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>(tokenList.size());	      List    <    String>    requiredOptions    =    new    ArrayList    <    String>(tokenList.size());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
51	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.listIterator(tokenList);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.options.listIterator(tokenList);  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.options.listIterator(tokenList);	  ListIterator    iterator    =    this.options.listIterator();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
52	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  stopAtNonOption),  arguments);  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  stopAtNonOption),  arguments);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  stopAtNonOption),  arguments);	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    options,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	2	None	replace
53	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  this.options);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  this.options);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(tokenList,  this.options);	      Option    cmd    =    options.getOptions(tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	10	None	replace
54	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator    iterator    =    this.requiredOptions.listIterator();    IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
55	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator    iterator    =    this.requiredOptions.listIterator();    Option  option  =  this.requiredOptions.listIterator();	  	non-compiled	[CE]  incompatible  types	15	None	add
56	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  arguments);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  arguments);	      Option    cmd    =    options.getOption(this.options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	5	None	replace
57	[BUG]  [BUGGY]  ListIterator  iterator  =  this.tokenList.listIterator(this.options);  [CE]  cannot  find  symbol  tokenList  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =  this.tokenList.listIterator(this.options);  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.tokenList.listIterator(this.options);	  ListIterator    iterator    =    this.tokenList.listIterator();    	non-compiled	[CE]  cannot  find  symbol  tokenList	6	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(tokenList,  this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(tokenList,  this.options);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(tokenList,  this.options);	      Option    cmd    =    options.getOption(tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	4	None	replace
59	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  this.stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  this.stopAtNonOption));  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  this.stopAtNonOption));	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	1	None	replace
60	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  options);  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  options);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  options);	      List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	1	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenList,  this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  option  =  options.getOption(tokenList,  this.options);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(tokenList,  this.options);	      Option    option    =    options.getOption(tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
62	[BUG]  [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  tokenList;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  tokenList;  [BUGGY]      while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  tokenList;	  ListIterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  incompatible  types	16	None	replace
63	[BUG]  [BUGGY]  Arrays.sort(tokenList,  preferredOptions);  [CE]  cannot  find  symbol  preferredOptions  [FE]            ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Arrays.sort(tokenList,  preferredOptions);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  preferredOptions);	      Arrays.sort(tokenList);    	non-compiled	[CE]  cannot  find  symbol  preferredOptions	12	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  tokenList,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));    [BUGGY]  Option  cmd  =  options.getOption(options,  tokenList,  stopAtNonOption);  [BUGGY]    ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (   "--   ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(options,  tokenList,  stopAtNonOption);	      Option    cmd    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
