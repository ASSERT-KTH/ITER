bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));		non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	25	None	add
2	[BUG]  [BUGGY]    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  stopAtNonOption));		non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	25	None	add
3	[BUG]  [BUGGY]    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  argument,  stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  argument,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  argument,  stopAtNonOption));		non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	25	None	add
4	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    Option  cmd  =  options.getOption(tokenList);  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    Option  cmd  =  options.getOption(tokenList);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	25	None	add
5	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(this.options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    Option  cmd  =  options.getOption(this.options,  arguments);  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    Option  cmd  =  options.getOption(this.options,  arguments);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	25	None	add
6	[BUG]  [BUGGY]  ListIterator  iterator  =  this.tokenList.listIterator();  [CE]  cannot  find  symbol  tokenList  [FE]    ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  this.tokenList.listIterator();  [BUGGY]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.tokenList.listIterator();	ListIterator  iterator  =  tokenList.listIterator();  	non-compiled	[CE]  cannot  find  symbol  tokenList	24	None	replace
7	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.listIterator();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  this.options.listIterator();  [BUGGY]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.options.listIterator();	ListIterator  iterator  =  tokenList.listIterator();  	non-compiled	[CE]  cannot  find  symbol	24	None	replace
8	[BUG]  [BUGGY]  ListIterator  iterator  =  tokenList.iterator();  [CE]  incompatible  types  [FE]        ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  tokenList.iterator();  [BUGGY]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  tokenList.iterator();	ListIterator  iterator  =  tokenList.listIterator();  	non-compiled	[CE]  incompatible  types	24	None	replace
9	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  options.listIterator();  [BUGGY]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  options.listIterator();	ListIterator  iterator  =  tokenList.listIterator();  	non-compiled	[CE]  cannot  find  symbol	24	None	replace
10	[BUG]  [BUGGY]    Option  cmd  =  options.getOptions(tokenList);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    Option  cmd  =  options.getOptions(tokenList);  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    Option  cmd  =  options.getOptions(tokenList);		non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	25	None	add
11	[BUG]  [BUGGY]    Option  option  =  options.getOption(tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    Option  option  =  options.getOption(tokenList);  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    Option  option  =  options.getOption(tokenList);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	25	None	add
12	[BUG]  [BUGGY]    Arrays.sort(tokenList);  [CE]  no  suitable  method  found  for  sort(List)  [FE]        ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    Arrays.sort(tokenList);  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    Arrays.sort(tokenList);		non-compiled	[CE]  no  suitable  method  found  for  sort(List)	25	None	add
13	[BUG]  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size());  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size());		non-compiled	[CE]  cannot  find  symbol	25	None	add
14	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(tokenList,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]    Option  cmd  =  options.getOption(tokenList,  stopAtNonOption);  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	    Option  cmd  =  options.getOption(tokenList,  stopAtNonOption);		non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	25	None	add
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	add	ListIterator  iterator  =  this.requiredOptions.listIterator();	ListIterator  iterator  =  tokenList.listIterator();  	compilable	  [FE]  ComparisonFailure  	24	2	replace
16	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]    while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  ( "-- ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator();	ListIterator  iterator  =  tokenList.listIterator();  	compilable	  [FE]  ComparisonFailure  	24	2	replace
