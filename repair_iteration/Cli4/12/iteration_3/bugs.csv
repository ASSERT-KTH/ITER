bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Iterator  iterator  =  tokenList.iterator();  [CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  tokenList.iterator();	  Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;	10	None	replace
2	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.options.iterator();	  Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
3	[BUG]  [BUGGY]  Iterator  iterator  =  options.iterator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  options.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  options.iterator();	  Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
4	[BUG]  [BUGGY]  Arrays.sort(this.options,  tokenList);  [CE]  no  suitable  method  found  for  sort(Options,List)  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(this.options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(this.options,  tokenList);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(Options,List)	34	None	replace
5	[BUG]  [BUGGY]  Arrays.sort(tokenList,  this.options,  stopAtNonOption);  [CE]  no  suitable  method  found  for  sort(List,Options,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  this.options,  stopAtNonOption);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,Options,boolean)	34	None	replace
6	[BUG]  [BUGGY]  Arrays.sort(tokenList,  arguments,  this.options);  [CE]  no  suitable  method  found  for  sort(List,String[],Options)  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  arguments,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  arguments,  this.options);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,String[],Options)	34	None	replace
7	[BUG]  [BUGGY]  Arrays.sort(tokenList,  options,  this.options);  [CE]  no  suitable  method  found  for  sort(List,Options,Options)  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  options,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  options,  this.options);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,Options,Options)	34	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  this.options,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(tokenList,  this.options,  stopAtNonOption);	  Option    cmd    =    options.getOptions(tokenList,    this.options);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	53	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOptions(tokenList,  options);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOptions(tokenList,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOptions(tokenList,  options);	  Option    cmd    =    options.getOptions(tokenList,    this.options);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	53	None	replace
10	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(t,  tokenList,  this.options);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(t,  tokenList,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(t,  tokenList,  this.options);	  Option    cmd    =    options.getOptions(tokenList,    this.options);    	non-compiled	[CE]  cannot  find  symbol  t	53	None	replace
11	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  tokenList,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	26	None	replace
12	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	26	None	replace
13	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  stopAtNonOption,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  stopAtNonOption,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  tokenList,  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(this.options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	26	None	replace
14	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  tokenList);	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	37	None	replace
15	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  null,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  null,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  null,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	37	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(options,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(options,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(options,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	37	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  eatTheRest);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  eatTheRest);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  eatTheRest);	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	37	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  tokenList,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOptions(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	13	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  arguments,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(tokenList,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOptions(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	13	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.opts,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOptions(tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opts	13	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(t,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(t,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(t,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOptions(tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  t	13	None	replace
22	[BUG]  [BUGGY]  ListIterator  iterator  =  tokenList.listIterator(this.options);  [CE]  no  suitable  method  found  for  listIterator(Options)  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  tokenList.listIterator(this.options);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  tokenList.listIterator(this.options);	  ListIterator    iterator    =    this.options.listIterator(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(Options)	51	None	replace
23	[BUG]  [BUGGY]  ListIterator  iterator  =  options.listIterator(tokenList);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.listIterator(tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  options.listIterator(tokenList);	  ListIterator    iterator    =    this.options.listIterator(tokenList);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
24	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.listIterator(tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.options.listIterator(tokenList,  stopAtNonOption);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.options.listIterator(tokenList,  stopAtNonOption);	  ListIterator    iterator    =    this.options.listIterator(tokenList);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  t);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  t);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(tokenList,  t);	  Option    cmd    =    options.getOptions(t,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	15	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.opts,  arguments,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.opts,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.opts,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.opts,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opts	49	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  this.opts.getOption(options,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.opts.getOption(options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.opts.getOption(options,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.opts,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opts	49	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.opts,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.opts,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.opts,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.opts,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opts	49	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(options,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    argument,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	39	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  stopAtNonOption,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  stopAtNonOption,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  stopAtNonOption,  arguments);	  Option    cmd    =    options.getOption(this.options,    argument,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	39	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  arguments,  tokenList);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  arguments,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  arguments,  tokenList);	  Option    cmd    =    options.getOptions(this.options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  this.options,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  this.options,  stopAtNonOption);	  Option    cmd    =    options.getOptions(this.options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
33	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator();  [CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;	2	None	replace
34	[BUG]  [BUGGY]  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  tokenList);  [CE]  cannot  find  symbol  str  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(str,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(str,  tokenList);	  Option    option    =    options.getOption(t,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  str	19	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  this.options);  [CE]  cannot  find  symbol  t  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(t,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(t,  this.options);	  Option    option    =    options.getOption(t,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	19	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  stopAtNonOption);	  Option    cmd    =    options.getOptions(this.options);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	48	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  arguments);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  arguments);	  Option    cmd    =    options.getOptions(this.options);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	48	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  tokenList,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.options,  tokenList,  stopAtNonOption);	  Option    option    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	18	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenList,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(tokenList,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	18	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenList,  this.options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(tokenList,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(tokenList,  this.options,  stopAtNonOption);	  Option    option    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	18	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(t,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(t,  tokenList,  stopAtNonOption);	  Option    option    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  t	18	None	replace
43	[BUG]  [BUGGY]  Option  iterator  =  this.requiredOptions.listIterator();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  iterator  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  iterator  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    Option    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  incompatible  types	4	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  arguments,  tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.options,  arguments,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.options,  arguments,  tokenList);	  Option    option    =    options.getOption(this.options,    tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	17	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.options,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.options,  arguments,  stopAtNonOption);	  Option    option    =    options.getOption(this.options,    tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	17	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(arguments,  stopAtNonOption);	  Option    cmd    =    this.options.getOption(options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	38	None	replace
47	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(tokenList,  options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(tokenList,  options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(tokenList,  options,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    this.options,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	29	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(tokenList,  this.options,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(tokenList,  this.options,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(tokenList,  this.options,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    this.options,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	29	None	replace
49	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList,  this.options,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  tokenList,  this.options,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    this.options,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  t	29	None	replace
50	[BUG]  [BUGGY]  Arrays.sort(tokenList,  arguments,  stopAtNonOption);  [CE]  no  suitable  method  found  for  sort(List,String[],boolean)  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  arguments,  stopAtNonOption);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,String[],boolean)	33	None	replace
51	[BUG]  [BUGGY]  Arrays.sort(parameters,  tokenList);  [CE]  cannot  find  symbol  parameters  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(parameters,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(parameters,  tokenList);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  cannot  find  symbol  parameters	33	None	replace
52	[BUG]  [BUGGY]  Arrays.sort(parameterList,  tokenList);  [CE]  cannot  find  symbol  parameterList  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(parameterList,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(parameterList,  tokenList);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  cannot  find  symbol  parameterList	33	None	replace
53	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  requiredOptions);  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  requiredOptions);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  requiredOptions);	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption),    options);    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	60	None	replace
54	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(str,  tokenList);  [CE]  cannot  find  symbol  str  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(str,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(str,  tokenList);	  Option    cmd    =    options.getOption(t,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  str	24	None	replace
55	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  stopAtNonOption);	  Option    cmd    =    options.getOption(t,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	24	None	replace
56	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  stopAtNonOption));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
57	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  stopAtNonOption));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  stopAtNonOption));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
58	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  tokenList));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  tokenList));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption,  tokenList));	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  ';'  expected	40	None	replace
59	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  arguments,  stopAtNonOption));  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  arguments,  stopAtNonOption));	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  ';'  expected	40	None	replace
60	[BUG]  [BUGGY]  Arrays.sort(arguments,  tokenList,  stopAtNonOption);  [CE]  no  suitable  method  found  for  sort(String[],List,boolean)  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(arguments,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(arguments,  tokenList,  stopAtNonOption);	  Arrays.sort(arguments,    tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(String[],List,boolean)	36	None	replace
61	[BUG]  [BUGGY]  Arrays.sort(this.options,  arguments,  tokenList);  [CE]  no  suitable  method  found  for  sort(Options,String[],List)  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(this.options,  arguments,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(this.options,  arguments,  tokenList);	  Arrays.sort(arguments,    tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(Options,String[],List)	36	None	replace
62	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.options,  tokenList);  [CE]  no  suitable  method  found  for  sort(String[],Options,List)  [FE]                          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(arguments,  this.options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(arguments,  this.options,  tokenList);	  Arrays.sort(arguments,    tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  sort(String[],Options,List)	36	None	replace
63	[BUG]  [BUGGY]  ListIterator  iterator  =(this.options!=  null)?  this.options.iterator()  :  tokenList.iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.options!=  null)?  this.options.iterator()  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.options!=  null)?  this.options.iterator()  :  tokenList.iterator();	  ListIterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.opts,  stopAtNonOption);	  Option    cmd    =    options.getOptions(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	16	None	replace
65	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  arguments);  [CE]  cannot  find  symbol  opts  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.opts,  arguments);	  Option    cmd    =    options.getOptions(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	16	None	replace
66	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  this.stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.opts,  this.stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.opts,  this.stopAtNonOption);	  Option    cmd    =    options.getOptions(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	16	None	replace
67	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  tokenList,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	27	None	replace
68	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(tokenList,  arguments,  stopAtNonOption,  this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(tokenList,  arguments,  stopAtNonOption,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(tokenList,  arguments,  stopAtNonOption,  this.options);	  Option    cmd    =    options.getOption(tokenList,    arguments,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	27	None	replace
69	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  argument,  stopAtNonOption);  [CE]  cannot  find  symbol  argument  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  argument,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  tokenList,  argument,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  argument	27	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.opts,  tokenList,  arguments,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.opts,  tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.opts,  tokenList,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    arguments,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opts	27	None	replace
71	[BUG]  [BUGGY]  Arrays.sort(tokenList,  options,  stopAtNonOption);  [CE]  no  suitable  method  found  for  sort(List,Options,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  options,  stopAtNonOption);	  Arrays.sort(tokenList,    options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,Options,boolean)	35	None	replace
72	[BUG]  [BUGGY]  Arrays.sort(options,  tokenList);  [CE]  no  suitable  method  found  for  sort(Options,List)  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(options,  tokenList);	  Arrays.sort(tokenList,    options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(Options,List)	35	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.opts,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.opts,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.opts,  stopAtNonOption);	  Option    option    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	20	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.opts,  arguments);  [CE]  cannot  find  symbol  opts  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.opts,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.opts,  arguments);	  Option    option    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	20	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.opts,  this.stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.opts,  this.stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.opts,  this.stopAtNonOption);	  Option    option    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	20	None	replace
76	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(tokenList,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(tokenList,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(tokenList,  options);	  Option    cmd    =    options.getOption(tokenList,    this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	58	None	replace
77	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList,  this.options);  [CE]  cannot  find  symbol  t  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(t,  tokenList,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  tokenList,  this.options);	  Option    cmd    =    options.getOption(tokenList,    this.options);    	non-compiled	[CE]  cannot  find  symbol  t	58	None	replace
78	[BUG]  [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size());  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ArrayList  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(tokenList.size()    -    2);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
79	[BUG]  [BUGGY]  ListIterator  iterator  =  this.arguments.iterator();  [CE]  cannot  find  symbol  arguments  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.arguments.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.arguments.iterator();	  ListIterator    iterator    =    arguments.iterator();    	non-compiled	[CE]  cannot  find  symbol  arguments	21	None	replace
80	[BUG]  [BUGGY]  ListIterator  iterator  =  this.parameterList.iterator();  [CE]  cannot  find  symbol  parameterList  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.parameterList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.parameterList.iterator();	  ListIterator    iterator    =    arguments.iterator();    	non-compiled	[CE]  cannot  find  symbol  parameterList	21	None	replace
81	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  tokenList);	  Option    cmd    =    options.getOption(this.options,    tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	23	None	replace
82	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    this.stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	59	None	replace
83	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(tokenList.size()  -  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  requiredOptions  =  new  LinkedList  <  String>(tokenList.size()  -  1);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  LinkedList  <  String>(tokenList.size()  -  1);	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>(tokenList.size());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
84	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  *  1);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  *  1);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(tokenList.size()  *  1);	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(tokenList.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
85	[BUG]  [BUGGY]  Iterator  iterator  =  this.options.listIterator();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.options.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.options.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator    iterator    =    this.requiredOptions.listIterator();    if(       "--   ".equals(t))    {    eatTheRest    =    true;    }    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
86	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.listIterator(this.tokenList);  [CE]  cannot  find  symbol  tokenList  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.options.listIterator(this.tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.options.listIterator(this.tokenList);	  ListIterator    iterator    =    this.tokenList.listIterator(this.options);    	non-compiled	[CE]  cannot  find  symbol  tokenList	57	None	replace
87	[BUG]  [BUGGY]  ListIterator  iterator  =  this.optionList.listIterator(this.tokenList);  [CE]  cannot  find  symbol  tokenList  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.optionList.listIterator(this.tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.optionList.listIterator(this.tokenList);	  ListIterator    iterator    =    this.tokenList.listIterator(this.options);    	non-compiled	[CE]  cannot  find  symbol  tokenList	57	None	replace
88	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.opts,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.opts,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.opts,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	25	None	replace
89	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.opts,  this.stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.opts,  this.stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.opts,  this.stopAtNonOption);	  Option    cmd    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	25	None	replace
90	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.opts,  arguments);  [CE]  cannot  find  symbol  opts  [FE]                          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.opts,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.opts,  arguments);	  Option    cmd    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	25	None	replace
91	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  arguments,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(t,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(t,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  t	28	None	replace
92	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(str,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  str  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(str,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(str,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOption(t,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  str	28	None	replace
93	[BUG]  [BUGGY]  Arrays.sort(this.options,  tokenList,  stopAtNonOption);  [CE]  no  suitable  method  found  for  sort(Options,List,boolean)  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(this.options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(this.options,  tokenList,  stopAtNonOption);	  Arrays.sort(tokenList,    stopAtNonOption);    	non-compiled	[CE]  no  suitable  method  found  for  sort(Options,List,boolean)	45	None	replace
94	[BUG]  [BUGGY]  Arrays.sort(tokenList,  this.opts,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  this.opts,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  this.opts,  stopAtNonOption);	  Arrays.sort(tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opts	45	None	replace
95	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  requiredOptions));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  requiredOptions));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  requiredOptions));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption,    options));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
96	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  parameters));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  parameters));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  parameters));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption,    options));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
97	[BUG]  [BUGGY]  ListIterator  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.listIterator()  :  tokenList;  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.listIterator()  :  tokenList;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.listIterator()  :  tokenList;	  ListIterator    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.listIterator()    :    tokenList;    	non-compiled	[CE]  incompatible  types	62	None	replace
98	[BUG]  [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  this.options;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  this.options;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  this.options;	  ListIterator    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.listIterator()    :    tokenList;    	non-compiled	[CE]  incompatible  types	62	None	replace
99	[BUG]  [BUGGY]  ListIterator  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.listIterator()  :  this.options;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.listIterator()  :  this.options;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.requiredOptions  ==  null)?  this.requiredOptions.listIterator()  :  this.options;	  ListIterator    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.listIterator()    :    tokenList;    	non-compiled	[CE]  incompatible  types	62	None	replace
100	[BUG]  [BUGGY]  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator    iterator    =    this.requiredOptions.listIterator();    Iterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
101	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  tokenList,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  tokenList,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  tokenList,  arguments);	  Option    cmd    =    this.options.getOption(this.options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	56	None	replace
102	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  argument,  stopAtNonOption);  [CE]  cannot  find  symbol  argument  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  argument,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  argument,  stopAtNonOption);	  Option    cmd    =    this.options.getOption(this.options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  argument	56	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  options,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  options,  arguments);	  Option    cmd    =    this.options.getOption(this.options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	56	None	replace
104	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  cmd);  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  cmd);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption),  cmd);	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    options,    stopAtNonOption),    arguments);    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	52	None	replace
105	[BUG]  [BUGGY]  Option  option  =  this.requiredOptions.listIterator();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    Option    option    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  incompatible  types	55	None	replace
106	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  Option  option  =  this.requiredOptions.listIterator();  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator();  Option  option  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.requiredOptions.iterator();  Option  option  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    Option    option    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  incompatible  types	55	None	replace
107	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    Option    option    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  incompatible  types	55	None	replace
108	[BUG]  [BUGGY]  Arrays.sort(tokenList,  this.requiredOptions);  [CE]  no  suitable  method  found  for  sort(List,List)  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  this.requiredOptions);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  this.requiredOptions);	  Arrays.sort(tokenList,    preferredOptions);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,List)	63	None	replace
109	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  options);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(tokenList,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(tokenList,  options);	  Option    cmd    =    options.getOptions(options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	47	None	replace
110	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  options,  tokenList);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  options,  tokenList);	  Option    cmd    =    options.getOptions(options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	47	None	replace
111	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(options,  tokenList,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(options,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOptions(options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	47	None	replace
112	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  tokenList,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOption(options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	64	None	replace
113	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(tokenList,  options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(tokenList,  options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(tokenList,  options,  stopAtNonOption);	  Option    cmd    =    options.getOption(options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	64	None	replace
114	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  null));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(arguments,  this.options,  null));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    null));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	5	None	replace
115	[BUG]  [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  options.keySet().iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  options.keySet().iterator();	  ListIterator    iterator    =    options.keySet().listIterator();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
116	[BUG]  [BUGGY]  ListIterator  iterator  =  tokenList.keySet().listIterator();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  tokenList.keySet().listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  tokenList.keySet().listIterator();	  ListIterator    iterator    =    options.keySet().listIterator();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
117	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.keySet().listIterator();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.options.keySet().listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.options.keySet().listIterator();	  ListIterator    iterator    =    options.keySet().listIterator();    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
118	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList,  stopAtNonOption);  [CE]  no  suitable  method  found  for  listIterator(List,boolean)  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList,  stopAtNonOption);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList,  stopAtNonOption);	  ListIterator    iterator    =    this.requiredOptions.listIterator(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(List,boolean)	9	None	replace
119	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList,  arguments);  [CE]  no  suitable  method  found  for  listIterator(List,String[])  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList,  arguments);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(tokenList,  arguments);	  ListIterator    iterator    =    this.requiredOptions.listIterator(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(List,String[])	9	None	replace
120	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(this.options,  tokenList);  [CE]  no  suitable  method  found  for  listIterator(Options,List)  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(this.options,  tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(this.options,  tokenList);	  ListIterator    iterator    =    this.requiredOptions.listIterator(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(Options,List)	9	None	replace
121	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(t,  tokenList);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(t,  tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(t,  tokenList);	  ListIterator    iterator    =    this.requiredOptions.listIterator(tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	9	None	replace
122	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(tokenList,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  this.options.getOption(tokenList,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  this.options.getOption(tokenList,  options);	  Option    option    =    options.getOption(tokenList,    this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	61	None	replace
123	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  tokenList,  this.options);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(t,  tokenList,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(t,  tokenList,  this.options);	  Option    option    =    options.getOption(tokenList,    this.options);    	non-compiled	[CE]  cannot  find  symbol  t	61	None	replace
124	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(options,  arguments,  tokenList);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(options,  arguments,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(options,  arguments,  tokenList);	  Option    cmd    =    options.getOptions(options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	47	None	replace
125	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  this.stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  this.stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  options,  this.stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    this.stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	59	None	replace
126	[BUG]  [BUGGY]  Arrays.sort(tokenList,  argument);  [CE]  cannot  find  symbol  argument  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  argument);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  argument);	  Arrays.sort(arguments,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  argument	36	None	replace
127	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  options,  stopAtNonOption);	  Option    cmd    =    this.options.getOption(this.options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	56	None	replace
128	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  options);	  Option    cmd    =    this.options.getOption(this.options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	56	None	replace
129	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.opts,  arguments,  stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.opts,  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.opts,  arguments,  stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(arguments,    stopAtNonOption));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	7	None	replace
130	[BUG]  [BUGGY]  ListIterator  iterator  =  this.options.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.options.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.options.listIterator();  Iterator  iterator  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    Iterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
131	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.values().iterator();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.values().iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.values().iterator();	  ListIterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
132	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  stopAtNonOption);	  Option    cmd    =    this.options.getOption(options,    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	38	None	replace
133	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  arguments,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOptions(this.options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
134	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator();  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator();  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.requiredOptions.listIterator();  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    IllegalArgumentIterator    iterator    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
135	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  this.options,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(t,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  this.options,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    this.options,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  t	29	None	replace
136	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOptions(options);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOptions(options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOptions(options);	  Option    cmd    =    options.getOptions(this.options);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	48	None	replace
137	[BUG]  [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.listIterator();  [CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  <  String>  iterator  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  <  String>  iterator  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator    iterator    =    this.requiredOptions.listIterator();    if(       "--   ".equals(t))    {    eatTheRest    =    true;    }    	non-compiled	[CE]  method  processOption  in  class  Parser  cannot  be  applied  to  given  types;	42	None	replace
138	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  this.options.asList(flatten(arguments,  stopAtNonOption));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  this.options.asList(flatten(arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ArrayList  <  String>  tokenList  =  this.options.asList(flatten(arguments,  stopAtNonOption));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
139	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null));  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
140	[BUG]  [BUGGY]  Arrays.sort(parameterList,  tokenList,  this.options);  [CE]  cannot  find  symbol  parameterList  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(parameterList,  tokenList,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(parameterList,  tokenList,  this.options);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  cannot  find  symbol  parameterList	34	None	replace
141	[BUG]  [BUGGY]  Arrays.sort(arguments,  this.options);  [CE]  no  suitable  method  found  for  sort(String[],Options)  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(arguments,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(arguments,  this.options);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(String[],Options)	34	None	replace
142	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  this.options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  this.options,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	23	None	replace
143	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator(tokenList);  [CE]  no  suitable  method  found  for  iterator(List)  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.requiredOptions.iterator(tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.requiredOptions.iterator(tokenList);	  Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  no  suitable  method  found  for  iterator(List)	10	None	replace
144	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(t,  this.options);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(t,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(t,  this.options);	  Option    cmd    =    options.getOptions(t,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	15	None	replace
145	[BUG]  [BUGGY]  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	IllegalArgumentIterator  iterator  =  this.requiredOptions.listIterator();  Option  option  =  this.requiredOptions.listIterator();	  ListIterator    iterator    =    this.requiredOptions.listIterator();    Option    option    =    this.requiredOptions.listIterator();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
146	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  this.options));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  this.options));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption,  this.options));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption,    options));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
147	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  this.options,  arguments,  stopAtNonOption));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  this.options,  arguments,  stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  this.options,  arguments,  stopAtNonOption));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption,    options));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
148	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  TreeList  <  String>(tokenList.size());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  requiredOptions  =  new  TreeList  <  String>(tokenList.size());  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  TreeList  <  String>(tokenList.size());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>(tokenList.size());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
149	[BUG]  [BUGGY]  ListIterator  iterator  =  this.opts.listIterator(this.options);  [CE]  cannot  find  symbol  opts  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.opts.listIterator(this.options);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.opts.listIterator(this.options);	  ListIterator    iterator    =    this.tokenList.listIterator(this.options);    	non-compiled	[CE]  cannot  find  symbol  opts	57	None	replace
150	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  this.options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.options,  this.options,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.options,  this.options,  stopAtNonOption);	  Option    option    =    options.getOption(this.options,    tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	17	None	replace
151	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption)+  1;  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption)+  1;  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  stopAtNonOption)+  1;	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	40	None	replace
152	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(arguments,  tokenList);  [CE]  no  suitable  method  found  for  listIterator(String[],List)  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(arguments,  tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(arguments,  tokenList);	  ListIterator    iterator    =    this.requiredOptions.listIterator(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(String[],List)	9	None	replace
153	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(arguments);  [CE]  no  suitable  method  found  for  listIterator(String[])  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(arguments);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(arguments);	  ListIterator    iterator    =    this.requiredOptions.listIterator(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(String[])	9	None	replace
154	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(t,  this.options);  [CE]  cannot  find  symbol  t  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(t,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(t,  this.options);	  Option    cmd    =    options.getOption(t,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  t	24	None	replace
155	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  null));  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  null));	  Option    cmd    =    options.getOption(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  ';'  expected	40	None	replace
156	[BUG]  [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null,  null));  [CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null,  null));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  null,  null));	  List    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption,    options));    	non-compiled	[CE]  variable  tokenList  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
157	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  this.options);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  this.options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  this.options);	  Option    cmd    =    options.getOptions(this.options);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	48	None	replace
158	[BUG]  [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  new  ArrayList  <  String>();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  new  ArrayList  <  String>();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.listIterator()  :  new  ArrayList  <  String>();	  ListIterator    iterator    =(this.requiredOptions!=    null)?    this.requiredOptions.listIterator()    :    tokenList;    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
159	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  tokenList);	  Option    cmd    =    options.getOption(this.options,    tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	23	None	replace
160	[BUG]  [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  this.stopAtNonOption));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  this.stopAtNonOption));  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ArrayList  <  String>  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  this.stopAtNonOption));	  ArrayList    <    String>    tokenList    =    Arrays.asList(flatten(this.options,    arguments,    stopAtNonOption));    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
161	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  if( "-- ".equals(t))  {  eatTheRest  =  true;  }  [CE]  cannot  find  symbol  t  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator();  if( "-- ".equals(t))  {  eatTheRest  =  true;  }  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator();  if( "-- ".equals(t))  {  eatTheRest  =  true;  }	  ListIterator    iterator    =    this.requiredOptions.listIterator();    ListIterator    iterator    =    this.requiredOptions.listIterator();    if(       "--   ".equals(t))    {    eatTheRest    =    true;    }    	non-compiled	[CE]  cannot  find  symbol  t	42	None	replace
162	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.opts,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  opts  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(this.opts,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(this.opts,  tokenList,  stopAtNonOption);	  Option    option    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	20	None	replace
163	[BUG]  [BUGGY]  Option  option  =  this.opts.getOption(options,  tokenList);  [CE]  cannot  find  symbol  opts  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  this.opts.getOption(options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  this.opts.getOption(options,  tokenList);	  Option    option    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	20	None	replace
164	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(this.tokenList.size());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(this.tokenList.size());  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(this.tokenList.size());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(tokenList.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
165	[BUG]  [BUGGY]  Option  cmd  =  this.opts.getOption(options,  tokenList);  [CE]  cannot  find  symbol  opts  [FE]                      ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.opts.getOption(options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.opts.getOption(options,  tokenList);	  Option    cmd    =    options.getOption(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	25	None	replace
166	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  TreeSet  <  String>(tokenList.size());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  List  <  String>  requiredOptions  =  new  TreeSet  <  String>(tokenList.size());  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	List  <  String>  requiredOptions  =  new  TreeSet  <  String>(tokenList.size());	  List    <    String>    requiredOptions    =    new    LinkedList    <    String>(tokenList.size());    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
167	[BUG]  [BUGGY]  Option  option  =  options.getOption(tokenList,  argument,  stopAtNonOption);  [CE]  cannot  find  symbol  argument  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  options.getOption(tokenList,  argument,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  options.getOption(tokenList,  argument,  stopAtNonOption);	  Option    option    =    options.getOption(tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  argument	18	None	replace
168	[BUG]  [BUGGY]  Option  cmd  =  options.getOptions(this.options,  this.options,  tokenList,  stopAtNonOption);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOptions(this.options,  this.options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOptions(this.options,  this.options,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOptions(this.options,    tokenList);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
169	[BUG]  [BUGGY]  ListIterator  iterator  =(options!=  null)?  options.iterator()  :  tokenList;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(options!=  null)?  options.iterator()  :  tokenList;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(options!=  null)?  options.iterator()  :  tokenList;	  ListIterator    iterator    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
170	[BUG]  [BUGGY]  ListIterator  iterator  =(this.options!=  null?  this.options.iterator()  :  tokenList.iterator();  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.options!=  null?  this.options.iterator()  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.options!=  null?  this.options.iterator()  :  tokenList.iterator();	  ListIterator    iterator    =    this.options.iterator();    	non-compiled	[CE]  ')'  expected	11	None	replace
171	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(tokenList,  arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(tokenList,  arguments,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(tokenList,  arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(tokenList,    this.options,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	29	None	replace
172	[BUG]  [BUGGY]  Arrays.sort(tokenList,  this.options,  options);  [CE]  no  suitable  method  found  for  sort(List,Options,Options)  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  this.options,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  this.options,  options);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,Options,Options)	34	None	replace
173	[BUG]  [BUGGY]  Arrays.sort(tokenList,  this.options,  option);  [CE]  cannot  find  symbol  option  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  this.options,  option);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  this.options,  option);	  Arrays.sort(tokenList,    this.options);    	non-compiled	[CE]  cannot  find  symbol  option	34	None	replace
174	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  buffer,  stopAtNonOption);  [CE]  cannot  find  symbol  buffer  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  arguments,  buffer,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  arguments,  buffer,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  buffer	26	None	replace
175	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  null,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(this.options,  tokenList,  null,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(this.options,  tokenList,  null,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	26	None	replace
176	[BUG]  [BUGGY]  Arrays.sort(tokenList,  this.options,  arguments);  [CE]  no  suitable  method  found  for  sort(List,Options,String[])  [FE]                ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(tokenList,  this.options,  arguments);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(tokenList,  this.options,  arguments);	  Arrays.sort(tokenList,    arguments);    	non-compiled	[CE]  no  suitable  method  found  for  sort(List,Options,String[])	33	None	replace
177	[BUG]  [BUGGY]  Iterator  iterator  =(this.requiredOptions!=  null?  this.requiredOptions.iterator()  :  tokenList);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =(this.requiredOptions!=  null?  this.requiredOptions.iterator()  :  tokenList);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =(this.requiredOptions!=  null?  this.requiredOptions.iterator()  :  tokenList);	  Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  incompatible  types	10	None	replace
178	[BUG]  [BUGGY]  Iterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  tokenList;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  tokenList;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  tokenList;	  Iterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  incompatible  types	10	None	replace
179	[BUG]  [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator(tokenList,  stopAtNonOption);  [CE]  no  suitable  method  found  for  listIterator(List,boolean)  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Iterator  iterator  =  this.requiredOptions.listIterator(tokenList,  stopAtNonOption);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Iterator  iterator  =  this.requiredOptions.listIterator(tokenList,  stopAtNonOption);	  ListIterator    iterator    =    this.requiredOptions.listIterator(tokenList);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(List,boolean)	9	None	replace
180	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(this.options,  tokenList);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  option  =  this.options.getOption(this.options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  option  =  this.options.getOption(this.options,  tokenList);	  Option    option    =    options.getOption(this.options,    tokenList);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	17	None	replace
181	[BUG]  [BUGGY]  Arrays.sort(this.options,  tokenList,  options);  [CE]  no  suitable  method  found  for  sort(Options,List,Options)  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Arrays.sort(this.options,  tokenList,  options);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Arrays.sort(this.options,  tokenList,  options);	  Arrays.sort(tokenList,    options);    	non-compiled	[CE]  no  suitable  method  found  for  sort(Options,List,Options)	35	None	replace
182	[BUG]  [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  argumentList,  stopAtNonOption);  [CE]  cannot  find  symbol  argumentList  [FE]                    ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.options.getOption(this.options,  argumentList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.options.getOption(this.options,  argumentList,  stopAtNonOption);	  Option    cmd    =    options.getOption(this.options,    argumentList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  argumentList	44	None	replace
183	[BUG]  [BUGGY]  ListIterator  iterator  =(this.tokenList!=  null)?  this.tokenList.iterator()  :  null;  [CE]  cannot  find  symbol  tokenList  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.tokenList!=  null)?  this.tokenList.iterator()  :  null;  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.tokenList!=  null)?  this.tokenList.iterator()  :  null;	  ListIterator    iterator    =    this.tokenList.iterator();    	non-compiled	[CE]  cannot  find  symbol  tokenList	12	None	replace
184	[BUG]  [BUGGY]  Option  cmd  =  this.opts.getOptions(options,  tokenList);  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  this.opts.getOptions(options,  tokenList);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  this.opts.getOptions(options,  tokenList);	  Option    cmd    =    options.getOptions(this.opts,    tokenList);    	non-compiled	[CE]  cannot  find  symbol  opts	16	None	replace
185	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  options,  tokenList,  stopAtNonOption);  [CE]  cannot  find  symbol  opt  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  Option  cmd  =  options.getOption(opt,  options,  tokenList,  stopAtNonOption);  [BUGGY]      ListIterator  iterator  =  tokenList.listIterator();  while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	Option  cmd  =  options.getOption(opt,  options,  tokenList,  stopAtNonOption);	  Option    cmd    =    options.getOption(options,    tokenList,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  opt	64	None	replace
186	[BUG]  [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null?  this.requiredOptions.iterator()  :  tokenList.iterator();  [CE]  ')'  expected  [FE]        ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null?  this.requiredOptions.iterator()  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.requiredOptions!=  null?  this.requiredOptions.iterator()  :  tokenList.iterator();	  ListIterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  ')'  expected	8	None	replace
187	[BUG]  [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  tokenList.iterator();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  tokenList.iterator();  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =(this.requiredOptions!=  null)?  this.requiredOptions.iterator()  :  tokenList.iterator();	  ListIterator    iterator    =    this.requiredOptions.iterator();    	non-compiled	[CE]  incompatible  types	8	None	replace
188	[BUG]  [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(this.options);  [CE]  no  suitable  method  found  for  listIterator(Options)  [FE]            ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.requiredOptions.listIterator(this.options);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.requiredOptions.listIterator(this.options);	  ListIterator    iterator    =    this.tokenList.listIterator(this.options);    	non-compiled	[CE]  no  suitable  method  found  for  listIterator(Options)	57	None	replace
189	[BUG]  [BUGGY]  ListIterator  iterator  =  this.tokenList.listIterator(this.requiredOptions);  [CE]  cannot  find  symbol  tokenList  [FE]              ComparisonFailure      [CONTEXT]      if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  arguments,  stopAtNonOption));      [BUGGY]  ListIterator  iterator  =  this.tokenList.listIterator(this.requiredOptions);  [BUGGY]        while  (iterator.hasNext())  {  String  t  =  (String)  iterator.next();  if  (     "--     ".equals(t))  {  eatTheRest  =  true;  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	157	157	2	replace	ListIterator  iterator  =  this.tokenList.listIterator(this.requiredOptions);	  ListIterator    iterator    =    this.tokenList.listIterator(this.options);    	non-compiled	[CE]  cannot  find  symbol  tokenList	57	None	replace
