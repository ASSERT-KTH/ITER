bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(options);	  Option    option    =(Option)options.getOption(this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	21	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(this.options,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                          ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(this.options,  options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(this.options,  options);	  Option    option    =(Option)options.getOption(this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	21	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(this.options,  this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(this.options,  this.options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(this.options,  this.options);	  Option    option    =(Option)options.getOption(this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	21	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(option);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(option);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(option);	  Option    option    =(Option)options.getOption(this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	21	None	replace
5	[BUG]  [BUGGY]  String  str  =  arguments.str;  [CE]  cannot  find  symbol  str  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  arguments.str;  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  arguments.str;	  String    str    =    options.str;    	non-compiled	[CE]  cannot  find  symbol  str	27	None	replace
6	[BUG]  [BUGGY]  String  str  =  this.options.str;  [CE]  cannot  find  symbol  str  [FE]                        ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  this.options.str;  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  this.options.str;	  String    str    =    options.str;    	non-compiled	[CE]  cannot  find  symbol  str	27	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(this.options,  arguments);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(this.options,  arguments);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(this.options,  this.options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(this.options,  this.options);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
9	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.options.getOption(options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.options.getOption(options);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	11	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options,  t);  [CE]  cannot  find  symbol  t  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(this.options,  t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(this.options,  t);	  Option    option    =    options.getOption(this.options);    	non-compiled	[CE]  cannot  find  symbol  t	11	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.opts();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.opts();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.opts();	  Option    option    =    options.options();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
12	[BUG]  [BUGGY]  options  =  options.options();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  options  =  options.options();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	options  =  options.options();	  Option    option    =    options.options();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
13	[BUG]  [BUGGY]  Option  option  =  opts.options();  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  opts.options();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  opts.options();	  Option    option    =    options.options();    	non-compiled	[CE]  cannot  find  symbol  opts	15	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  arguments);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(t,  arguments);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  cannot  find  symbol  t	22	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(options,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options,  stopAtNonOption);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	22	None	replace
16	[BUG]  [BUGGY]  this.options  =  arguments;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  arguments;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  arguments;	  this.options    =    optionOptions;    	non-compiled	[CE]  incompatible  types	35	None	replace
17	[BUG]  [BUGGY]  Option[]  options  =  options.opts();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  options.opts();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.opts();	  Option[]    options    =    options.helpOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	8	None	replace
18	[BUG]  [BUGGY]  Option  option  =  this.str.getOption(options);  [CE]  cannot  find  symbol  str  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.str.getOption(options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.str.getOption(options);	  Option    option    =    options.getOption(this.str);    	non-compiled	[CE]  cannot  find  symbol  str	10	None	replace
19	[BUG]  [BUGGY]  this.options  =  options.getOptions(str);  [CE]  cannot  find  symbol  str  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.getOptions(str);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.getOptions(str);	  this.options    =    options.getOptions(t);    	non-compiled	[CE]  cannot  find  symbol  str	1	None	replace
20	[BUG]  [BUGGY]  this.options  =  options.getOptions(arguments);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.getOptions(arguments);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.getOptions(arguments);	  this.options    =    options.getOptions(t);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	1	None	replace
21	[BUG]  [BUGGY]  this.options  =  options.getOptions(test);  [CE]  cannot  find  symbol  test  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.getOptions(test);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.getOptions(test);	  this.options    =    options.getOptions(t);    	non-compiled	[CE]  cannot  find  symbol  test	1	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOptions(),  this.options;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOptions(),  this.options;  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOptions(),  this.options;	  Option    option    =    options.getOptions(),    this.options);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
23	[BUG]  [BUGGY]  Option  option  =  this.options.getOptions(),  options);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.options.getOptions(),  options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.options.getOptions(),  options);	  Option    option    =    options.getOptions(),    this.options);    	non-compiled	[CE]  ';'  expected	18	None	replace
24	[BUG]  [BUGGY]  Option  option  =  this.options.getOptions();  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.options.getOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.options.getOptions();	  Option    option    =    options.getOptions(),    this.options);    	non-compiled	[CE]  incompatible  types	18	None	replace
25	[BUG]  [BUGGY]  String  str  =  arguments.getString();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  arguments.getString();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  arguments.getString();	  String    str    =    this.options.getStr();    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
26	[BUG]  [BUGGY]  this.options  =  options.stopAtNonOptions;  [CE]  cannot  find  symbol  stopAtNonOptions  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.stopAtNonOptions;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopAtNonOptions;	  this.options    =    options.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOptions	37	None	replace
27	[BUG]  [BUGGY]  this.options  =  options.stopAtNonOption();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.stopAtNonOption();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopAtNonOption();	  this.options    =    options.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
28	[BUG]  [BUGGY]  this.options  =  options.stopOptions;  [CE]  cannot  find  symbol  stopOptions  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.stopOptions;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopOptions;	  this.options    =    options.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol  stopOptions	37	None	replace
29	[BUG]  [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(options);  [CE]  no  suitable  constructor  found  for  ArrayList(Options)  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(options);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  java.util.ArrayList  <  Option>(options);	  this.options    =    new    java.util.ArrayList    <    Option>();    	non-compiled	[CE]  no  suitable  constructor  found  for  ArrayList(Options)	13	None	replace
30	[BUG]  [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(1);  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(1);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  java.util.ArrayList  <  Option>(1);	  this.options    =    new    java.util.ArrayList    <    Option>();    	non-compiled	[CE]  incompatible  types	13	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str);  [CE]  cannot  find  symbol  str  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(str);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	16	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.helpOption(requiredOptions);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(requiredOptions);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(requiredOptions);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.helpOption(this.options);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(this.options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(this.options);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.helpOption(this.str);  [CE]  cannot  find  symbol  str  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(this.str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(this.str);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	16	None	replace
35	[BUG]  [BUGGY]  String  str  =  t.getString();  [CE]  cannot  find  symbol  t  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  t.getString();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  t.getString();	  String    str    =    this.options.getString();    	non-compiled	[CE]  cannot  find  symbol  t	25	None	replace
36	[BUG]  [BUGGY]  String  str  =  this.options,  options.getString();  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  this.options,  options.getString();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  this.options,  options.getString();	  String    str    =    this.options.getString();    	non-compiled	[CE]  ';'  expected	25	None	replace
37	[BUG]  [BUGGY]  Option  options  =  options.getOption(str);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.getOption(str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOption(str);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	49	None	replace
38	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  str);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.getOption(t,  str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOption(t,  str);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	49	None	replace
39	[BUG]  [BUGGY]  Option  options  =  options.getOption(str,  t);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.getOption(str,  t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOption(str,  t);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	49	None	replace
40	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.getOptions(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOptions(t);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	49	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption(stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption(stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.stopAtNonOption(stopAtNonOption);	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption()?  null  :  options.stopAtNonOption();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption()?  null  :  options.stopAtNonOption();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.stopAtNonOption()?  null  :  options.stopAtNonOption();	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption(),  stopAtNonOption;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption(),  stopAtNonOption;  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.stopAtNonOption(),  stopAtNonOption;	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
44	[BUG]  [BUGGY]  Option[]  options  =  t.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  t.getOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  t.getOptions();	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	7	None	replace
45	[BUG]  [BUGGY]  Option[]  options  =  opts.options();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  opts.options();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  opts.options();	  Option[]    options    =    options.options();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	9	None	replace
46	[BUG]  [BUGGY]  Option[]  options  =  this.options.options();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  this.options.options();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  this.options.options();	  Option[]    options    =    options.options();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	9	None	replace
47	[BUG]  [BUGGY]  Option  option  =(Option)opts.getOption(t);  [CE]  cannot  find  symbol  t  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)opts.getOption(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)opts.getOption(t);	  Option    option    =(Option)options.getOption(str);    	non-compiled	[CE]  cannot  find  symbol  t	19	None	replace
48	[BUG]  [BUGGY]  Option  option  =(Option)requiredOptions.getOption(t);  [CE]  cannot  find  symbol  t  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)requiredOptions.getOption(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)requiredOptions.getOption(t);	  Option    option    =(Option)options.getOption(str);    	non-compiled	[CE]  cannot  find  symbol  t	19	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.helpOption(true);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(true);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(true);	  Option    option    =    options.helpOption();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  arguments);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options.getOptions(),  arguments);	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	34	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options.getOptions(),  options);	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	34	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  options.getOptions());  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(options,  options.getOptions());  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options,  options.getOptions());	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	34	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  str);  [CE]  cannot  find  symbol  str  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(options.getOptions(),  str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options.getOptions(),  str);	  Option    option    =    options.getOption(options.getOptions());    	non-compiled	[CE]  cannot  find  symbol  str	34	None	replace
54	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(t,  true);  [CE]  cannot  find  symbol  t  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(t,  true);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(t,  true);	  Option    option    =(Option)options.getOption(true);    	non-compiled	[CE]  cannot  find  symbol  t	33	None	replace
55	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(true);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(true);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(true);	  Option    option    =(Option)options.getOption(true);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	33	None	replace
56	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(str,  true);  [CE]  cannot  find  symbol  str  [FE]                          ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(str,  true);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(str,  true);	  Option    option    =(Option)options.getOption(true);    	non-compiled	[CE]  cannot  find  symbol  str	33	None	replace
57	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(false,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(false,  options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(false,  options);	  Option    option    =(Option)options.getOption(true);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	33	None	replace
58	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(options.stopAtNonOption);  [CE]  cannot  find  symbol  stopAtNonOption  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(options.stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(options.stopAtNonOption);	  Option    option    =(Option)options.getOption(this.stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	32	None	replace
59	[BUG]  [BUGGY]  Option  option  =(Option)this.stopAtNonOption.getOption(options);  [CE]  cannot  find  symbol  stopAtNonOption  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.stopAtNonOption.getOption(options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.stopAtNonOption.getOption(options);	  Option    option    =(Option)options.getOption(this.stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	32	None	replace
60	[BUG]  [BUGGY]  Option  option  =(Option)this.stopAtNonOptions.getOption(options);  [CE]  cannot  find  symbol  stopAtNonOptions  [FE]                        ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.stopAtNonOptions.getOption(options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.stopAtNonOptions.getOption(options);	  Option    option    =(Option)options.getOption(this.stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOptions	32	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments,  stopAtNonOption);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	40	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  arguments);  [CE]  cannot  find  symbol  str  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(str,  arguments);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(str,  arguments);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  str	40	None	replace
63	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(options,  arguments);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options,  arguments);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	40	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Option  option  =  options.getOption(arguments[0]);  [CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Option  option  =  options.getOption(arguments[0]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option    option    =    options.getOption(arguments[0]);    Option  option  =  options.getOption(arguments[0]);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	41	None	add
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Option  option  =  options.getOption(arguments[1]);  [CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Option  option  =  options.getOption(arguments[1]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option    option    =    options.getOption(arguments[0]);    Option  option  =  options.getOption(arguments[1]);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	41	None	add
66	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Options  option  =  options.getOption(arguments[0]);  [CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Options  option  =  options.getOption(arguments[0]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option    option    =    options.getOption(arguments[0]);    Options  option  =  options.getOption(arguments[0]);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	41	None	add
67	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Option  options  =  options.getOption(arguments[0]);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Option  options  =  options.getOption(arguments[0]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option    option    =    options.getOption(arguments[0]);    Option  options  =  options.getOption(arguments[0]);	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	41	None	add
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Options  options  =  options.getOption(arguments[0]);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Options  options  =  options.getOption(arguments[0]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option    option    =    options.getOption(arguments[0]);    Options  options  =  options.getOption(arguments[0]);	  	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	41	None	add
69	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[1]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	add	Option  option  =  options.getOption(arguments[1]);	  Option    option    =    options.getOption(arguments[0]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	2	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[1]);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[1]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments[1]);	  Option    option    =    options.getOption(arguments[0]);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	42	2	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0],  arguments[1]);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0],  arguments[1]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments[0],  arguments[1]);	  Option    option    =    options.getOption(arguments[0]);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	42	None	replace
72	[BUG]  [BUGGY]  Option  option  =  arguments.helpOption(options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  arguments.helpOption(options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  arguments.helpOption(options);	  Option    option    =    options.helpOption(arguments);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.helpOption(arguments,  stopAtNonOption);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(arguments,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(arguments,  stopAtNonOption);	  Option    option    =    options.helpOption(arguments);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.helpOption(options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(options);	  Option    option    =    options.helpOption(arguments);    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
75	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions(t);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  this.options.getOptions(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  this.options.getOptions(t);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
76	[BUG]  [BUGGY]  Option  options  =  opts.helpOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  opts.helpOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  opts.helpOptions();	  Option    options    =    options.helpOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	36	None	replace
77	[BUG]  [BUGGY]  this.options  =  options.opts(t);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.opts(t);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.opts(t);	  this.options    =    options.opts();    	non-compiled	[CE]  cannot  find  symbol  t	3	None	replace
78	[BUG]  [BUGGY]  options  =  options.opts();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  options  =  options.opts();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	options  =  options.opts();	  this.options    =    options.opts();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
79	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [CE]  cannot  find  symbol  t  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(t,  stopAtNonOption);	  Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  t	44	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  stopAtNonOption);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(stopAtNonOption,  stopAtNonOption);	  Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	44	None	replace
81	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  stopAtNonOption);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.getOption(t,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOption(t,  stopAtNonOption);	  Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	44	None	replace
82	[BUG]  [BUGGY]  this.options  =  options,  eatTheRest;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options,  eatTheRest;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options,  eatTheRest;	  this.options    =    options,    stopAtNonOption;    	non-compiled	[CE]  ';'  expected	47	None	replace
83	[BUG]  [BUGGY]  this.options  =  options,  stopAtNonOption,  eatTheRest;  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options,  stopAtNonOption,  eatTheRest;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options,  stopAtNonOption,  eatTheRest;	  this.options    =    options,    stopAtNonOption;    	non-compiled	[CE]  ';'  expected	47	None	replace
84	[BUG]  [BUGGY]  Option[]  options  =  options.addOptions(t);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  options.addOptions(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.addOptions(t);	  Option[]    options    =    options.addOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	43	None	replace
85	[BUG]  [BUGGY]  String  str  =  arguments.str();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  arguments.str();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  arguments.str();	  String    str    =    options.str();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
86	[BUG]  [BUGGY]  String  str  =  options.str(t);  [CE]  cannot  find  symbol  t  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  options.str(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  options.str(t);	  String    str    =    options.str();    	non-compiled	[CE]  cannot  find  symbol  t	26	None	replace
87	[BUG]  [BUGGY]  String  str  =  this.options.str();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  this.options.str();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  this.options.str();	  String    str    =    options.str();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
88	[BUG]  [BUGGY]  this.options  =  options.findOptions(t);  [CE]  cannot  find  symbol  t  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.findOptions(t);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.findOptions(t);	  this.options    =    options.findOptions();    	non-compiled	[CE]  cannot  find  symbol  t	2	None	replace
89	[BUG]  [BUGGY]  this.options  =  options.requiredOptions();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.requiredOptions();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.requiredOptions();	  this.options    =    options.findOptions();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
90	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(str);  [CE]  cannot  find  symbol  str  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(str);	  Option    option    =(Option)this.options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	20	None	replace
91	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(requiredOptions);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(requiredOptions);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(requiredOptions);	  Option    option    =(Option)this.options.getOption(t);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	20	None	replace
92	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>(options.helpOptions());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  LinkedList  <  Option>(options.helpOptions());  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  LinkedList  <  Option>(options.helpOptions());	  this.options    =    new    ArrayList    <    Option>(options.helpOptions());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
93	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.getOptions());  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  ArrayList  <  Option>(options.getOptions());	  this.options    =    new    ArrayList    <    Option>(options.helpOptions());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
94	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.opts());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.opts());  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  ArrayList  <  Option>(options.opts());	  this.options    =    new    ArrayList    <    Option>(options.helpOptions());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
95	[BUG]  [BUGGY]  this.options  =  option.opts();  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  option.opts();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  option.opts();	  this.options    =    options.opts();    	non-compiled	[CE]  cannot  find  symbol  option	3	None	replace
96	[BUG]  [BUGGY]  This.options  =  options.opts();  [CE]  cannot  find  symbol  This  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  This.options  =  options.opts();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	This.options  =  options.opts();	  this.options    =    options.opts();    	non-compiled	[CE]  cannot  find  symbol  This	3	None	replace
97	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(this.stopAtNonOption);  [CE]  cannot  find  symbol  stopAtNonOption  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(this.stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(this.stopAtNonOption);	  Option    option    =(Option)options.getOption(this.stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	32	None	replace
98	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(this.stopAtNonOption,  this.eatTheRest);  [CE]  cannot  find  symbol  stopAtNonOption  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(this.stopAtNonOption,  this.eatTheRest);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(this.stopAtNonOption,  this.eatTheRest);	  Option    option    =(Option)options.getOption(this.stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	32	None	replace
99	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(this.eatTheRest);  [CE]  cannot  find  symbol  eatTheRest  [FE]                        ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(this.eatTheRest);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(this.eatTheRest);	  Option    option    =(Option)options.getOption(this.stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  eatTheRest	32	None	replace
100	[BUG]  [BUGGY]  this.options  =  Options.options;  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  Options.options;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  Options.options;	  this.options    =    option.options;    	non-compiled	[CE]  cannot  find  symbol  options	48	None	replace
101	[BUG]  [BUGGY]  this.options  =  options.removeOptions();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.removeOptions();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.removeOptions();	  this.options    =    options.findOptions();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
102	[BUG]  [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(2);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(2);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  java.util.ArrayList  <  Option>(2);	  this.options    =    new    java.util.ArrayList    <    Option>();    	non-compiled	[CE]  incompatible  types	13	None	replace
103	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(t);  [CE]  cannot  find  symbol  t  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.options.getOption(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.options.getOption(t);	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  cannot  find  symbol  t	6	None	replace
104	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(opt);  [CE]  cannot  find  symbol  opt  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(opt);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(opt);	  Option    option    =(Option)this.options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  opt	20	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  options);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(t,  options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(t,  options);	  Option    option    =    options.getOption(options);    	non-compiled	[CE]  cannot  find  symbol  t	22	None	replace
106	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.t);  [CE]  cannot  find  symbol  t  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(this.t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(this.t);	  Option    option    =    options.getOption(this.str);    	non-compiled	[CE]  cannot  find  symbol  t	10	None	replace
107	[BUG]  [BUGGY]  this.options  =  OptionOptions.NON_OPTIONS;  [CE]  cannot  find  symbol  OptionOptions  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  OptionOptions.NON_OPTIONS;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  OptionOptions.NON_OPTIONS;	  this.options    =    optionOptions;    	non-compiled	[CE]  cannot  find  symbol  OptionOptions	35	None	replace
108	[BUG]  [BUGGY]  this.options  =  OptionOptions.EMPTY_OPTIONS;  [CE]  cannot  find  symbol  OptionOptions  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  OptionOptions.EMPTY_OPTIONS;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  OptionOptions.EMPTY_OPTIONS;	  this.options    =    optionOptions;    	non-compiled	[CE]  cannot  find  symbol  OptionOptions	35	None	replace
109	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(false);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(false);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(false);	  Option    option    =(Option)options.getOption(true);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	33	None	replace
110	[BUG]  [BUGGY]  Option  options  =  options.stopAtNonOption();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.stopAtNonOption();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.stopAtNonOption();	  Option    options    =    options.helpOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	36	None	replace
111	[BUG]  [BUGGY]  Option[]  options  =  opts.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  opts.getOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  opts.getOptions();	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	7	None	replace
112	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.options());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.options());  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  ArrayList  <  Option>(options.options());	  this.options    =    new    ArrayList    <    Option>(options.helpOptions());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
113	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]  -  1);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments[0]  -  1);	  Option    option    =    options.getOption(arguments[0]);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	42	None	replace
114	[BUG]  [BUGGY]  String  str  =  t.str();  [CE]  cannot  find  symbol  t  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  t.str();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  t.str();	  String    str    =    options.str();    	non-compiled	[CE]  cannot  find  symbol  t	26	None	replace
115	[BUG]  [BUGGY]  String  str  =  option.str();  [CE]  cannot  find  symbol  option  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  option.str();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  option.str();	  String    str    =    options.str();    	non-compiled	[CE]  cannot  find  symbol  option	26	None	replace
116	[BUG]  [BUGGY]  this.options  =  options.excludeOptions;  [CE]  cannot  find  symbol  excludeOptions  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.excludeOptions;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.excludeOptions;	  this.options    =    options.opts;    	non-compiled	[CE]  cannot  find  symbol  excludeOptions	5	None	replace
117	[BUG]  [BUGGY]  this.options  =  new  TreeArray  <  Option>();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  TreeArray  <  Option>();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  TreeArray  <  Option>();	  this.options    =    new    TreeSet    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
118	[BUG]  [BUGGY]  Option  options  =  options.getOptions(t,  str);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.getOptions(t,  str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOptions(t,  str);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	49	None	replace
119	[BUG]  [BUGGY]  Option  options  =  options.getOption(t,  arguments);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.getOption(t,  arguments);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOption(t,  arguments);	  Option    options    =    options.getOption(t);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	49	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption()  &&  options.helpOptions();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption()  &&  options.helpOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.stopAtNonOption()  &&  options.helpOptions();	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption()?  stopAtNonOption  :  options;  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.stopAtNonOption()?  stopAtNonOption  :  options;  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.stopAtNonOption()?  stopAtNonOption  :  options;	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
122	[BUG]  [BUGGY]  String  str  =  t.getStr();  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  t.getStr();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  t.getStr();	  String    str    =    this.options.getStr();    	non-compiled	[CE]  cannot  find  symbol  t	38	None	replace
123	[BUG]  [BUGGY]  String  str  =  option.getString();  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  option.getString();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  option.getString();	  String    str    =    options.getString();    	non-compiled	[CE]  cannot  find  symbol  option	24	None	replace
124	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.test);  [CE]  cannot  find  symbol  test  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(this.test);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(this.test);	  Option    option    =    options.getOption(test);    	non-compiled	[CE]  cannot  find  symbol  test	23	None	replace
125	[BUG]  [BUGGY]  this.options  =  options,  options.options();  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options,  options.options();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options,  options.options();	  this.options    =    options.options();    	non-compiled	[CE]  ';'  expected	4	None	replace
126	[BUG]  [BUGGY]  this.options  =  options,  stopAtNonOption  =  false;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options,  stopAtNonOption  =  false;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options,  stopAtNonOption  =  false;	  this.options    =    options,    stopAtNonOption;    	non-compiled	[CE]  ';'  expected	47	None	replace
127	[BUG]  [BUGGY]  this.options  =  options.getOptions(defaultOptions);  [CE]  cannot  find  symbol  defaultOptions  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.getOptions(defaultOptions);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.getOptions(defaultOptions);	  this.options    =    options.getOptions(t);    	non-compiled	[CE]  cannot  find  symbol  defaultOptions	1	None	replace
128	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(test);  [CE]  cannot  find  symbol  test  [FE]                    ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(test);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(test);	  Option    option    =(Option)options.getOption(str);    	non-compiled	[CE]  cannot  find  symbol  test	19	None	replace
129	[BUG]  [BUGGY]  Option  option  =  options.getOption(test,  stopAtNonOption);  [CE]  cannot  find  symbol  test  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(test,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(test,  stopAtNonOption);	  Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  test	44	None	replace
130	[BUG]  [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(stopAtNonOption,  options);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(stopAtNonOption,  options);	  Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	44	None	replace
131	[BUG]  [BUGGY]  Option  option  =  opts.stopAtNonOption();  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  opts.stopAtNonOption();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  opts.stopAtNonOption();	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  cannot  find  symbol  opts	46	None	replace
132	[BUG]  [BUGGY]  Option  option  =  this.options.stopAtNonOption();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.options.stopAtNonOption();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.options.stopAtNonOption();	  Option    option    =    options.stopAtNonOption();    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
133	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options,  options.helpOptions());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  ArrayList  <  Option>(options,  options.helpOptions());  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  ArrayList  <  Option>(options,  options.helpOptions());	  this.options    =    new    ArrayList    <    Option>(options.helpOptions());    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Options  option  =  options.getOption(arguments[1]);  [CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]);  Options  option  =  options.getOption(arguments[1]);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option    option    =    options.getOption(arguments[0]);    Options  option  =  options.getOption(arguments[1]);	  	non-compiled	[CE]  variable  option  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	41	None	add
135	[BUG]  [BUGGY]  this.options  =  options.stopAtNonOptions();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.stopAtNonOptions();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopAtNonOptions();	  this.options    =    options.findOptions();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
136	[BUG]  [BUGGY]  Option[]  options  =  options.findOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  options.findOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.findOptions();	  Option[]    options    =    options.helpOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	8	None	replace
137	[BUG]  [BUGGY]  this.options  =  new  TreeList  <  Option>(options.helpOptions());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  TreeList  <  Option>(options.helpOptions());  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  TreeList  <  Option>(options.helpOptions());	  this.options    =    new    TreeList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
138	[BUG]  [BUGGY]  this.options  =  new  TreeList  <  Option>(options.getOptions());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  TreeList  <  Option>(options.getOptions());  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  TreeList  <  Option>(options.getOptions());	  this.options    =    new    TreeList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
139	[BUG]  [BUGGY]  Options  options  =  options.helpOptions().getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  Options  options  =  options.helpOptions().getOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Options  options  =  options.helpOptions().getOptions();	  Options    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	28	None	replace
140	[BUG]  [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(8);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>(8);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  java.util.ArrayList  <  Option>(8);	  this.options    =    new    java.util.ArrayList    <    Option>();    	non-compiled	[CE]  incompatible  types	13	None	replace
141	[BUG]  [BUGGY]  Option  options  =  options.helpOptions().getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.helpOptions().getOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.helpOptions().getOptions();	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
142	[BUG]  [BUGGY]  Option  options  =  this.options.helpOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  this.options.helpOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  this.options.helpOptions();	  Option    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	6	None	replace
143	[BUG]  [BUGGY]  Option[]  options  =  options.options.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  options.options.getOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.options.getOptions();	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	7	None	replace
144	[BUG]  [BUGGY]  Option[]  options  =  options.opts.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option[]  options  =  options.opts.getOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.opts.getOptions();	  Option[]    options    =    this.options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	7	None	replace
145	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(t,  false);  [CE]  cannot  find  symbol  t  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)options.getOption(t,  false);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(t,  false);	  Option    option    =(Option)options.getOption(true);    	non-compiled	[CE]  cannot  find  symbol  t	33	None	replace
146	[BUG]  [BUGGY]  Option  options  =  options.stopAtNonOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  options  =  options.stopAtNonOptions();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.stopAtNonOptions();	  Option    options    =    options.helpOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	36	None	replace
147	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]).toLowerCase();  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments[0]).toLowerCase();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments[0]).toLowerCase();	  Option    option    =    options.getOption(arguments[0]);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
148	[BUG]  [BUGGY]  this.options  =  options.getOptions(properties);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.getOptions(properties);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.getOptions(properties);	  this.options    =    options.getOptions(t);    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	1	None	replace
149	[BUG]  [BUGGY]  this.options  =  options.getOptions(tr);  [CE]  cannot  find  symbol  tr  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.getOptions(tr);  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.getOptions(tr);	  this.options    =    options.getOptions(t);    	non-compiled	[CE]  cannot  find  symbol  tr	1	None	replace
150	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(options.str);  [CE]  cannot  find  symbol  str  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.options.getOption(options.str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.options.getOption(options.str);	  Option    option    =    options.getOption(this.str);    	non-compiled	[CE]  cannot  find  symbol  str	10	None	replace
151	[BUG]  [BUGGY]  Option  option  =  options.getOption(block,  stopAtNonOption);  [CE]  cannot  find  symbol  block  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(block,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(block,  stopAtNonOption);	  Option    option    =    options.getOption(str,    stopAtNonOption);    	non-compiled	[CE]  cannot  find  symbol  block	44	None	replace
152	[BUG]  [BUGGY]  String  str  =  this.options.getString(t);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  this.options.getString(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  this.options.getString(t);	  String    str    =    this.options.getStr();    	non-compiled	[CE]  cannot  find  symbol  t	38	None	replace
153	[BUG]  [BUGGY]  Option  option  =  this.options.options();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  this.options.options();  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  this.options.options();	  Option    option    =    options.options();    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
154	[BUG]  [BUGGY]  String  str  =  options.getString(t);  [CE]  cannot  find  symbol  t  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  String  str  =  options.getString(t);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  options.getString(t);	  String    str    =    options.getString();    	non-compiled	[CE]  cannot  find  symbol  t	24	None	replace
155	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(test);  [CE]  cannot  find  symbol  test  [FE]                      ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =(Option)this.options.getOption(test);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(test);	  Option    option    =(Option)this.options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  test	20	None	replace
156	[BUG]  [BUGGY]  this.options  =  options.stopAtNonOption  ||  options.helpOptions().size()  ==  0;  [CE]  cannot  find  symbol  stopAtNonOption  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.stopAtNonOption  ||  options.helpOptions().size()  ==  0;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopAtNonOption  ||  options.helpOptions().size()  ==  0;	  this.options    =    options.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	37	None	replace
157	[BUG]  [BUGGY]  this.options  =  options.stopAtNonOption  ||  options.helpOptions().isEmpty();  [CE]  cannot  find  symbol  stopAtNonOption  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.stopAtNonOption  ||  options.helpOptions().isEmpty();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopAtNonOption  ||  options.helpOptions().isEmpty();	  this.options    =    options.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	37	None	replace
158	[BUG]  [BUGGY]  this.options  =  options.stopAtNonOption  ||  options.helpOptions().size()  ==  2;  [CE]  cannot  find  symbol  stopAtNonOption  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options.stopAtNonOption  ||  options.helpOptions().size()  ==  2;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopAtNonOption  ||  options.helpOptions().size()  ==  2;	  this.options    =    options.stopAtNonOption;    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	37	None	replace
159	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments,  str);  [CE]  cannot  find  symbol  str  [FE]            ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.getOption(arguments,  str);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments,  str);	  Option    option    =    options.getOption(arguments);    	non-compiled	[CE]  cannot  find  symbol  str	40	None	replace
160	[BUG]  [BUGGY]  this.options  =  optionalOptions;  [CE]  cannot  find  symbol  optionalOptions  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  optionalOptions;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  optionalOptions;	  this.options    =    optionOptions;    	non-compiled	[CE]  cannot  find  symbol  optionalOptions	35	None	replace
161	[BUG]  [BUGGY]  this.options  =  OptionOptions.EMPTY;  [CE]  cannot  find  symbol  OptionOptions  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  OptionOptions.EMPTY;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  OptionOptions.EMPTY;	  this.options    =    optionOptions;    	non-compiled	[CE]  cannot  find  symbol  OptionOptions	35	None	replace
162	[BUG]  [BUGGY]  Option  option  =  options.helpOption(str,  stopAtNonOption);  [CE]  cannot  find  symbol  str  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  Option  option  =  options.helpOption(str,  stopAtNonOption);  [BUGGY]      this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(str,  stopAtNonOption);	  Option    option    =    options.helpOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	16	None	replace
163	[BUG]  [BUGGY]  this.options  =  options,  stopAtNonOption?  options.options()  :  null;  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options,  stopAtNonOption?  options.options()  :  null;  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options,  stopAtNonOption?  options.options()  :  null;	  this.options    =    options.options();    	non-compiled	[CE]  ';'  expected	4	None	replace
164	[BUG]  [BUGGY]  this.options  =  options,  stopAtNonOption.options();  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      {        [BUGGY]  this.options  =  options,  stopAtNonOption.options();  [BUGGY]        for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options,  stopAtNonOption.options();	  this.options    =    options.options();    	non-compiled	[CE]  ';'  expected	4	None	replace
