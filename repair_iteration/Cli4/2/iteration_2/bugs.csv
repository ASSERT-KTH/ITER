bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.options  =  options.getOptions(t);  [CE]  cannot  find  symbol  t  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  options.getOptions(t);  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.getOptions(t);	  this.options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol  t	6	None	replace
2	[BUG]  [BUGGY]  this.options  =  options.findOptions();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  options.findOptions();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.findOptions();	  this.options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
3	[BUG]  [BUGGY]  this.options  =  options.opts();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  options.opts();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.opts();	  this.options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
4	[BUG]  [BUGGY]  this.options  =  options.options();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  options.options();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.options();	  this.options    =    options.helpOptions();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
5	[BUG]  [BUGGY]  this.options  =  options.opts;  [CE]  cannot  find  symbol  opts  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  options.opts;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.opts;	  this.options    =    options.helpOptions;    	non-compiled	[CE]  cannot  find  symbol  opts	9	None	replace
6	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  options  =  this.options.getOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  this.options.getOptions();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	11	None	replace
7	[BUG]  [BUGGY]  Option[]  options  =  this.options.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option[]  options  =  this.options.getOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  this.options.getOptions();	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	2	None	replace
8	[BUG]  [BUGGY]  Option[]  options  =  options.helpOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option[]  options  =  options.helpOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.helpOptions();	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	2	None	replace
9	[BUG]  [BUGGY]  Option[]  options  =  options.options();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option[]  options  =  options.options();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.options();	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	2	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.str);  [CE]  cannot  find  symbol  str  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(this.str);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(this.str);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	1	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(this.options);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(this.options);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	1	None	replace
12	[BUG]  [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  new  LinkedList  <  Option>();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  LinkedList  <  Option>();	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
13	[BUG]  [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>();  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  new  java.util.ArrayList  <  Option>();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  java.util.ArrayList  <  Option>();	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  incompatible  types	8	None	replace
14	[BUG]  [BUGGY]  this.options  =  new  TreeSet  <  Option>();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  new  TreeSet  <  Option>();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  TreeSet  <  Option>();	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.options();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.options();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.options();	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.helpOption(t);  [CE]  cannot  find  symbol  t  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.helpOption(t);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(t);	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  cannot  find  symbol  t	12	None	replace
17	[BUG]  [BUGGY]  options  =  options.getOptions();  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  options  =  options.getOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	options  =  options.getOptions();	      Option    option    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	14	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOptions(),  this.options);  [CE]  <identifier>  expected  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOptions(),  this.options);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOptions(),  this.options);	      Option    option    =    options.getOptions();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
19	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(str);  [CE]  cannot  find  symbol  str  [FE]                ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =(Option)options.getOption(str);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(str);	      Option    option    =(Option)options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	5	None	replace
20	[BUG]  [BUGGY]  Option  option  =(Option)this.options.getOption(t);  [CE]  cannot  find  symbol  t  [FE]                  ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =(Option)this.options.getOption(t);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)this.options.getOption(t);	      Option    option    =(Option)options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  t	5	None	replace
21	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(this.options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =(Option)options.getOption(this.options);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(this.options);	      Option    option    =(Option)options.getOption(t);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	5	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	3	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(test);  [CE]  cannot  find  symbol  test  [FE]              ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(test);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(test);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  cannot  find  symbol  test	3	None	replace
24	[BUG]  [BUGGY]  String  str  =  options.getString();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  String  str  =  options.getString();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  options.getString();	      String    str    =    options.getStr();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
25	[BUG]  [BUGGY]  String  str  =  this.options.getString();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    {      [BUGGY]  String  str  =  this.options.getString();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  this.options.getString();	      String    str    =    options.getStr();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
26	[BUG]  [BUGGY]  String  str  =  options.str();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    {      [BUGGY]  String  str  =  options.str();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  options.str();	      String    str    =    options.getStr();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
27	[BUG]  [BUGGY]  String  str  =  options.str;  [CE]  cannot  find  symbol  str  [FE]                  ComparisonFailure    [CONTEXT]    {      [BUGGY]  String  str  =  options.str;  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  options.str;	      String    str    =    options.getStr();    	non-compiled	[CE]  cannot  find  symbol  str	13	None	replace
28	[BUG]  [BUGGY]  Options  options  =  this.options.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure    [CONTEXT]    {      [BUGGY]  Options  options  =  this.options.getOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Options  options  =  this.options.getOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	4	None	replace
29	[BUG]  [BUGGY]  Options  options  =  options.helpOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]              ComparisonFailure    [CONTEXT]    {      [BUGGY]  Options  options  =  options.helpOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Options  options  =  options.helpOptions();	      Options    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	4	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.helpOption();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.helpOption();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption();	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
31	[BUG]  [BUGGY]  this.options  =  new  TreeList  <  Option>();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  new  TreeList  <  Option>();  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  TreeList  <  Option>();	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
32	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(this.stopAtNonOption);  [CE]  cannot  find  symbol  stopAtNonOption  [FE]                ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =(Option)options.getOption(this.stopAtNonOption);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(this.stopAtNonOption);	      Option    option    =(Option)options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	5	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)options.getOption(true);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =(Option)options.getOption(true);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =(Option)options.getOption(true);	      Option    option    =(Option)options.getOption(t);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	5	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(options.getOptions());  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(options.getOptions());  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(options.getOptions());	      Option    option    =    options.getOptions();    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
35	[BUG]  [BUGGY]  this.options  =  optionOptions;  [CE]  cannot  find  symbol  optionOptions  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  optionOptions;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  optionOptions;	  this.options    =    options.options;    	non-compiled	[CE]  cannot  find  symbol  optionOptions	7	None	replace
36	[BUG]  [BUGGY]  Option  options  =  options.helpOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  options  =  options.helpOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.helpOptions();	      Option    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	11	None	replace
37	[BUG]  [BUGGY]  this.options  =  options.stopAtNonOption;  [CE]  cannot  find  symbol  stopAtNonOption  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  options.stopAtNonOption;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options.stopAtNonOption;	  this.options    =    options.helpOptions;    	non-compiled	[CE]  cannot  find  symbol  stopAtNonOption	9	None	replace
38	[BUG]  [BUGGY]  String  str  =  this.options.getStr();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  String  str  =  this.options.getStr();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	String  str  =  this.options.getStr();	      String    str    =    options.getStr();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
39	[BUG]  [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.helpOptions());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  new  ArrayList  <  Option>(options.helpOptions());  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  new  ArrayList  <  Option>(options.helpOptions());	  this.options    =    new    ArrayList    <    Option>();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments);	      Option    option    =    options.getOptions();    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	14	None	replace
41	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(arguments[0]);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	add	Option  option  =  options.getOption(arguments[0]);	      Option    option    =    options.getOptions();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments[0]);  [FE]  ArrayIndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(arguments[0]);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(arguments[0]);	      Option    option    =    options.getOptions();    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	2	replace
43	[BUG]  [BUGGY]  Option[]  options  =  options.addOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option[]  options  =  options.addOptions();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option[]  options  =  options.addOptions();	      Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	2	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [CE]  cannot  find  symbol  str  [FE]        ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.getOption(str,  stopAtNonOption);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.getOption(str,  stopAtNonOption);	      Option    option    =    options.getOption(t);    	non-compiled	[CE]  cannot  find  symbol  str	1	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.helpOption(arguments);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.helpOption(arguments);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.helpOption(arguments);	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.stopAtNonOption();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  option  =  options.stopAtNonOption();  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  option  =  options.stopAtNonOption();	      Option    option    =    options.helpOptions();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
47	[BUG]  [BUGGY]  this.options  =  options,  stopAtNonOption;  [CE]  ';'  expected  [FE]          ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  options,  stopAtNonOption;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  options,  stopAtNonOption;	  this.options    =    options.options;    	non-compiled	[CE]  ';'  expected	7	None	replace
48	[BUG]  [BUGGY]  this.options  =  option.options;  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  this.options  =  option.options;  [BUGGY]      for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	this.options  =  option.options;	  this.options    =    options.options;    	non-compiled	[CE]  cannot  find  symbol  option	7	None	replace
49	[BUG]  [BUGGY]  Option  options  =  options.getOption(t);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]            ComparisonFailure    [CONTEXT]    {      [BUGGY]  Option  options  =  options.getOption(t);  [BUGGY]    this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	Option  options  =  options.getOption(t);	      Option    option    =    options.getOption(str);    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	3	None	replace
