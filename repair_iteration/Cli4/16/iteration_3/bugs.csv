bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(option,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(option,  value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(opt);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
3	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.propertyNames());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.values());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.keySet());	  List    <    String>    requiredOptions    =    new    ArrayList    <    String>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
6	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()!=  0)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.propertyNames().size()!=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
7	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()!=  0)  {  [CE]  cannot  find  symbol  propertyNames  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.propertyNames().size()!=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	23	None	replace
8	[BUG]  [BUGGY]  if(propertyNames!=  null)  {  [CE]  cannot  find  symbol  propertyNames  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames!=  null)  {	  if(propertyNames    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	78	None	replace
9	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().isEmpty())  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames().isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.propertyNames().isEmpty())  {	  if(properties    ==    null    ||    properties.propertyNames().isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
10	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().isEmpty())  {  [CE]  cannot  find  symbol  propertyNames  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.propertyNames().isEmpty())  {	  if(properties    ==    null    ||    properties.propertyNames().isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	20	None	replace
11	[BUG]  [BUGGY]  if(properties  ==  null  ||  propertyNames.isEmpty())  {  [CE]  cannot  find  symbol  propertyNames  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  propertyNames.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  propertyNames.isEmpty())  {	  if(properties    ==    null    ||    properties.propertyNames().isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	20	None	replace
12	[BUG]  [BUGGY]  Option  options  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  options  =  options.getOption(option);	  Option    options    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
13	[BUG]  [BUGGY]  Option  options  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  options  =  options.getOption(opt);	  Option    options    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
14	[BUG]  [BUGGY]  Option  options  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  options  =  options.getOption(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  options  =  options.getOption(options);	  Option    options    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
15	[BUG]  [BUGGY]  Properties  cmd  =  options.getProperty(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getProperty(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getProperty(option);	  Properties    cmd    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
16	[BUG]  [BUGGY]  Properties  cmd  =  cmd.getProperty(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  cmd.getProperty(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  cmd.getProperty(option);	  Properties    cmd    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
17	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyConfig();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getPropertyConfig();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getPropertyConfig();	  Properties    cmd    =    properties.propertyConfig();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
18	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyConfig(value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.propertyConfig(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyConfig(value);	  Properties    cmd    =    properties.propertyConfig();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
19	[BUG]  [BUGGY]  if(property  ==  null  ||  properties.isEmpty())  {  [CE]  cannot  find  symbol  property  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(property  ==  null  ||  properties.isEmpty())  {	  if(value    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  property	19	None	replace
20	[BUG]  [BUGGY]  if(properties  ==  null  ||  property.isEmpty())  {  [CE]  cannot  find  symbol  property  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  property.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  property.isEmpty())  {	  if(value    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  property	19	None	replace
21	[BUG]  [BUGGY]  Properties  cmd  =  options.properties();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.properties();	  Properties    cmd    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
22	[BUG]  [BUGGY]  Properties  cmd  =  options.propertyParameters();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.propertyParameters();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.propertyParameters();	  Properties    cmd    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
23	[BUG]  [BUGGY]  Properties  cmd  =  opt.getOptions();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  opt.getOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  opt.getOptions();	  Properties    cmd    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
24	[BUG]  [BUGGY]  Properties  cmd  =  option.getParent();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  option.getParent();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  option.getParent();	  Properties    cmd    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
25	[BUG]  [BUGGY]  Properties  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getOption(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOption(opt);	  Properties    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
26	[BUG]  [BUGGY]  Properties  cmd  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getOption(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOption(options);	  Properties    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
27	[BUG]  [BUGGY]  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
28	[BUG]  [BUGGY]  ||  properties.isEmpty())  {  return;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  ||  properties.isEmpty())  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.isEmpty())  {  return;	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
29	[BUG]  [BUGGY]  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  return;  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
30	[BUG]  [BUGGY]  Properties  properties  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  properties.get(properties.size()  -  1);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  properties.get(properties.size()  -  1);	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
31	[BUG]  [BUGGY]  Properties  properties  =  getProperties(properties,  exp);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(properties,  exp);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(properties,  exp);	  Properties    properties    =    getProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
32	[BUG]  [BUGGY]  Properties  properties  =  getProperties(cmd);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(cmd);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(cmd);	  Properties    properties    =    getProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
33	[BUG]  [BUGGY]  Properties  cmd  =  options.getOptions(opt);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getOptions(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOptions(opt);	  Properties    cmd    =    options.getOptions(value);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
34	[BUG]  [BUGGY]  Properties  cmd  =  options.getOptions(property);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getOptions(property);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOptions(property);	  Properties    cmd    =    options.getOptions(value);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
35	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties  ==  null  ||  properties.equals(properties.values()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
36	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.keySet()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.keySet()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties  ==  null  ||  properties.equals(properties.keySet()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
37	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  Properties  properties  =  properties.values();  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  Properties  properties  =  properties.values();  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    Properties  properties  =  properties.values();	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
38	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.contains(properties.values()))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.contains(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties  ==  null  ||  properties.contains(properties.values()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
39	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  return;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties  ==  null  ||  properties.equals(properties.values()))  {  return;	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
40	[BUG]  [BUGGY]  Properties  cmd  =  options.getOptions(option,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getOptions(option,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOptions(option,  value);	  Properties    cmd    =    options.getOptions(option);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
41	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "properties. ");  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty( "properties. ");  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty( "properties. ");	  Properties    cmd    =    properties.getProperty(   "properties   ");    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
42	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "properties ",  null);  [CE]  illegal  start  of  type  [FE]                          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty( "properties ",  null);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty( "properties ",  null);	  Properties    cmd    =    properties.getProperty(   "properties   ");    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.keySet()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.equals(properties.keySet()))  {	  if(properties    ==    null    ||    properties.equals(properties.values()))    {    	compilable	  [FE]  ComparisonFailure  	95	2	replace
44	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.keySet()))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.keySet()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.equals(properties.keySet()))  {	  if(properties    ==    null    ||    properties.equals(properties.values()))    {    	compilable	  [FE]  ComparisonFailure  	95	2	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.equals(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.equals(properties.values()))  {	  if(properties    ==    null    ||    properties.equals(properties.values()))    {    	compilable	  [FE]  NullPointerException  	95	2	replace
46	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.equals(properties.values()))  {  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.equals(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.equals(properties.values()))  {	  if(properties    ==    null    ||    properties.equals(properties.values()))    {    	compilable	  [FE]  NullPointerException  	95	2	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.contains(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.contains(properties.values()))  {	  if(properties    ==    null    ||    properties.equals(properties.values()))    {    	compilable	  [FE]  ComparisonFailure  	95	2	replace
48	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.contains(properties.values()))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.contains(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.contains(properties.values()))  {	  if(properties    ==    null    ||    properties.equals(properties.values()))    {    	compilable	  [FE]  ComparisonFailure  	95	2	replace
49	[BUG]  [BUGGY]  Properties  cmd  =  properties.getOption(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getOption(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getOption(opt);	  Properties    cmd    =    properties.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  Properties  cmd  =  properties.getOption(propertyName);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getOption(propertyName);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getOption(propertyName);	  Properties    cmd    =    properties.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Thread.currentThread().setContextClassLoader(this);	  if(properties!=    null)    {    if(properties!=    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
52	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Thread.currentThread().setContextClassLoader(null);	  if(properties!=    null)    {    if(properties!=    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
53	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCmd());  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  Thread.currentThread().setContextClassLoader(getCmd());  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Thread.currentThread().setContextClassLoader(getCmd());	  if(properties!=    null)    {    if(properties!=    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
54	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Thread.currentThread().interrupt();	  if(properties!=    null)    {    if(properties!=    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
55	[BUG]  [BUGGY]  Properties  cmd  =  this.cmd.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.cmd.getPropertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.cmd.getPropertyNames();	  Properties    cmd    =    cmd.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
56	[BUG]  [BUGGY]  Properties  cmd  =  property.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  property.getPropertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  property.getPropertyNames();	  Properties    cmd    =    cmd.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
57	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.hasOption(option))  {  [CE]  cannot  find  symbol  option  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(option  ==  null  ||  properties.hasOption(option))  {	  if(properties!=    null)    {    if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  option	72	None	replace
58	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(cmd  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(cmd  ==  null)  {	  if(properties!=    null)    {    if(properties!=    null    ||    properties.hasOption(option))    {    	compilable	  [FE]  NullPointerException  	72	2	replace
59	[BUG]  [BUGGY]  if(cmd  ==  null)  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(cmd  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(cmd  ==  null)  {	  if(properties!=    null)    {    if(properties!=    null    ||    properties.hasOption(option))    {    	compilable	  [FE]  NullPointerException  	72	2	replace
60	[BUG]  [BUGGY]  Properties  cmd  =  properties.properties.getOption(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.properties.getOption(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.properties.getOption(option);	  Properties    cmd    =    properties.properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
61	[BUG]  [BUGGY]  Properties  cmd  =  properties.properties.getOption(value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.properties.getOption(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.properties.getOption(value);	  Properties    cmd    =    properties.properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
62	[BUG]  [BUGGY]  Properties  cmd  =  options.get(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.get(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.get(option);	  Properties    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
63	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(properties.values(),  value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(properties.values(),  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(properties.values(),  value);	  Properties    cmd    =    properties.get(properties.values());    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
64	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(properties.keySet());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(properties.keySet());	  Properties    cmd    =    properties.get(properties.values());    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
65	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(propertyNames());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(propertyNames());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(propertyNames());	  Properties    cmd    =    properties.get(properties.values());    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
66	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(properties.values(),  values);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(properties.values(),  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(properties.values(),  values);	  Properties    cmd    =    properties.get(properties.values());    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
67	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyChanges();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.propertyChanges();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyChanges();	  Properties    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
68	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    	compilable	  [FE]  NullPointerException  	97	2	replace
69	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    	compilable	  [FE]  NullPointerException  	97	2	replace
70	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    	compilable	  [FE]  ComparisonFailure  	97	2	replace
71	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    	compilable	  [FE]  ComparisonFailure  	97	2	replace
72	[BUG]  [BUGGY]  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
73	[BUG]  [BUGGY]  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.isEmpty())  {  throw  new  RuntimeException( " ");	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
74	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(opt))  {  [CE]  cannot  find  symbol  opt  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.hasOption(opt))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.hasOption(opt))  {	  if(properties    ==    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol  opt	65	None	replace
75	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(options))  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.hasOption(options))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.hasOption(options))  {	  if(properties    ==    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
76	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  properties.keySet();	  List    <    String>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
77	[BUG]  [BUGGY]  Properties  properties  =  getProperties(option,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(option,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(option,  value);	  Properties    properties    =    getProperties(option);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
78	[BUG]  [BUGGY]  Properties  properties  =  getProperties(option.getValue());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(option.getValue());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(option.getValue());	  Properties    properties    =    getProperties(option);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
79	[BUG]  [BUGGY]  Properties  properties  =  getProperties(value);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(value);	  Properties    properties    =    getProperties(option);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
80	[BUG]  [BUGGY]  ||  properties.propertyNames()  ==  null)  {  return;  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  ||  properties.propertyNames()  ==  null)  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.propertyNames()  ==  null)  {  return;	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
81	[BUG]  [BUGGY]  ||  properties.propertyNames()!=  null)  {  return;  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  ||  properties.propertyNames()!=  null)  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.propertyNames()!=  null)  {  return;	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
82	[BUG]  [BUGGY]  ||  properties.propertyNames()  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      {      [BUGGY]  ||  properties.propertyNames()  ==  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.propertyNames()  ==  null)  {  return;  }	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
83	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  cannot  find  symbol  propertyNames  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	21	None	replace
84	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.values());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.values());	  List    <    Properties>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
85	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt,  value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(opt,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  cmd  =  options.getOption(opt,  value);	  Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.isEmpty())  {  [CE]  cannot  find  symbol  propertyNames  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames!=  null  ||  properties.isEmpty())  {	  if(properties!=    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	17	None	replace
87	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.propertyChildren();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.propertyChildren();	  Properties    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
88	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyParameters();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.propertyParameters();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyParameters();	  Properties    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
89	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ",  value);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ",  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty( "cmd ",  value);	  Properties    cmd    =    properties.getProperty(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
90	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ",  null);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ",  null);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty( "cmd ",  null);	  Properties    cmd    =    properties.getProperty(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
91	[BUG]  [BUGGY]  Properties  cmd  =  properties.getParent();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getParent();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getParent();	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
92	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(null);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getCmd(null);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getCmd(null);	  Properties    cmd    =    properties.getCmd();    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
93	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasOption(opt))  {  [CE]  cannot  find  symbol  opt  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.hasOption(opt))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.hasOption(opt))  {	  if(properties!=    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol  opt	67	None	replace
94	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasOption(options))  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.hasOption(options))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.hasOption(options))  {	  if(properties!=    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
95	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(properties  ==  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
96	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(properties  ==  null  ||  properties.size()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
97	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(properties!=  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
98	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()  >=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(properties  ==  null  ||  properties.size()  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
99	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(properties  ==  null  ||  properties.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
100	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
101	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  Properties  properties  =  properties.get(properties.propertyNames());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  Properties  properties  =  properties.get(properties.propertyNames());  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    Properties  properties  =  properties.get(properties.propertyNames());	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
102	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(propertyNames()))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.equals(propertyNames()))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
103	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.contains(properties.propertyNames()))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
104	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  return;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  return;	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
105	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {  [CE]  cannot  find  symbol  propertyNames  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.propertyNames!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	77	None	replace
106	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames!=  null)  {  [CE]  cannot  find  symbol  propertyNames  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.propertyNames!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.propertyNames!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	77	None	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	compilable	  [FE]  ComparisonFailure  	77	2	replace
108	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties!=  null)  {  [FE]  ComparisonFailure  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	compilable	  [FE]  ComparisonFailure  	77	2	replace
109	[BUG]  [BUGGY]  ||  properties.propertyNames()!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  ||  properties.propertyNames()!=  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties.propertyNames()!=  null)  {  return;  }	  if(properties!=    null)    {    if(properties!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
110	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {  [CE]  cannot  find  symbol  propertyNames  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  propertyNames.isEmpty())  {	  if(propertyNames    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	18	None	replace
111	[BUG]  [BUGGY]  Properties  properties  =  properties.get(properties.size());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  properties.get(properties.size());  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  properties.get(properties.size());	  if(properties    ==    null    ||    properties.size()    ==    0)    {    Properties    properties    =    properties.get(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
112	[BUG]  [BUGGY]  properties  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  properties  =  properties.get(properties.size()  -  1);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	properties  =  properties.get(properties.size()  -  1);	  if(properties    ==    null    ||    properties.size()    ==    0)    {    Properties    properties    =    properties.get(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
113	[BUG]  [BUGGY]  if(property!=  null  ||  properties.hasOption(value))  {  [CE]  cannot  find  symbol  property  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(property!=  null  ||  properties.hasOption(value))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(property!=  null  ||  properties.hasOption(value))  {	  if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  property	91	None	replace
114	[BUG]  [BUGGY]  if(property  ==  null  ||  properties.hasOption(option))  {  [CE]  cannot  find  symbol  property  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(property  ==  null  ||  properties.hasOption(option))  {	  if(property    ==    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol  property	66	None	replace
115	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.hasOption(value))  {  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  properties.hasOption(value))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(value  ==  null  ||  properties.hasOption(value))  {	  if(property    ==    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol  value	66	None	replace
116	[BUG]  [BUGGY]  Properties  cmd  =  properties.getOption(key,  value);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getOption(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getOption(key,  value);	  Properties    cmd    =    properties.getOption(key);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
117	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  list.values();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  list.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  list.values();	  List    <    String>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
118	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(list.properties());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(list.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(list.properties());	  List    <    String>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
119	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  list.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  list.getRequiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  list.getRequiredOptions();	  List    <    String>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
120	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.propertyNames();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  options.propertyNames();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
121	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.values();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  options.values();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
122	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  option.properties();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  option.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  option.properties();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
123	[BUG]  [BUGGY]  Properties  properties  =  getProperties(options,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(options,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(options,  value);	  Properties    properties    =    getProperties(options);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
124	[BUG]  [BUGGY]  Properties  properties  =  getProperties(options,  options);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(options,  options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(options,  options);	  Properties    properties    =    getProperties(options);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
125	[BUG]  [BUGGY]  Properties  properties  =  getProperties(options,  values);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(options,  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(options,  values);	  Properties    properties    =    getProperties(options);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
126	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  cmd  =  options.getOption(options,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  cmd  =  options.getOption(options,  value);	  Option    cmd    =    options.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
127	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.getRequiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  properties.getRequiredOptions();	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
128	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequires();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyRequires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  properties.propertyRequires();	  List    <    String>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
129	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.propertyNames();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  options.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.propertyNames();	  List    <    Properties>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
130	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.propertyList();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  options.propertyList();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.propertyList();	  List    <    Properties>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
131	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.propertyValues();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  options.propertyValues();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.propertyValues();	  List    <    Properties>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
132	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyParser();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.propertyParser();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyParser();	  Properties    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
133	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyCmd(value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.propertyCmd(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyCmd(value);	  Properties    cmd    =    properties.propertyCmd();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
134	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getOption(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getOption(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getOption(option);	  Properties    cmd    =    this.properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
135	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getOption(value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getOption(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getOption(value);	  Properties    cmd    =    this.properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
136	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    if(value    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
137	[BUG]  [BUGGY]  Option  option  =  options.getOption(options,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(options,  value);	  Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(options);	  Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
139	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.options!=  null)  {  [CE]  cannot  find  symbol  options  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.options!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.options!=  null)  {	  if(properties!=    null)    {    if(properties    ==    null    ||    properties.options!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  options	73	None	replace
140	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.options  ==  null)  {  [CE]  cannot  find  symbol  options  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.options  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.options  ==  null)  {	  if(properties!=    null)    {    if(properties    ==    null    ||    properties.options!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  options	73	None	replace
141	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.options!=  null)  {  [CE]  cannot  find  symbol  options  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.options!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.options!=  null)  {	  if(properties!=    null)    {    if(properties    ==    null    ||    properties.options!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  options	73	None	replace
142	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(cmd.properties());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(cmd.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(cmd.properties());	  List    <    Properties>    requiredOptions    =    cmd.properties();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
143	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(props.properties());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(props.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(props.properties());	  List    <    Properties>    requiredOptions    =    props.properties();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
144	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(list.properties());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(list.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(list.properties());	  List    <    Properties>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
145	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(requiredOptions.size());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(requiredOptions.size());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(requiredOptions.size());	  List    <    Properties>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
146	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  list.values();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  list.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  list.values();	  List    <    Properties>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
147	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()!=  0)  {  [CE]  cannot  find  symbol  propertyNames  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	84	None	replace
148	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values(),  value);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values(),  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties.values(),  value);	  Properties    cmd    =    properties.getProperty(properties.values());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
149	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet());  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties.keySet());	  Properties    cmd    =    properties.getProperty(properties.values());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
150	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values(),  values);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values(),  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties.values(),  values);	  Properties    cmd    =    properties.getProperty(properties.values());    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
151	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getCmd();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getCmd();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getCmd();	  Properties    cmd    =    this.properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
152	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getPropertyFactory();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getPropertyFactory();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getPropertyFactory();	  Properties    cmd    =    this.properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
153	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.propertyNames());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.propertyNames());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.propertyNames());	  List    <    Properties>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
154	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  properties.propertyRequirements();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  properties.propertyRequirements();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  properties.propertyRequirements();	  List    <    Properties>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
155	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  properties.propertyRequires();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  properties.propertyRequires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  properties.propertyRequires();	  List    <    Properties>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
156	[BUG]  [BUGGY]  Properties  cmd  =  options.getPropertyConfig();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getPropertyConfig();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getPropertyConfig();	  Properties    cmd    =    options.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
157	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
158	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [FE]  NullPointerException  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
159	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
160	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [FE]  NullPointerException  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
161	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
162	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [FE]  NullPointerException  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
163	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.size()  ==  1)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    	compilable	  [FE]  NullPointerException  	57	2	replace
164	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  1)  {  [FE]  NullPointerException  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.size()  ==  1)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    	compilable	  [FE]  NullPointerException  	57	2	replace
165	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(cmd.properties());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(cmd.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(cmd.properties());	  List    <    String>    requiredOptions    =    cmd.properties();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
166	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.size()  ==  0)  {  [CE]  cannot  find  symbol  value  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(value  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(value    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  value	90	None	replace
167	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  _properties.values();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  _properties.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  _properties.values();	  List    <    Properties>    requiredOptions    =    _properties.properties();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
168	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(_properties.properties());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(_properties.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(_properties.properties());	  List    <    Properties>    requiredOptions    =    _properties.properties();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
169	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties  ==  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
170	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties!=  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
171	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
172	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties!=  null  ||  properties.size()  ==  0)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
173	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties  ==  null  ||  properties.size()  ==  0)  {  return;	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
174	[BUG]  [BUGGY]  Properties  properties  =  properties.get(0);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  properties.get(0);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  properties.get(0);	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
175	[BUG]  [BUGGY]  Property  prop  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Property  prop  =  properties.get(properties.size()  -  1);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Property  prop  =  properties.get(properties.size()  -  1);	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
176	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(key,  value);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(key,  value);	  Properties    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
177	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(key  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(key  +  1);	  Properties    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
178	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    if(!properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
179	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    if(!properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
180	[BUG]  [BUGGY]  if(properties  ==  null)  {  if(!properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(!properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null)  {  if(!properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    if(!properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
181	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(propertiesName,  value);	  Properties    cmd    =    properties.getProperty(propertiesName);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
182	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  values);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName,  values);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(propertiesName,  values);	  Properties    cmd    =    properties.getProperty(propertiesName);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
183	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties,  value);	  Properties    cmd    =    properties.getProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
184	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getProperty(properties);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getProperty(properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getProperty(properties);	  Properties    cmd    =    properties.getProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
185	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(key,  value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(key,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(key,  value);	  Properties    cmd    =    properties.getProperty(key);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
186	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName,  value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(propertyName,  value);	  Properties    cmd    =    properties.getProperty(propertyName);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
187	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getProperty(propertyName);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getProperty(propertyName);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getProperty(propertyName);	  Properties    cmd    =    properties.getProperty(propertyName);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
188	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName,  null);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName,  null);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(propertyName,  null);	  Properties    cmd    =    properties.getProperty(propertyName);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
189	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  properties.isEmpty())  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
190	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  properties.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
191	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.isEmpty())    {    if(properties!=  null  ||  properties.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
192	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  properties.isEmpty())  {  return;	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
193	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.isEmpty())    {    if(properties!=  null  ||  properties.isEmpty())  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
194	[BUG]  [BUGGY]  Set  <  Properties>  requiredOptions  =  new  HashSet  <  Properties>(properties.properties());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Set  <  Properties>  requiredOptions  =  new  HashSet  <  Properties>(properties.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Set  <  Properties>  requiredOptions  =  new  HashSet  <  Properties>(properties.properties());	  List    <    Properties>    requiredOptions    =    new    ArrayList    <    Properties>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
195	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    1)    {    if(properties  ==  null  ||  properties.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
196	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    1)    {    if(properties!=  null  ||  properties.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
197	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    1)    {    if(properties  ==  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
198	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  2)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    1)    {    if(properties  ==  null  ||  properties.size()  ==  2)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
199	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    1)    {    if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
200	[BUG]  [BUGGY]  Properties  properties  =  getProperties().propertyNames();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties().propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties().propertyNames();	  Properties    properties    =    getProperties().values();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
201	[BUG]  [BUGGY]  Properties  properties  =  getProperties().properties();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties().properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties().properties();	  Properties    properties    =    getProperties().values();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
202	[BUG]  [BUGGY]  Properties  properties  =  getOptions(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getOptions(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getOptions(option);	  Properties    properties    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
203	[BUG]  [BUGGY]  Properties  properties  =  getOptions().values();  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getOptions().values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getOptions().values();	  Properties    properties    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
204	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(propertyName,  value);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(propertyName,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(propertyName,  value);	  Properties    cmd    =    properties.get(propertyName);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
205	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(propertyName  +  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(propertyName  +  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(propertyName  +  1);	  Properties    cmd    =    properties.get(propertyName);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
206	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    if(value    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
207	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(value))  {  [CE]  cannot  find  symbol  propertyNames  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(value))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames!=  null  ||  properties.hasOption(value))  {	  if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	91	None	replace
208	[BUG]  [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(option))  {  [CE]  cannot  find  symbol  propertyNames  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(propertyNames!=  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames!=  null  ||  properties.hasOption(option))  {	  if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	91	None	replace
209	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(value  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(value  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(value  ==  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
210	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "category.cmd ");  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty( "category.cmd ");  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty( "category.cmd ");	  Properties    cmd    =    properties.getProperty(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
211	[BUG]  [BUGGY]  Properties  properties  =  getProperties(properties.values());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(properties.values());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(properties.values());	  Properties    properties    =    getProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
212	[BUG]  [BUGGY]  Properties  properties  =  getProperties(properties,  value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(properties,  value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(properties,  value);	  Properties    properties    =    getProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
213	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  If(properties!=  null  ||  properties.isEmpty())  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  If(properties!=  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.isEmpty())    {    If(properties!=  null  ||  properties.isEmpty())  {	  	non-compiled	[CE]  ';'  expected	16	None	add
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(properties!=  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null)  {  if(properties!=  null)  {  return;  }	  if(properties!=    null)    {    if(properties!=    null)    {    return;    }    	compilable	  [FE]  ComparisonFailure  	27	2	replace
215	[BUG]  [BUGGY]  if(properties  ==  null)  {  if(properties!=  null)  {  return;  }  [FE]  ComparisonFailure  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(properties!=  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null)  {  if(properties!=  null)  {  return;  }	  if(properties!=    null)    {    if(properties!=    null)    {    return;    }    	compilable	  [FE]  ComparisonFailure  	27	2	replace
216	[BUG]  [BUGGY]  if(properties  ==  null)  {  if(propertyNames!=  null)  {  return;  }  [CE]  cannot  find  symbol  propertyNames  [FE]                NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(propertyNames!=  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null)  {  if(propertyNames!=  null)  {  return;  }	  if(properties!=    null)    {    if(properties!=    null)    {    return;    }    	non-compiled	[CE]  cannot  find  symbol  propertyNames	27	None	replace
217	[BUG]  [BUGGY]  Properties  properties  =  getOptions(options);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getOptions(options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getOptions(options);	  Properties    properties    =    getProperties(options);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
218	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(options  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(options  ==  null)  {	  if(properties!=    null)    {    if(properties    ==    null    ||    properties.options!=    null)    {    	compilable	  [FE]  NullPointerException  	73	2	replace
219	[BUG]  [BUGGY]  if(options  ==  null)  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(options  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(options  ==  null)  {	  if(properties!=    null)    {    if(properties    ==    null    ||    properties.options!=    null)    {    	compilable	  [FE]  NullPointerException  	73	2	replace
220	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.options  ==  null)  {  [CE]  cannot  find  symbol  options  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.options  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.options  ==  null)  {	  if(properties!=    null)    {    if(properties    ==    null    ||    properties.options!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  options	73	None	replace
221	[BUG]  [BUGGY]  Properties  cmd  =  options.getCmd();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getCmd();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getCmd();	  Properties    cmd    =    options.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
222	[BUG]  [BUGGY]  Properties  cmd  =  options.getPropertyCmd();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getPropertyCmd();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getPropertyCmd();	  Properties    cmd    =    options.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
223	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext());	  if(properties!=    null)    {    if(properties!=    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
224	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    propertyNames.isEmpty())    {    	compilable	  [FE]  NullPointerException  	75	2	replace
225	[BUG]  [BUGGY]  if(properties.isEmpty())  {  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    propertyNames.isEmpty())    {    	compilable	  [FE]  NullPointerException  	75	2	replace
226	[BUG]  [BUGGY]  Properties  cmd  =  properties.values();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.values();	  Properties    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
227	[BUG]  [BUGGY]  Properties  cmd  =  properties.getPropertyChildren();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getPropertyChildren();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getPropertyChildren();	  Properties    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
228	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  properties.keySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  properties.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  properties.keySet();	  List    <    Properties>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
229	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>();	  List    <    Properties>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
230	[BUG]  [BUGGY]  option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  option  option  =  options.getOption(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	option  option  =  options.getOption(value);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
231	[BUG]  [BUGGY]  if(value  ==  null)  {  [CE]  cannot  find  symbol  value  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(value  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(value  ==  null)  {	  if(propertyNames    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  value	78	None	replace
232	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.values();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  options.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.values();	  List    <    Properties>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
233	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.keySet();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  options.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.keySet();	  List    <    Properties>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
234	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.properties(value);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  options.properties(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.properties(value);	  List    <    Properties>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
235	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.getValues()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.getValues()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties  ==  null  ||  properties.equals(properties.getValues()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
236	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  cannot  find  symbol  value  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(value  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(value  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(propertyNames    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  value	22	None	replace
237	[BUG]  [BUGGY]  if(propertes  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  cannot  find  symbol  propertes  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertes  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertes  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(propertyNames    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  propertes	22	None	replace
238	[BUG]  [BUGGY]  Properties  cmd  =  options.getProperty(value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getProperty(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getProperty(value);	  Properties    cmd    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
239	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd(option);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getCmd(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getCmd(option);	  Properties    cmd    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
240	[BUG]  [BUGGY]  if(propertes  ==  null  ||  properties.size()  ==  0)  {  [CE]  cannot  find  symbol  propertes  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertes  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertes  ==  null  ||  properties.size()  ==  0)  {	  if(propertyNames    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  propertes	49	None	replace
241	[BUG]  [BUGGY]  Context.checkState(properties.isEmpty()  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Context.checkState(properties.isEmpty()  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Context.checkState(properties.isEmpty()  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
242	[BUG]  [BUGGY]  Context.checkState(properties.isEmpty());  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  Context.checkState(properties.isEmpty());  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Context.checkState(properties.isEmpty());	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
243	[BUG]  [BUGGY]  Context.checkState(properties.isEmpty()  ||  propertyNames.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Context.checkState(properties.isEmpty()  ||  propertyNames.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Context.checkState(properties.isEmpty()  ||  propertyNames.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  ';'  expected	100	None	replace
244	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(value  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(value  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    1)    {    if(value  ==  null  ||  properties.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
245	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties!=  null  ||  properties.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
246	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
247	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  If(properties!=  null  ||  properties.size()  ==  0)  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  If(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    If(properties!=  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
248	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  opt.properties();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  opt.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  opt.properties();	  List    <    Properties>    requiredOptions    =    props.properties();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
249	[BUG]  [BUGGY]  Properties  cmd  =  option.getCmd();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  option.getCmd();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  option.getCmd();	  Properties    cmd    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
250	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.properties();	  Properties    cmd    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
251	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  cmd.values();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  cmd.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  cmd.values();	  List    <    Properties>    requiredOptions    =    cmd.properties();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
252	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  cmd.requires();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  cmd.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  cmd.requires();	  List    <    Properties>    requiredOptions    =    cmd.properties();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
253	[BUG]  [BUGGY]  if(option  ==  null)  {  [CE]  cannot  find  symbol  option  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(option  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(option  ==  null)  {	  if(properties!=    null)    {    if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  option	72	None	replace
254	[BUG]  [BUGGY]  if(option!=  null)  {  [CE]  cannot  find  symbol  option  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(option!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(option!=  null)  {	  if(properties!=    null)    {    if(properties!=    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  option	72	None	replace
255	[BUG]  [BUGGY]  Properties  cmd  =  options.values();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.values();	  Properties    cmd    =    options.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
256	[BUG]  [BUGGY]  if(option  ==  null  ||  properties.isEmpty())  {  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(option  ==  null  ||  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(option  ==  null  ||  properties.isEmpty())  {	  if(value    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  option	19	None	replace
257	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(properties.values()  -  1);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(properties.values()  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(properties.values()  -  1);	  Properties    cmd    =    properties.get(properties.values());    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
258	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().equals( " "))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.propertyNames().equals( " "))  {	  if(properties    ==    null    ||    properties.propertyNames().isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
259	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().equals( " "))  {  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().equals( " "))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames().equals( " "))  {	  if(properties    ==    null    ||    properties.propertyNames().isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
260	[BUG]  [BUGGY]  Properties  properties  =  getProperties().keySet();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties().keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties().keySet();	  Properties    properties    =    getProperties().values();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
261	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  this.properties.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  this.properties.properties();	  List    <    String>    requiredOptions    =    property.properties();    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
262	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
263	[BUG]  [BUGGY]  if(properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [FE]  NullPointerException  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    	compilable	  [FE]  NullPointerException  	64	2	replace
264	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  list.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  list.getRequiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  list.getRequiredOptions();	  List    <    Properties>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
265	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  list.newArrayList();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  list.newArrayList();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  list.newArrayList();	  List    <    Properties>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
266	[BUG]  [BUGGY]  Property  properties  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Property  properties  =  properties.get(properties.size()  -  1);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Property  properties  =  properties.get(properties.size()  -  1);	  if(properties    ==    null    ||    properties.size()    ==    0)    {    Properties    properties    =    properties.get(properties.size()    -    1);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
267	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.hasOption(key))  {  [CE]  cannot  find  symbol  propertyNames  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  properties.hasOption(key))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.hasOption(key))  {	  if(properties    ==    null    ||    properties.hasOption(key))    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	99	None	replace
268	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.keySet());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.keySet());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.keySet());	  List    <    Properties>    requiredOptions    =    new    ArrayList    <    Properties>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
269	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  LinkedList  <  Properties>(properties.properties());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  new  LinkedList  <  Properties>(properties.properties());  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  LinkedList  <  Properties>(properties.properties());	  List    <    Properties>    requiredOptions    =    new    ArrayList    <    Properties>(properties.properties());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
270	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [CE]  cannot  find  symbol  propertyNames  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames  ==  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	77	None	replace
271	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.values!=  null)  {  [CE]  values  has  private  access  in  Hashtable  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.values!=  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.values!=  null)  {	  if(properties    ==    null    ||    properties.propertyNames!=    null)    {    	non-compiled	[CE]  values  has  private  access  in  Hashtable	77	None	replace
272	[BUG]  [BUGGY]  if(properties  ==  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null)  {  return;  }	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
273	[BUG]  [BUGGY]  Context.checkState(properties  ==  null);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  Context.checkState(properties  ==  null);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Context.checkState(properties  ==  null);	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
274	[BUG]  [BUGGY]  Context.checkState(properties!=  null);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      {      [BUGGY]  Context.checkState(properties!=  null);  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Context.checkState(properties!=  null);	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
275	[BUG]  [BUGGY]  parent  =  parent.getParent();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]      {      [BUGGY]  parent  =  parent.getParent();  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	parent  =  parent.getParent();	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
276	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
277	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
278	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
279	[BUG]  [BUGGY]  if(properties  ==  null)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [FE]  NullPointerException  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null)  {  if(properties!=  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  ComparisonFailure  	106	2	replace
281	[BUG]  [BUGGY]  if(properties  ==  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  ComparisonFailure  	106	2	replace
282	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.keySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  options.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  options.keySet();	  List    <    String>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
283	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  _properties.keySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  _properties.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  _properties.keySet();	  List    <    Properties>    requiredOptions    =    _properties.properties();    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
284	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.getPropertyNames()))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.getPropertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.equals(properties.getPropertyNames()))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
285	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.equals(properties.values()))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
286	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  cmd.requires();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  cmd.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  cmd.requires();	  List    <    String>    requiredOptions    =    cmd.properties();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
287	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  cmd.values();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  cmd.values();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  cmd.values();	  List    <    String>    requiredOptions    =    cmd.properties();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
288	[BUG]  [BUGGY]  Properties  properties  =  getOptions(opt);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getOptions(opt);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getOptions(opt);	  Properties    properties    =    getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
289	[BUG]  [BUGGY]  if(property!=  null  ||  properties.hasOption(option))  {  [CE]  cannot  find  symbol  property  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(property!=  null  ||  properties.hasOption(option))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(property!=  null  ||  properties.hasOption(option))  {	  if(properties!=    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol  property	67	None	replace
290	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  list.keySet();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  list.keySet();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  list.keySet();	  List    <    String>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
291	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  list.propertyNames();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  list.propertyNames();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  list.propertyNames();	  List    <    String>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
292	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(key  -  1);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.get(key  -  1);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(key  -  1);	  Properties    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
293	[BUG]  [BUGGY]  if(property  ==  null  ||  properties.hasOption(propertyName))  {  [CE]  cannot  find  symbol  property  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(property  ==  null  ||  properties.hasOption(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(property  ==  null  ||  properties.hasOption(propertyName))  {	  if(property    ==    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol  property	66	None	replace
294	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties, "properties ");  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties, "properties ");  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties, "properties ");	  Properties    cmd    =    properties.getProperty(   "properties   ");    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
295	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperties(value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperties(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperties(value);	  Properties    cmd    =    properties.getProperty(option);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
296	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames().size()  >=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()!=    0)    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
297	[BUG]  [BUGGY]  Properties  cmd  =  options.getPropertyValues();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getPropertyValues();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getPropertyValues();	  Properties    cmd    =    options.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
298	[BUG]  [BUGGY]  Properties  cmd  =  options.getOptionValue(option);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getOptionValue(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOptionValue(option);	  Properties    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
299	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  this.properties.properties();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  this.properties.properties();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  this.properties.properties();	  List    <    Properties>    requiredOptions    =    props.properties();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
300	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  properties.requires();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  properties.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  properties.requires();	  List    <    Properties>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
301	[BUG]  [BUGGY]  if(properties!=  null)  {  return;  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties!=  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null)  {  return;  }	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
302	[BUG]  [BUGGY]  ||  properties  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  ||  properties  ==  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties  ==  null)  {  return;  }	  if(properties!=    null)    {    if(properties    ==    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
303	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(options  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(options  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(value    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  NullPointerException  	90	2	replace
304	[BUG]  [BUGGY]  if(options  ==  null  ||  properties.size()  ==  0)  {  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(options  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(options  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(value    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  NullPointerException  	90	2	replace
305	[BUG]  [BUGGY]  ||  properties!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      {      [BUGGY]  ||  properties!=  null)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	||  properties!=  null)  {  return;  }	  if(properties!=    null)    {    if(properties!=    null)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
306	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getPropertyChildren();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getPropertyChildren();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getPropertyChildren();	  Properties    cmd    =    this.properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
307	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getPropertyConfig();  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.getPropertyConfig();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getPropertyConfig();	  Properties    cmd    =    this.properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
308	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().equals(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.propertyNames().equals(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.propertyNames().isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
309	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().equals(properties.propertyNames()))  {  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().equals(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames().equals(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.propertyNames().isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	20	2	replace
310	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  list.newArrayList();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  list.newArrayList();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  list.newArrayList();	  List    <    String>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
311	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(requiredOptions))  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.hasOption(requiredOptions))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.hasOption(requiredOptions))  {	  if(properties    ==    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
312	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  value.length()  ==  0)  {  [CE]  cannot  find  symbol  propertyNames  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(propertyNames  ==  null  ||  value.length()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  value.length()  ==  0)  {	  if(propertyNames    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	78	None	replace
313	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.get(propertyName);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.get(propertyName);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.get(propertyName);	  Properties    cmd    =    properties.get(propertyName);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
314	[BUG]  [BUGGY]  Properties  cmd  =  options.getOptions(properties);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  options.getOptions(properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOptions(properties);	  Properties    cmd    =    options.getOptions(value);    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
315	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperties(properties);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperties(properties);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperties(properties);	  Properties    cmd    =    properties.getProperty(properties);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
316	[BUG]  [BUGGY]  Properties  properties  =  getProperties(properties,  requiredOptions);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  properties  =  getProperties(properties,  requiredOptions);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(properties,  requiredOptions);	  Properties    properties    =    getProperties(properties);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
317	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(value  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(value  ==  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(value  ==  null  ||  properties.size()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
318	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()!=  1)  {  return;  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  if(properties  ==  null  ||  properties.size()!=  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()!=    0)    {    if(properties  ==  null  ||  properties.size()!=  1)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	83	None	add
319	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.get(key);  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.get(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.get(key);	  Properties    cmd    =    properties.get(key);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
320	[BUG]  [BUGGY]  Option  option  =  options.getOptionValue(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOptionValue(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOptionValue(option);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
321	[BUG]  [BUGGY]  Option  option  =  options.getOption(key);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(key);	  Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
322	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  &&  properties.propertyNames().size()  ==  0)  {	  if(properties!=    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
323	[BUG]  [BUGGY]  Properties  cmd  =  properties.properties.getOptionList();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.properties.getOptionList();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.properties.getOptionList();	  Properties    cmd    =    properties.properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
324	[BUG]  [BUGGY]  Properties  cmd  =  properties.getOptions(value);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getOptions(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getOptions(value);	  Properties    cmd    =    properties.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
325	[BUG]  [BUGGY]  if(properties.options  ==  null)  {  [CE]  cannot  find  symbol  options  [FE]          NullPointerException      [CONTEXT]      {      [BUGGY]  if(properties.options  ==  null)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties.options  ==  null)  {	  if(properties!=    null)    {    if(properties    ==    null    ||    properties.options!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  options	73	None	replace
326	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.requiresOptions();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  String>  requiredOptions  =  properties.requiresOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  properties.requiresOptions();	  List    <    String>    requiredOptions    =    properties.values();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
327	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null    ||    properties.size()    ==    0)    {    if(properties!=  null  ||  properties.size()  ==  0)  {  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
328	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(value  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  if(value  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    1)    {    if(value  ==  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	47	None	add
329	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  list.requires();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  list.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  list.requires();	  List    <    Properties>    requiredOptions    =    list.properties();    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
330	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  return;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
331	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties!=  null  ||  properties.equals(properties.propertyNames()))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
332	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.propertyNames()))    {    if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
333	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      {      [BUGGY]  [Delete]  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	[Delete]	  if(properties!=    null)    {    if(properties!=    null)    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
334	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyChildren(value);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.propertyChildren(value);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyChildren(value);	  Properties    cmd    =    properties.propertyChildren();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
335	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.requires();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  options.requires();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.requires();	  List    <    Properties>    requiredOptions    =    options.properties();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
336	[BUG]  [BUGGY]  tries  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  tries  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	tries  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    throw    new    RuntimeException(   "   ");    }    	non-compiled	[CE]  not  a  statement	63	None	replace
337	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.get(cmd);  [CE]  illegal  start  of  type  [FE]                        ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.get(cmd);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.get(cmd);	  Properties    cmd    =    properties.get(cmd);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
338	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperties(propertiesName);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperties(propertiesName);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperties(propertiesName);	  Properties    cmd    =    properties.getProperty(propertiesName);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
339	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  return;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties  ==  null  ||  properties.equals(properties.values()))  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
340	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties!=  null  ||  properties.equals(properties.values()))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties!=  null  ||  properties.equals(properties.values()))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties!=  null  ||  properties.equals(properties.values()))  {	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
341	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  if(properties  ==  null  ||  properties.equals(properties.values()))  {  throw  new  RuntimeException( " ");  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.equals(properties.values()))    {    if(properties  ==  null  ||  properties.equals(properties.values()))  {  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	94	None	add
342	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.get(option);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.properties.get(option);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.get(option);	  Properties    cmd    =    properties.get(option);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
343	[BUG]  [BUGGY]  parent  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  parent  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	parent  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  not  a  statement	100	None	replace
344	[BUG]  [BUGGY]  parent  ==  null  ||  property.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  parent  ==  null  ||  property.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	parent  ==  null  ||  property.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  not  a  statement	100	None	replace
345	[BUG]  [BUGGY]  parent  ==  null  ||  properties.isEmpty())  {  return;  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  parent  ==  null  ||  properties.isEmpty())  {  return;  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	parent  ==  null  ||  properties.isEmpty())  {  return;	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  not  a  statement	100	None	replace
346	[BUG]  [BUGGY]  parent  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  parent  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	parent  ==  null  ||  properties.isEmpty())  {  return;  }	  if(properties    ==    null    ||    properties.isEmpty())    {    if(properties    ==    null    ||    properties.isEmpty())    {    return;    }    	non-compiled	[CE]  not  a  statement	100	None	replace
347	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties, "cmd ");  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties, "cmd ");  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties, "cmd ");	  Properties    cmd    =    properties.getProperty(   "cmd   ");    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
348	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  key);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  properties.getProperty(properties,  key);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties,  key);	  Properties    cmd    =    properties.getProperty(key);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
349	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  options);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  Option  option  =  options.getOption(value,  options);  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(value,  options);	  Option    option    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
350	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
351	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [FE]  NullPointerException  [FE]        ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
352	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
353	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [FE]  NullPointerException  [FE]          ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	compilable	  [FE]  NullPointerException  	106	2	replace
354	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.size()  ==  0)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
355	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties    ==    null    ||    properties.size()    ==    1)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
356	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasOption(propertyName))  {  [CE]  cannot  find  symbol  propertyName  [FE]                ComparisonFailure      [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.hasOption(propertyName))  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.hasOption(propertyName))  {	  if(properties!=    null    ||    properties.hasOption(value))    {    	non-compiled	[CE]  cannot  find  symbol  propertyName	67	None	replace
357	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()!=    0)    {    	compilable	  [FE]  NullPointerException  	84	2	replace
358	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()!=  0)  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]      {      [BUGGY]  if(properties!=  null  ||  properties.size()!=  0)  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()!=    0)    {    	compilable	  [FE]  NullPointerException  	84	2	replace
359	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  &&  properties.isEmpty())  {	  if(properties!=    null    ||    properties.isEmpty())    {    	compilable	  [FE]  NullPointerException  	17	2	replace
360	[BUG]  [BUGGY]  if(properties!=  null  &&  properties.isEmpty())  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      {      [BUGGY]  if(properties!=  null  &&  properties.isEmpty())  {  [BUGGY]      {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  &&  properties.isEmpty())  {	  if(properties!=    null    ||    properties.isEmpty())    {    	compilable	  [FE]  NullPointerException  	17	2	replace
361	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  properties.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  List  <  Properties>  requiredOptions  =  properties.getRequiredOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  properties.getRequiredOptions();	  List    <    Properties>    requiredOptions    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
362	[BUG]  [BUGGY]  Properties  cmd  =  this.options.getOptions();  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]      {      [BUGGY]  Properties  cmd  =  this.options.getOptions();  [BUGGY]      if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.options.getOptions();	  Properties    cmd    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
