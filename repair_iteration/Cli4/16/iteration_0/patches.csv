bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Properties  cmd  =  properties.propertyNames();  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.propertyNames();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  properties.propertyNames();		non-compiled	[CE]  incompatible  types	33	None	add
2	[BUG]  [BUGGY]    Properties  cmd  =  properties.getProperty(value);  [CE]  cannot  find  symbol  value  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.getProperty(value);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  properties.getProperty(value);		non-compiled	[CE]  cannot  find  symbol  value	33	None	add
3	[BUG]  [BUGGY]    Properties  properties  =  getProperties();  [CE]  variable  properties  is  already  defined  in  method  processProperties(Properties)  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  properties  =  getProperties();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  properties  =  getProperties();		non-compiled	[CE]  variable  properties  is  already  defined  in  method  processProperties(Properties)	33	None	add
4	[BUG]  [BUGGY]    Properties  cmd  =  properties.getPropertyNames();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.getPropertyNames();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  properties.getPropertyNames();		non-compiled	[CE]  cannot  find  symbol	33	None	add
5	[BUG]  [BUGGY]    Properties  cmd  =  properties.getProperties();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.getProperties();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  properties.getProperties();		non-compiled	[CE]  cannot  find  symbol	33	None	add
6	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties!=  null)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null)  {	if  (properties  ==  null)  {  	compilable	  [FE]  NullPointerException  	32	2	replace
7	[BUG]  [BUGGY]  if(properties!=  null)  {  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties!=  null)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null)  {	if  (properties  ==  null)  {  	compilable	  [FE]  NullPointerException  	32	2	replace
8	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames().size()  ==  0)  {	if  (properties  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	32	None	replace
9	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(option))  {  [CE]  cannot  find  symbol  option  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(option))  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.hasOption(option))  {	if  (properties  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol  option	32	None	replace
10	[BUG]  [BUGGY]    Properties  cmd  =  properties.getOptions();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.getOptions();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  properties.getOptions();		non-compiled	[CE]  cannot  find  symbol	33	None	add
11	[BUG]  [BUGGY]    List  <  Properties>  requiredOptions  =  properties.properties();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  Properties>  requiredOptions  =  properties.properties();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    List  <  Properties>  requiredOptions  =  properties.properties();		non-compiled	[CE]  cannot  find  symbol	33	None	add
12	[BUG]  [BUGGY]    Properties  cmd  =  options.getOptions();  [CE]  incompatible  types  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  options.getOptions();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  options.getOptions();		non-compiled	[CE]  incompatible  types	33	None	add
13	[BUG]  [BUGGY]    Properties  cmd  =  properties.get(value);  [CE]  cannot  find  symbol  value  [FE]          ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.get(value);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  properties.get(value);		non-compiled	[CE]  cannot  find  symbol  value	33	None	add
14	[BUG]  [BUGGY]    Properties  cmd  =  properties.getOption(option);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure  [CONTEXT]  {  [BUGGY]    Properties  cmd  =  properties.getOption(option);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Properties  cmd  =  properties.getOption(option);		non-compiled	[CE]  cannot  find  symbol  option	33	None	add
15	[BUG]  [BUGGY]    List  <  String>  requiredOptions  =  properties.properties();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]    List  <  String>  requiredOptions  =  properties.properties();  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    List  <  String>  requiredOptions  =  properties.properties();		non-compiled	[CE]  cannot  find  symbol	33	None	add
16	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(option);  [CE]  cannot  find  symbol  option  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]    Option  cmd  =  options.getOption(option);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Option  cmd  =  options.getOption(option);		non-compiled	[CE]  cannot  find  symbol  option	33	None	add
17	[BUG]  [BUGGY]    Option  cmd  =  options.getOption(value);  [CE]  cannot  find  symbol  value  [FE]        ComparisonFailure  [CONTEXT]  {  [BUGGY]    Option  cmd  =  options.getOption(value);  [BUGGY]  if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	    Option  cmd  =  options.getOption(value);		non-compiled	[CE]  cannot  find  symbol  value	33	None	add
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.isEmpty())  {	if  (properties  ==  null)  {  	compilable	  [FE]  ComparisonFailure  	32	2	replace
19	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.isEmpty())  {	if  (properties  ==  null)  {  	compilable	  [FE]  ComparisonFailure  	32	2	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.size()  ==  0)  {	if  (properties  ==  null)  {  	compilable	  [FE]  ComparisonFailure  	32	2	replace
21	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  {  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.size()  ==  0)  {	if  (properties  ==  null)  {  	compilable	  [FE]  ComparisonFailure  	32	2	replace
