bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(option);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(option);	      Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(propertyName);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(propertyName);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(propertyName);	      Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(key);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(key);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(key);	      Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(cmd);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(cmd);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(cmd);	      Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.properties());  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.properties());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  new  ArrayList  <  String>(properties.properties());	      List    <    String>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  properties.propertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  properties.propertyNames();	      List    <    String>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  cmd.properties();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  cmd.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  cmd.properties();	      List    <    String>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(options);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  cmd  =  options.getOption(options);	      Option    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  cmd  =  options.getOption(opt);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  cmd  =  options.getOption(opt);	      Option    cmd    =    options.getOption(value);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  Properties  properties  =  getProperties(options);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  properties  =  getProperties(options);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(options);	      Properties    properties    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
11	[BUG]  [BUGGY]  Properties  properties  =  getProperties().values();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  properties  =  getProperties().values();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties().values();	      Properties    properties    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  Properties  properties  =  getOptions();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  properties  =  getOptions();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getOptions();	      Properties    properties    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  Properties  cmd  =  properties.getOption(value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getOption(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getOption(value);	      Properties    cmd    =    properties.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  Properties  cmd  =  properties.getOption(key);  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getOption(key);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getOption(key);	      Properties    cmd    =    properties.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
15	[BUG]  [BUGGY]  Properties  cmd  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  options.getOption(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOption(option);	      Properties    cmd    =    properties.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	compilable	  [FE]  NullPointerException  	19	2	replace
17	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	compilable	  [FE]  NullPointerException  	19	2	replace
18	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  [CE]  cannot  find  symbol  propertyNames  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	19	None	replace
19	[BUG]  [BUGGY]  if(value  ==  null  ||  properties.isEmpty())  {  [CE]  cannot  find  symbol  value  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(value  ==  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(value  ==  null  ||  properties.isEmpty())  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol  value	19	None	replace
20	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().isEmpty())  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames().isEmpty())  {	  if(properties!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
21	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
22	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [CE]  cannot  find  symbol  propertyNames  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.propertyNames().size()  ==  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	8	None	replace
23	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames().size()!=  0)  {	  if(properties    ==    null    ||    properties.propertyNames().size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
24	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
25	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties!=  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
26	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties  ==  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties  ==  null)  {  return;  }  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties  ==  null)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
27	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties!=  null)  {  return;  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties!=  null)  {  return;  }  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties!=  null)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
28	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties  ==  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties  ==  null  ||  properties.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties  ==  null  ||  properties.hasOption(option))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
29	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getPropertyNames();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  this.properties.getPropertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getPropertyNames();	      Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  Properties  cmd  =  cmd.getPropertyNames();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  cmd.getPropertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  cmd.getPropertyNames();	      Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.properties());  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.properties());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  new  ArrayList  <  Properties>(properties.properties());	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  cmd.properties();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  cmd.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  cmd.properties();	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  props.properties();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  props.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  props.properties();	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
34	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyCmd();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.propertyCmd();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyCmd();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
35	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyChildren();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.propertyChildren();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyChildren();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
36	[BUG]  [BUGGY]  Properties  cmd  =  properties.propertyConfig();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.propertyConfig();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.propertyConfig();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(option);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(option);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(properties);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(propertyName);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(propertyName);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(properties.values());	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
41	[BUG]  [BUGGY]  Properties  cmd  =  options.getOptions(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  options.getOptions(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOptions(option);	      Properties    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
42	[BUG]  [BUGGY]  Properties  cmd  =  option.getOptions();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  option.getOptions();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  option.getOptions();	      Properties    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(option);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  Option  options  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  options  =  options.getOption(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  options  =  options.getOption(value);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties!=  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  NullPointerException  	21	2	replace
46	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  NullPointerException  	21	2	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.size()  ==  1)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	21	2	replace
48	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.size()  ==  1)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	21	2	replace
49	[BUG]  [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  0)  {  [CE]  cannot  find  symbol  propertyNames  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null  ||  properties.size()  ==  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	21	None	replace
50	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getOptions();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  this.properties.getOptions();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getOptions();	      Properties    cmd    =    properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
51	[BUG]  [BUGGY]  Properties  cmd  =  properties.properties.getOptions();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.properties.getOptions();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.properties.getOptions();	      Properties    cmd    =    properties.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
52	[BUG]  [BUGGY]  Properties  cmd  =  this.properties.getProperties();  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  this.properties.getProperties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  this.properties.getProperties();	      Properties    cmd    =    properties.getProperties();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ");  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty( "cmd ");  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty( "cmd ");	      Properties    cmd    =    properties.getProperties();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty( "properties ");  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty( "properties ");  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty( "properties ");	      Properties    cmd    =    properties.getProperties();    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties  ==  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
56	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties!=  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties!=  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
57	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties  ==  null  ||  properties.size()  ==  1)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
58	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()!=  0)  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()!=  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties  ==  null  ||  properties.size()!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
59	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  Properties  properties  =  properties.get(properties.size()  -  1);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  Properties  properties  =  properties.get(properties.size()  -  1);  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    0)    {    Properties  properties  =  properties.get(properties.size()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
60	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  properties.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
61	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties!=  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(properties!=  null  ||  properties.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
62	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(value  ==  null  ||  properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(value  ==  null  ||  properties.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
63	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
64	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  properties.isEmpty())  {  throw  new  RuntimeException( " ");	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
65	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(value))  {  [CE]  cannot  find  symbol  value  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.hasOption(value))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.hasOption(value))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  value	9	None	replace
66	[BUG]  [BUGGY]  if(property  ==  null  ||  properties.hasOption(value))  {  [CE]  cannot  find  symbol  property  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(property  ==  null  ||  properties.hasOption(value))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(property  ==  null  ||  properties.hasOption(value))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  property	9	None	replace
67	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasOption(value))  {  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.hasOption(value))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.hasOption(value))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  value	9	None	replace
68	[BUG]  [BUGGY]  Properties  cmd  =  options.propertyNames();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  options.propertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.propertyNames();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
69	[BUG]  [BUGGY]  Properties  cmd  =  properties.properties();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.properties();	      Properties    cmd    =    properties.propertyNames();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
70	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  properties.values();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  properties.values();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  properties.values();	      List    <    String>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  options.properties();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  options.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  options.properties();	      List    <    String>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
72	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties!=  null  ||  properties.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties!=  null  ||  properties.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties!=  null  ||  properties.hasOption(option))  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
73	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties  ==  null  ||  properties.options!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties  ==  null  ||  properties.options!=  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties  ==  null  ||  properties.options!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
74	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(key);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(key);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(key);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
75	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  propertyNames.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  propertyNames.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  propertyNames.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
76	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(!properties.isEmpty())  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(!properties.isEmpty())  {	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
77	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.propertyNames!=  null)  {  [CE]  cannot  find  symbol  propertyNames  [FE]    NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.propertyNames!=  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.propertyNames!=  null)  {	  if(properties!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	7	None	replace
78	[BUG]  [BUGGY]  if(propertyNames  ==  null)  {  [CE]  cannot  find  symbol  propertyNames  [FE]      NullPointerException    [CONTEXT]    {    [BUGGY]  if(propertyNames  ==  null)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(propertyNames  ==  null)  {	  if(properties!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  propertyNames	7	None	replace
79	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  options.properties();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  options.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  options.properties();	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  properties.values();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  properties.values();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  properties.values();	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
81	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  properties.propertyNames();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  properties.propertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  properties.propertyNames();	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  Properties  properties  =  getProperties(properties);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  properties  =  getProperties(properties);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(properties);	      Properties    properties    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
83	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	21	2	replace
84	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()!=  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.size()!=  0)  {	  if(properties    ==    null    ||    properties.size()    ==    0)    {    	compilable	  [FE]  ComparisonFailure  	21	2	replace
85	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(opt);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(opt);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(opt);	      Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
86	[BUG]  [BUGGY]  Properties  cmd  =  options.getOptions(value);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  options.getOptions(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOptions(value);	      Properties    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  Option  option  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Option  option  =  options.getOption(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Option  option  =  options.getOption(value);	      Option    cmd    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
88	[BUG]  [BUGGY]  Properties  cmd  =  options.getOption(value);  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  options.getOption(value);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getOption(value);	      Properties    cmd    =    properties.getOption(option);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
89	[BUG]  [BUGGY]  Properties  cmd  =  properties.getCmd();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getCmd();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getCmd();	      Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
90	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(value  ==  null  ||  properties.size()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(value  ==  null  ||  properties.size()  ==  0)  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    0)    {    if(value  ==  null  ||  properties.size()  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
91	[BUG]  [BUGGY]  if(properties!=  null  ||  properties.hasOption(option))  {  [CE]  cannot  find  symbol  option  [FE]    NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null  ||  properties.hasOption(option))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=  null  ||  properties.hasOption(option))  {	  if(properties!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  option	7	None	replace
92	[BUG]  [BUGGY]  if(properties!=  null)  {  if(properties!=  null)  {  throw  new  RuntimeException( " ");  }  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    {    [BUGGY]  if(properties!=  null)  {  if(properties!=  null)  {  throw  new  RuntimeException( " ");  }  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties!=    null)    {    if(properties!=  null)  {  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
93	[BUG]  [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.getProperty(propertiesName);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.getProperty(propertiesName);	      Properties    cmd    =    properties.getProperty(value);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.equals(properties.values()))  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	19	2	replace
95	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.values()))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.equals(properties.values()))  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	19	2	replace
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	add	if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	19	2	replace
97	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.equals(properties.propertyNames()))  {	  if(properties    ==    null    ||    properties.isEmpty())    {    	compilable	  [FE]  ComparisonFailure  	19	2	replace
98	[BUG]  [BUGGY]  Properties  properties  =  getProperties(option);  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  properties  =  getProperties(option);  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  properties  =  getProperties(option);	      Properties    properties    =    getProperties();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
99	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.hasOption(key))  {  [CE]  cannot  find  symbol  key  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.hasOption(key))  {  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties  ==  null  ||  properties.hasOption(key))  {	  if(properties    ==    null    ||    properties.hasOption(option))    {    	non-compiled	[CE]  cannot  find  symbol  key	9	None	replace
100	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.isEmpty())  {  if(properties  ==  null  ||  properties.isEmpty())  {  return;  }  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.isEmpty())    {    if(properties  ==  null  ||  properties.isEmpty())  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	18	None	add
101	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  property.properties();  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  property.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  property.properties();	      List    <    String>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
102	[BUG]  [BUGGY]  List  <  String>  requiredOptions  =  list.properties();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  String>  requiredOptions  =  list.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  String>  requiredOptions  =  list.properties();	      List    <    String>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
103	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  _properties.properties();  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  _properties.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  _properties.properties();	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
104	[BUG]  [BUGGY]  List  <  Properties>  requiredOptions  =  list.properties();  [CE]  illegal  start  of  type  [FE]            ComparisonFailure    [CONTEXT]    {    [BUGGY]  List  <  Properties>  requiredOptions  =  list.properties();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	List  <  Properties>  requiredOptions  =  list.properties();	      List    <    Properties>    requiredOptions    =    properties.properties();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
105	[BUG]  [BUGGY]  Properties  cmd  =  options.getPropertyNames();  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  options.getPropertyNames();  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  options.getPropertyNames();	      Properties    cmd    =    properties.getPropertyNames();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    {    [BUGGY]  if(properties  ==  null  ||  properties.size()  ==  0)  {  if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }  [BUGGY]    {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	if(properties    ==    null    ||    properties.size()    ==    0)    {    if(properties  ==  null  ||  properties.size()  ==  1)  {  return;  }	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
107	[BUG]  [BUGGY]  Properties  cmd  =  properties.get(properties.values());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure    [CONTEXT]    {    [BUGGY]  Properties  cmd  =  properties.get(properties.values());  [BUGGY]    if  (properties  ==  null)  {  {  return;  }  for  (Enumeration  e  =  properties.propertyNames();  e.hasMoreElements();)  {  String  option  =  e.nextElement().toString();  if  (!cmd.hasOption(option))  {  [CLASS]  Parser  [METHOD]  processProperties  [RETURN_TYPE]  void  Properties  properties  [VARIABLES]  Options  options  opts  CommandLine  cmd  Enumeration  e  RuntimeException  exp  boolean  List  requiredOptions  tokenList  Option  opt  String  option  value  Properties  properties  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	238	239	2	replace	Properties  cmd  =  properties.get(properties.values());	      Properties    cmd    =    properties.get(value);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
