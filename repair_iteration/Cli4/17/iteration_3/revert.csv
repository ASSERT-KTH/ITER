projects/Cli4/src/java/org/apache/commons/cli/Parser.java240return;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyValue(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("")+"cannotaccessproperties:"+properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+value+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=cmd.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=cmd.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames().iterator().next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(),values);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames()+1;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("");ThrownewIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("");thrownewIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("");Throwables.thrownewIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("");Throwables.throwException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=cmd.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=this.properties.getProperties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty("cmd");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.requiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");ThrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");if(properties==null){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");Throwables.thrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");thrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(propertyName);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.values());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.keySet());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("");ThrownewIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("");Throwables.thrownewIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("");thrownewIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("");Throwables.throwException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=this.properties.getPropertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=cmd.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=cmd.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");ThrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");thrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");PropertyFailure{thrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");Throwables.thrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=cmd.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=cmd.getOption(option);if(cmd.hasOption(value)){return;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=cmd.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("");ThrownewRuntimeException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("");thrownewRuntimeException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("");Throwables.thrownewRuntimeException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationcmd:properties.propertyNames()){requiredOptions.add(cmd);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+value+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+properties.propertyName+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+option+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+option+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(propertyNames==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(propertyMap==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}Property(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=props.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=_properties.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("")+"cannotaccessproperties:"+properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240[Delete]
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240tries.add(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("".equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("".equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(propertyName);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(key);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(propertyValue);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyValue(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyValue(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyValue(propertyName);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.propertyRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.propertyRequires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=cmd.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Optioncmd=options.getOption(option);if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=cmd.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyValue(key);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyName(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyFactory();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Optioncmd=options.getOption(option);if(!cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("")+",cannotaccessproperties:"+properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("")+"cannotaccessproperties:"+properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+property+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");if(properties==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.requires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");if(properties==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleOption(option,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");if(properties==null.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(cmd.hasOption(option));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(cmd==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(cmd.hasOption(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("");if(properties==null){thrownewRuntimeException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(propertiesName);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties.values());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumeratione=properties.propertyNames();e.hasMoreElements();){Propertyvalue=e.nextElement().toString();if(value.equals(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=cmd.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumeratione=properties.propertyNames();e.hasMoreElements();){Propertyvalue=e.nextElement().toString();if(value.equals(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240tries.add(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");if(properties==null){thrownewRuntimeException("Propertiesarenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("");newIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240parent==null||properties.properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Expectedpropertiestobenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=property.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+property+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyValue(propertiesName);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("");if(properties==null){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyValues();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().thrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=options.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=properties.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=values.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=property.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(name);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(key);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyKeys();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyCase();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyName(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().thrownewRuntimeException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){thrownewRuntimeException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException(""));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Property'"+properties.getName()+"'mustbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull.");ThrownewIllegalArgumentException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull.");Throwables.thrownewIllegalArgumentException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull.");thrownewIllegalArgumentException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull.");IllegalArgumentException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();if(c.hasMoreElements()){Stringvalue=c.nextElement().toString();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull..");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().interrupt();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().setContextClassLoader(this);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null||properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240If(properties==null||properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null||properties.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewIllegalStateException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyvalue=properties.propertyNames().toString();if(value.equals(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyvalue=e.nextElement().toString();if(value.equals(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyvalue=e.nextElement().toString();if(value.equals(value)){return;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(e.hasMoreElements());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.keySet(),value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.keySet(),values);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.keySet(),props);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=property.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=properties.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=properties.propertyNames().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=properties.getOption(option);if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiescannotbenull.");ThrownewIllegalArgumentException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiescannotbenull.");Throwables.thrownewIllegalArgumentException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiescannotbenull.");thrownewIllegalArgumentException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiescannotbenull.");IllegalArgumentException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throw(newRuntimeException("Propertiesarenull."));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throw(newRuntimeException("Propertiesarenull."),e);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(propertyNames==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(propertyNames!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(cmd.hasValue(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(option.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertycannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiescannotbenull!");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiescannotbenull".");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=props.propertyRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=_properties.propertyRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=property.propertyRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(cmd.hasOption(opt));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(cmd.hasOption(options));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(properties.hasOption(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewRuntimeException("Propertiescannotbenull.");}if(properties==null){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewRuntimeException("Propertiescannotbenull.");}if(properties!=null){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewRuntimeException("Propertiescannotbenull.");}if(properties==null){thrownewRuntimeException("Propertiescannotbenull..");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties.values(),values);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties.values(),value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties.keySet());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getPropertyValue(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewIllegalArgumentException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=values.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getOption(option);if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.propertyNames().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(option);if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(),parameters);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(),value.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(),options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=_properties.propertyValues();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=property.propertyValues();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.get(properties.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMissingProperty(property,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMissingProperty(property);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull.".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull").equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.properties.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull".equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull!");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().thrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){thrownewRuntimeException("Propertiesarenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.warning("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException(""));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesmustbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throwException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throwException(",");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(cmd.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(cmd.name);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("")+",cannotaccessproperties:"+properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Failedtoaccessproperties:"+properties.propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240newIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240newIllegalStateException("".equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240newIllegalStateException("".equals(property.getValue()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertycannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewIllegalStateException("Propertiesmustnotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}if(properties==null){return;}if(properties==null||properties.size()==0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}if(properties!=null){return;}if(properties==null||properties.size()==0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}if(properties==null){return;}if(properties!=null||properties.size()==0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}if(properties==null||properties.size()==0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}if(properties==null){return;}if(properties==null||properties.size()!=0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(cmd==null||!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(value==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=option.getOption(cmd);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=values.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=property.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=properties.propertyNames().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=properties.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=props.propertyRequires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=_properties.propertyRequires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=property.propertyRequires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){thrownewIllegalStateException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("");thrownewIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+property+"'.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+property+",'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+value+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+option+"'.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+option+",'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+option+"'",value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null."){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throwAsIgnoredException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiescannotbenull.");if(properties!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiescannotbenull.");if(properties==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("".equals(propertyNames));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=values().properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.propertyNames().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(option);if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(!cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyName(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyName(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyName(name);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240properties.add(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.get(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.clone();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.get(0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Expectedpropertiestobenull.");ThrownewRuntimeException("Expectedpropertiestobenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Expectedpropertiestobenull.");thrownewRuntimeException("Expectedpropertiestobenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240tries==null){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().setContext(newRuntimeException("Propertiescannotbenull."));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties==null||properties.properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyprops==null||properties.properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240parent==null||properties.properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getOption(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=cmd.getOption(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(propertyNames);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240owner.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Helfer.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240professionals.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=properties.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=property.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=this.cmd.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("".equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+value+"'.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+value+",'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+value+"'",requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null||properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesarenull!");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("".equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null||value.length()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null||option.equals(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=this.properties.getPropertyValue(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=property.getPropertyValue(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(key);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(propertyValue);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Property(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240||(properties!=null&&properties.propertyNames().size()>0)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240||(properties!=null&&properties.getPropertyNames().size()>0)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240||(properties==null&&properties.getPropertyNames().size()>0)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240artisans.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240PropertyHandler.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240owner.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240professionals.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty("cmd",value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty("cmd",null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty("properties");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240properties.add(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.get(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=cmd.getProperties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ListrequiredOptions=properties.get(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("").equals(properties.propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException(""+properties.propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("").equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewIllegalArgumentException("Propertiesmustnotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240For(Enumerationcmd:properties.propertyNames()){requiredOptions.add(cmd);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240For(Enumerationcmd:properties.propertyNames()){requiredOptions.remove(cmd);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240For(Enumerationcmd:properties.propertyNames()){requiredOptions.add(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240For(Enumerationcmd:properties.propertyNames()){neededOptions.add(cmd);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiescannotbenull..");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(properties==null){return;}if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(properties!=null){return;}if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(properties!=null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(propertyNames==null){return;}if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(properties==null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().setContextClassIndex(properties.values().iterator().next());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().setContextClassIndex(properties.getClass().getName());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().setContextClassIndex(properties.values().iterator().next().toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.getPropertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.getProperties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyprop=properties.property(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyprop=properties.getProperty(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}if(properties==null||properties.isEmpty()){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}if(properties!=null){return;}if(properties==null||properties.isEmpty()){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}if(properties==null){return;}if(properties!=null||properties.isEmpty()){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}if(properties!=null||properties.isEmpty()){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiesmustnotbenull.");ThrownewIllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiesmustnotbenull.");thrownewIllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiesmustnotbenull.");Throwables.thrownewIllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiesmustnotbenull.");IllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Optioncmd=options.getOption(option);if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Optioncmd=options.getOption(option);if(!cmd.hasOption(value)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240If(properties!=null){return;}if(propertyNames==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyvalue=e.nextElement().toString();if(value.equals(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyvalue=e.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyvalue=e.nextElement().toString();if(value.equals(value)&&!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("".equals(propertyNames));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException(""));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.values(),value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.values(),values);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(value,properties.values());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames().iterator(),properties.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames().iterator(),property.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.properties.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiescannotbenull.");ThrownewIllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiescannotbenull.");IllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiescannotbenull.");Throwables.thrownewIllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiescannotbenull.");thrownewIllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames()[0];
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames()/1;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.values().iterator().next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+properties.propertyName+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.warning("Cmdconstructordoesnotsupportproperty'"+properties.propertyName+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+properties.propertyName+"'.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties,values);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=props.requires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=this.properties.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.propertyChanges();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ListrequiredOptions=newArrayList(properties.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ListrequiredOptions=newArrayList(properties.values());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString();if(cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(options.hasOption(option));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(properties.hasOption(option));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=_properties.getPropertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=this.properties.getPropertyFactory();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull."+"propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationcmd=properties.propertyNames();cmd.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+property+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException(""+value.equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException(""+value.equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240PropertyFailure{thrownewRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Expectedpropertiestobenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Expectedpropertiestobenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=property.getPropertyFactory();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull.");if(properties!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull.");if(properties!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(properties==null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(properties==null){return;}if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(properties!=null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(propertyNames==null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString();if(!cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(option!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=c.nextElement().toString
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(value,option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");ThrownewIllegalArgumentException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");Throwables.thrownewIllegalArgumentException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");IllegalArgumentException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");Throwables.warning("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");Throwables.log("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=props.requiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Failedtoaccessproperties:"+properties.propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=options.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=properties.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=properties.get(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=properties.propertyNames();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=_properties.getProperties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleOption(value,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleOption(cmd,option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleOption(option,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.propertyCmd();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.propertyChildren();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.propertyNames(),null;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMoreElement(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMoreElements(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240newIllegalStateException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Expectedproperties:"+properties.propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240newIllegalStateException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240newIllegalStateException("".equalsIgnoreCase(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwablecause=newRuntimeException("Propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(value==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>e=cmd.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=cmd.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=cmd.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiescannotbenull.");if(properties==null){thrownewIllegalStateException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null||value.equals(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}if(propertyNames==null){return;}if(properties==null||properties.size()==0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.size()==0){return;}if(properties==null){return;}if(properties==null||properties.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");thrownewIllegalArgumentException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(propertyNames,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();if(!cmd.hasOpti
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalStateException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalStateException("".equalsIgnoreCase(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(value==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(cmd!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Stringvalue=properties.getValue(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Stringvalue=properties.getStringValue(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getOption(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull.".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull."+properties.values());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOpti
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesoption=options.getOption(option);if(option.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesoption=cmd.getOption(option);if(option.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleOption(opt,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenull."+"propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiesarenotsupported.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.get(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Parent<null||properties.properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiescannotbenull.",exp);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull".");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull!");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Couldnotsupportproperty'"+value+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+value+"'onthesameline.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(cmd.hasOption(properties));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties._properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240homeowners.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240NullPointerException.for(Enumerationcmd:properties.propertyNames()){requiredOptions.add(cmd);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240safeMultiply(properties.values()){for(Enumerationcmd:properties.propertyNames()){requiredOptions.add(cmd);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240NullPointerException.for(Enumeratione:properties.propertyNames()){requiredOptions.add(e);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Propertydoesnotsupportproperty'"+property+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(cmd.hasArg(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(cmd.hasProperty(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>e=cmd.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=options.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiescannotbenull.Ifnotastatement,");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throwException("".equals(properties.propertyNames()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throwException("".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Expectedpropertiestobenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Expectedpropertiestobenull."+"propertiestobenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getOption(option);if(cmd.hasValue(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwablethrowable=newRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=options.getOption(option);if(cmd.hasValue(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240newIllegalStateException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=property.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty("cmd",values);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.getOption(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=properties.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.getOptions(option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(value!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(c.hasMoreElements()){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.propertiesRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull.");if(properties==null){thrownewIllegalArgumentException("Propertiesarenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=options.propertyRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumerationc=properties.propertyNames();c.hasMoreElements();){Stringvalue=c.nextElement().toString();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyChildren();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("".equals(property));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("".equals(properties));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoptions=options.getOption(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240experts.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=values.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=cmd.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240tries.add(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null||properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(propertyNames==null){return;}if(properties==null||properties.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewRuntimeException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=e.nextElement().toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=e.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}if(properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=properties.keySet();if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=values.getOption(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(value,properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(value==null){return;}if(properties==null||properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){return;}if(properties==null||properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)!=return
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)!=return
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt!=null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)!=
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(opt==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)!=
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMoreElements(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=e.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=options.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=e.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=e.nextElement().toString();if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties,properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties,option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesarenull".equals(value));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+properties.propertyName+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwablecause=newIllegalArgumentException("Cmdconstructordoesnotsupportproperty'"+properties.propertyName+"'");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("",requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getOption(option);if(cmd.hasOption(value)){return;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=options.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(key,properties.keySet());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=properties.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().setContextClassLoader(getCurrentThreadContext());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Thread.currentThread().setContextClassLoader(null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewRuntimeException("Propertiescannotbenull.");}if(properties{null){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(),values.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Property'"+properties.getName()+"'isnull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull."+"propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=option.getOption(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrowablethrownewRuntimeException("Propertiescannotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=this.properties.propertyRequires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesarenull".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException(""+property.propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}elseif(properties.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiescannotbenull.");if(properties==null){thrownewIllegalArgumentException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Thepropertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=_properties.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Propertiescannotbenon-null.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties.toArray(newProperties[properties.size()]));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240foundElements(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Optionoption=options.getOption(option);if(!option.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Optioncmd=options.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertiescmd=cmd.getOption(option);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Optionoption=options.getOption(option);if(!opt.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMissingName(e,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}elseif(properties.hasOption(option)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null||properties.size()==0){thrownewRuntimeException("Propertiescannotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException("Propertiesmustnotbenull.");if(properties==null){thrownewIllegalArgumentException("Propertiesmustnotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwablethrowable=newIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){thrownewRuntimeException("Propertiesarenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Thepropertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null||properties.isEmpty()){return;}if(properties==null){return;}if(properties==null||properties.isEmpty()){continue;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=this.properties.properties();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.propertiesRequired();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optioncmd=options.getOption(option);if(!cmd.hasOption(value)){return;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Parent<?>parent==null||properties.properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Parent{null||properties.properties==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties==null){return;}if(properties==null||properties.size()==0){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalStateException("".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=option.getOption(value);if(cmd.hasOption(value)){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("")
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<Property>cmd=properties.properties.get(option);if(cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(propertyMap==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.propertyName);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("")
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewRuntimeException("Expectedproperties:");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>requiredOptions=properties.propertiesRequires();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(option!=null&&option.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(option!=null&&option.hasValue(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Optionoption=options.getOption(option);if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewIllegalArgumentException("Propertiesmustnotbenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(value==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option)
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(value==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(cmd.hasOption(option
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("")
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=options.getOption(option);if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null||options.getOption(option)!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null||properties.propertyNames==null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalStateException("Propertiesmustnotbenull.");if(properties==null){thrownewIllegalStateException("Propertiesmustnotbenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options.getOption(option)!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(options!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames().iterator(),options.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiesproperties=cmd.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewIllegalArgumentException(""+properties.propertyNames());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(cmd.hasOption(option)||!cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(cmd==null||value.length()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(cmd==null||cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwablecause=newIllegalArgumentException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240>>[Delete]
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240==[Delete]
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240>=[Delete]
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyreturn=cmd.getOption(option);if(!cmd.hasOption(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Helfer.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Builder.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240dépannage.handleFailure(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(e.hasNext());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Context.checkState(e.nextElement()!=null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.get(properties.propertyName);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getPropertyFactory(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<?>e=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ListrequiredOptions=properties.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throwException("".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.throwException("",Arrays.asList(properties));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(value,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesarenotnull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesarenotsupported.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalArgumentException("Propertiesarenull."+"propertiesarenull.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=this.properties.propertyValues();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=values.propertyValues();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertycmd=options.nextElement().toString();if(cmd.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyoption=cmd.nextElement().toString();if(option.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("")
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyvalue=e.nextElement().toString();if(!value.equals(value)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMissingName(properties,value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleMissingProperty(value,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>c=properties.propertyValues();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(option==null){for(Enumerationc=properties.propertyNames();c.hasMoreElements();){Propertycmd=cmd.nextElement().toString();if(!cmd.hasOption(option
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>e=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleOption(properties,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=property.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyName(key);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240{[Delete]
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=property.getPropertyValue(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Expectedpropertiestobenull.");if(properties==null){thrownewRuntimeException("Expectedpropertiestobenull.");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(properties);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<String>cmd=properties.propertyNames(),value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Propertiesarenull",property.values());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240thrownewRuntimeException("Theproperty'"+properties.getName()+"'doesnotexist.");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwablecause=newIllegalStateException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertiescmd=properties.getProperty(properties.keySet(),property);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Propertyoption=cmd.nextElement().toString();if(!option.hasOption(option)){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240aughtExceptionHandler.handleFailure(properties,property);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Iterator<String>it=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Enumeration<?>c=properties.propertyNames();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240dépannageExceptionHandler.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Methods.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240Throwables.thrownewIllegalStateException("".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull".equals(properties.values()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240ThrownewRuntimeException("Propertiesarenull".equals(properties.get(0)));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(properties==null){return;}elseif(properties!=null){return;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java240if(properties==null){return;}if(properties!=null){return;}if(property==null){return;}if(properties!=null){return;}
