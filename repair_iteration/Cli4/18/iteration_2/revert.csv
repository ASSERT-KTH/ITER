projects/Cli4/src/java/org/apache/commons/cli/Parser.java295
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newArrayList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Collections.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()<1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(tokenList.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){if(requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){If(requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){if(requiredOptions.size()>=0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.newArrayList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){if(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){If(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){if(requiredOptions.size()>2){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(requiredOptions,buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=opts.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=options.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iteratoriter=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newLinkedList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newLinkedList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<RequiredOption>requiredOptions=newArrayList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<RequiredOption>requiredOptions=newHashSet<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){if(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){if(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){If(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){if(requiredOptions>=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){If(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buffer);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||getOptions().size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(length());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1||buff.charAt(requiredOptions.size()-1)!='/'){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(RequiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Collections.EMPTY_LIST;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=Collections.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=Collections.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=optionList.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size()*1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()!=0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>(tokenList.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()==0){if(requiredOptions==null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()==0){If(requiredOptions==null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()==0){if(requiredOptions!=null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()==0){if(requiredOptions==null||requiredOptions.size()!=0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buffered,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buffer,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(requiredOptions,buff,tokenList);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<String>requiredOptions=newHashSet<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=newArrayList<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>1){if(requiredOptions!=null||requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>1){if(requiredOptions==null||requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>1){If(requiredOptions!=null||requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>1){if(requiredOptions>=null||requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<RequiredOption>requiredOptions=newLinkedHashSet<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(this.options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295If(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<Option>requiredOptions=opts.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(options.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<RequiredOption>requiredOptions=newLinkedHashSet<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<RequiredOption>requiredOptions=newTreeSet<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=opts.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=Lists.newArrayList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.newLinkedList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.newArrayList(0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()>0){if(requiredOptions!=null&&requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()>0){if(requiredOptions==null&&requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()>0){If(requiredOptions!=null&&requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()>0){if(requiredOptions>=null&&requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==1){if(requiredOptions.size()==1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==1){If(requiredOptions.size()==1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==1){if(requiredOptions.size()>=1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=Lists.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Ilerator<String>requiredOptions=options.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.<String>requiredOptions=newArrayList<String>(0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.<String>requiredOptions=newArrayList<String>(1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=optionList.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<RequiredOption>requiredOptions=newHashSet<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newLinkedList<RequiredOption>(requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null&&requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()<1){if(requiredOptions.size()<1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()<1){If(requiredOptions.size()<1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()<1){if(requiredOptions.size()<2){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(opts,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(options,buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null&&requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=cmd.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=this.options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=opts.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IleratorrequiredOptions=options.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ListrequiredOptions=options.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=option.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(RequiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(RequiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(length());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=newArrayList<String>(0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()==0){if(requiredOptions!=null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()==0){if(requiredOptions==null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()==0){If(requiredOptions!=null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()==0){if(requiredOptions>=null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null||requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){If(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null||requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>0){If(requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295If(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295If(requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size()-2);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buffer,buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1||requiredOptions.charAt(requiredOptions.size()-1)!='/'){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1||neededOptions.charAt(requiredOptions.size()-1)!='/'){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1||requiredOptions.charAt(requiredOptions.size()-1)=='/'){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<String>requiredOptions=newHashSet<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(length()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(length()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(length()*2);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=cmd.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=opts.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295If(requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295If(requiredOptions.size()==1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iteratoriter=opts.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iteratoriter=this.options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()<2){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=Collections.EMPTY_LIST;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=Lists.newArrayList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(options!=null){Collections.sort(options);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(opts);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(options!=null){Collections.sort(options);}else{defaultOptions.add(options);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||getOptions().size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||getOptions().length()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||getOptions().length()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=optionList.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<Option>requiredOptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IleratorrequiredOptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(options!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(options==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Ilerator<String>requiredOptions=options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(!requiredOptions.isEmpty()){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(requiredOptions.length());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(options.length());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,requirementOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=newArrayList<String>(8);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||getOptions().length==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&getOptions().size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.newArrayList(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<String>requiredOptions=newArrayList<String>(size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){If(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Ilerator<String>requiredOptions=options.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||buff.length()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null||requiresOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null||needs.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,newOptions());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>1){if(requiredOptions!=null||requiredOptions.size()>2){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buffer,newComparable<String>());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buffer,newComparable<Object>());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()!=1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>(requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==1){if(requiredOptions.size()==2){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<String>requiredOptions=newHashSet<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()<1){if(requiredOptions.size()>=1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<String>requiredOptions=newArrayList<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1||buf.charAt(requiredOptions.size()-1)!='/'){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295If(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(8);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(options.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IleratorrequiredOptions=options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(options.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iteratoriter=options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Arrays.asList(requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.<String>requiredOptions=newArrayList<String>(8);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Collections.binarySearch(buff,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,neededOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>=1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.opts();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=this.options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=Collections.EMPTY_LIST;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.options().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(RequiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=this.options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=this.opts.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,newComparable<Object>());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null||"".equals(requiredOptions.get(0))){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null||"".equals(requiredOptions.toString())){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){if(requiredOptions==null||"".equals(requiredOptions.size())){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=this.opts.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=options.opts().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=newArrayList<String>(size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||buff.length()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=Collections.synchronizedList(this);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()==0){if(requiredOptions==null||neededOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.newArrayListWithCapacity(size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||getOptions().size()>0){
