projects/Cli4/src/java/org/apache/commons/cli/Parser.java295
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newArrayList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Collections.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=options.values();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()<1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(tokenList.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>(tokenList.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){if(requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){If(requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==0){if(requiredOptions.size()>=0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.newArrayList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Lists.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){if(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){If(requiredOptions.size()>1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1){if(requiredOptions.size()>2){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(requiredOptions,buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=opts.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=options.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iteratoriter=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions==null||requiredOptions.size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()==1){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=opts.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newLinkedList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newLinkedList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<RequiredOption>requiredOptions=newLinkedList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<RequiredOption>requiredOptions=newArrayList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Set<RequiredOption>requiredOptions=newHashSet<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){if(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){if(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){If(requiredOptions!=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){if(requiredOptions>=null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null){If(requiredOptions==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buffer);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.keySet().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null||getOptions().size()==0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(length());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295IteratorrequiredOptions=options.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=option.values().iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=newArrayList<String>(size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions.size()>1||buff.charAt(requiredOptions.size()-1)!='/'){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<RequiredOption>requiredOptions=newArrayList<RequiredOption>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collections.sort(buff,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=newArrayList<String>(RequiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295if(requiredOptions!=null&&requiredOptions.size()>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295List<String>requiredOptions=Collections.EMPTY_LIST;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295ArrayList<String>requiredOptions=Collections.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=Collections.emptyList();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Collection<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java295Iterator<String>requiredOptions=optionList.keySet().iterator();
