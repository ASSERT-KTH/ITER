projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=requiredOptions.iterator();while(iter.hasNext()){buff.append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=requiredOptions.iterator();while(iter.hasNext()){buff.append(iter.next());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=requiredOptions.iterator();while(iter.hasNext()){buff.append(iter.next()).append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),"");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(opts!=null){for(Iteratoriter=options.iterator();iter.hasNext();){buff.append(options.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(opts!=null){for(Iteratoriter=opts.iterator();iter.hasNext();){buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(opts!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(opts!=null){for(Iteratoriter=opts.iterator();iter.hasNext();){buff.append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(opts!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(buff.toString());buff.append("mv.required.options").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(buff.toString());if(options!=null){buff.append("mv.required.options").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(buff.toString());buff.append(".required.options").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(buffer.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options.").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(cmd.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307For(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(cmd.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options".toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));thrownewMissingOptionException(String.valueOf(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));Throwables.showError(String.valueOf(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));StringBufferbuff=newStringBuffer();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));StringBufferbuff=newStringBuffer(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));Throwables.checkArgument(buff.length()>0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Throwables.thrownewMissingOptionException(buff.toString(),"");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()),"");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iteratoriter=requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<Option>iter=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<Option>iter=requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307For(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(options.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307For(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(options.next());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307For(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(opts.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}if(buff.length()>0){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}if(buff.length()>0){thrownewMissingOptionException(Buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}If(buff.length()>0){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(requiredOptions.get(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(requiredOptions.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buffer.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Throwables.thrownewMissingOptionException(buff.toString(),buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),error);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),buff,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(iter.next());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(cmd.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());buff.append("<").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());buff.append('<").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());buff.append(",<").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());buff.append(".<").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());buff.append("n").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());if(requiredOptions!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("n").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());if(requiredOptions!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("n").append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());if(requiredOptions!=null){buff.append("n").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(md,buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException("Missingoption:"+buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Throwables.thrownewMissingOptionException(buff,buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException("Missingoptions:"+buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());buff.append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff.length()>0){buff.append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff!=null){buff.append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff.length()==0){buff.append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());.append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){thrownewMissingOptionException(buff.toString());}if(buff!=null){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){thrownewMissingOptionException(buff.toString());}if(buff==null){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){thrownewMissingOptionException(buff.toString());}if(buff!=null){thrownewMissingOptionException(Buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){thrownewMissingOptionException(buff.toString());}if(buff>=null){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307bucket.append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundOptions(buff,requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundOptions(buff,requiredOptions.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundOptions(buff,requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append(">");buff.append("<").append(buff.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append(">");if(requiredOptions!=null){buff.append("<").append(buff.toString()).append(">");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(requiredOptions.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buffer.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(cmd.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307AllOptions.add(buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iteratoropts=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307AllOptions(opts);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(requiredOptions.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buffer.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=options.iterator();while(iter.hasNext()){buff.append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=opts.iterator();while(iter.hasNext()){buff.append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",n").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=options.iterator();while(iter.hasNext()){buff.append(iter.next());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=this.requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(buff.toString());buff.append(",").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(buff.toString());buff.append(",").append(cmd.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(String.valueOf(buff.toString()));}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()),buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Throwables.thrownewMissingOptionException(String.valueOf(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()+1));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(":").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("msg.bad.required.options.null").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=options.iterator();while(iter.hasNext()){buff.append(iter.next()).append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307bucket.append(buff.toString()).append('n');
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307bucket.append(buff.toString()).append("n");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(options,buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,options.toString(),requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,options.toString(),cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=opts.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iteratoroptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307IllegalStateException.println(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Optionoptions=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());if(requiredOptions!=null){buff.append("<").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());buff.append(".append("<").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("[").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<Option>opts=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iteratoriter=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(buffer.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("</").append(buff.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307IllegalArgumentException.println(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(requiredOptions!=null){Iterator<String>iter=requiredOptions.iterator();while(iter.hasNext()){buff.append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){for(Iterator<String>iter=requiredOptions.iterator();iter.hasNext();){buff.append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundOptions=buff.toString();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundOptions.add(buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundOptions=false;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307AllOptions(buff,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}if(buff.length()>0){ThrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}Iterator<String>iter=requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}if(options.size()>0){thrownewMissingOptionException(options.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=opts.iterator();while(iter.hasNext()){buff.append(iter.next());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),iter);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff!=null){buff.append('n');}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff!=null){buff.append("null");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff!=null){buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,option.toString(),"");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),options,"");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.length()>0){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.length(){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.length()>0){thrownewMissingOptionException(buffer.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.length()>0){thrownewMissingOptionException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));if(requiredOptions!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));if(requiredOptions!=null){for(Iterator<String>iter=requiredOptions.iterator();iter.hasNext();){buff.append(iter.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));if(requiredOptions!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));if(requiredOptions!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append('n');}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));if(requiredOptions!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("n").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(requiredOptions!=null){Iterator<String>iter=requiredOptions.iterator();while(iter.hasNext()){buff.append(iter.next()).append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("required.options").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.addoptions").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307IllegalStateException.println(buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,options.toString(),options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(buff.toString());buff.append(",n").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){thrownewMissingOptionException(buff.toString());}If(buff!=null){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());if(requiredOptions!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("null").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());if(requiredOptions!=null){buff.append("null").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append(">");buff.append("<").append(buff.toString()).append('>');
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){thrownewMissingOptionException(String.valueOf(buff.toString()));}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()+")");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()+'n'));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(buff.toString());if(requiredOptions!=null){buff.append("mv.required.options").append(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff!=null){for(Iterator<String>iter=requiredOptions.iterator();iter.hasNext();){buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(msg,buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,null,buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,requiredOptions.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString());buff.append(".append(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append('>');
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("msg.required.toString").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff!=null){buff.append(buff.toString());}else{buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(buff.toString());if(buff!=null){buff.append(buff.toString());}else{buff.append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());buff.append(",n").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());buff.append('n').append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("n").append(buff.toString());buff.append("n=").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307if(buff.length()>0){thrownewMissingOptionException(buff.toString());}if(buff.length()>1){thrownewMissingOptionException(buff.toString());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,options.toString(),buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(msg,buff,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(md,buff,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buffer,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),""));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,str.toString(),"");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307[Delete]
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307aughtExceptionHandler.handleMissingException("");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));ThrownewMissingOptionException(String.valueOf(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));if(buff==null){thrownewMissingOptionException(String.valueOf(buff.toString()));}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));if(buff!=null){thrownewMissingOptionException(String.valueOf(buff.toString()));}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()));newMissingOptionException(String.valueOf(buff.toString()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307While(buff!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("null");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307While(buff!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("no");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307While(buff!=null){for(Iteratoriter=neededOptions.iterator();iter.hasNext();){buff.append("null");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append(">");buff.append("<").append(buff.toString()).append('>");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append(">");buff.append('<").append(buff.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append('n');
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,str.toString(),buff);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff.toString(),options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,str.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,path,buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(buff,path.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(mv.toString()).append(">");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundError(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundErrors(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307foundError(buff.toString(),null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307While(buff!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append(",");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iteratoriter=requiredOptions.iterator();if(opts!=null){for(Iteratoriter=options.iterator();iter.hasNext();){buff.append(options.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iteratoriter=requiredOptions.iterator();while(iter.hasNext()){buff.append(options.next());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iteratoriter=requiredOptions.iterator();while(iter.hasNext()){buff.append(options.next());}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307While(buff!=null){for(Iteratoriter=requiredOptions.iterator();iter.hasNext();){buff.append("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",").append(buff.toString());buff.append(',').append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("mv.required.options").append(buff.toString());buff.append(",mv.required.options").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append(",expected:").append(buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307thrownewMissingOptionException(String.valueOf(buff.toString()),"Unexpectedexception:"+buff.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307Iterator<String>iter=buff.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java307buff.append("<").append(buff.toString()).append(".>");
