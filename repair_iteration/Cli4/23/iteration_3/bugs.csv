bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  requiredOptions.toString(), "   ");  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  requiredOptions.toString(), "   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  requiredOptions.toString(), "   ");	  throw    new    MissingOptionException(buff,    str.toString(),   "   ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	225	None	replace
2	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  iter.toString(), "   ");  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  iter.toString(), "   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  iter.toString(), "   ");	  throw    new    MissingOptionException(buff,    str.toString(),   "   ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	225	None	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( "mv.required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( "mv.required.options.   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
4	[BUG]  [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( "mv.required.options.   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( "mv.required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( "mv.required.options.   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
5	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options.  fxmv.required.options.    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ",mv.required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( ",mv.required.options.   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options.  fxmv.required.options.    	8	2	add
6	[BUG]  [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ",mv.required.options.   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options.  fxmv.required.options.    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ",mv.required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( ",mv.required.options.   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options.  fxmv.required.options.    	8	2	add
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ".required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( ".required.options.   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
8	[BUG]  [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ".required.options.   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ".required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( ".required.options.   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( "mv.required.options.. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( "mv.required.options.. ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
10	[BUG]  [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( "mv.required.options.. ").append(buff.toString());  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( "mv.required.options.. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( "mv.required.options.. ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
11	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    fxn      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   ",n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn      fxn        	212	2	add
12	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    fxn      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   ",n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn      fxn        	212	2	add
13	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    fxn      [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   ",n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn      fxn        	212	2	add
14	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    fxn      [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   ",n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn      fxn        	212	2	add
15	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    fxn      [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( ",n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   ",n       ").append(buff.toString());    buff.append( ",n   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn      fxn        	212	2	add
16	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( ",n   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    fxn      [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   ",n     ").append(buff.toString());  buff.append( ",n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   ",n       ").append(buff.toString());    buff.append( ",n   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn      fxn        	212	2	add
17	[BUG]  [BUGGY]  For(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ",n ");  }  [CE]  [FE]              AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  For(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ",n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	For(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ",n ");  }	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  	150	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",null ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   ",n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	213	2	replace
19	[BUG]  [BUGGY]  buff.append( ",null ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",null ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   ",n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	213	2	replace
20	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  message);  [CE]  cannot  find  symbol  message  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  message);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  message);	  throw    new    MissingOptionException(buff.toString(),    error);    	non-compiled	[CE]  cannot  find  symbol  message	40	None	replace
21	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  error);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  error);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  error);	  throw    new    MissingOptionException(buff.toString(),    error);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
22	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  this.options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  this.options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  this.options);	  throw    new    MissingOptionException(buff.toString(),    error);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	40	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( "mv.required.options   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "mv.required.options   ");    buff.append( "mv.required.options   ");	  	compilable	  [FE]  ComparisonFailure  	44	2	add
24	[BUG]  [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( "mv.required.options   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( "mv.required.options   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "mv.required.options   ");    buff.append( "mv.required.options   ");	  	compilable	  [FE]  ComparisonFailure  	44	2	add
25	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( ",mv.required.options   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "mv.required.options   ");    buff.append( ",mv.required.options   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    	44	2	add
26	[BUG]  [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( ",mv.required.options   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( ",mv.required.options   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "mv.required.options   ");    buff.append( ",mv.required.options   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    	44	2	add
27	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	160	2	add
28	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	160	2	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	160	2	add
30	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( "n ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	160	2	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('  ');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append('  ');	  	compilable	  [FE]  ComparisonFailure  	160	2	add
32	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('  ');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('  ');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append('  ');	  	compilable	  [FE]  ComparisonFailure  	160	2	add
33	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	160	2	add
34	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( "mv.required.options ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	160	2	add
35	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	57	2	add
36	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	57	2	add
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	57	2	add
38	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	57	2	add
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	57	2	add
40	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	57	2	add
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	57	2	add
42	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	57	2	add
43	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
44	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
45	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(options!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
46	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ": ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
47	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(options!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(options!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
49	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	214	2	add
51	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	214	2	add
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
53	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "n   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	214	2	add
55	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append('n').append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	214	2	add
56	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",  expected:   ").append(buff.toString());  buff.append( ",  expected:   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ",    expected:   ").append(buff.toString());    buff.append( ",  expected:   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	257	2	add
57	[BUG]  [BUGGY]  buff.append(   ",  expected:   ").append(buff.toString());  buff.append( ",  expected:   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",  expected:   ").append(buff.toString());  buff.append( ",  expected:   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",    expected:   ").append(buff.toString());    buff.append( ",  expected:   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	257	2	add
58	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
59	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
60	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ").append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ").append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ").append(iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
61	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	188	2	add
62	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "n   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	188	2	add
63	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions  ==  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions  ==  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
64	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions  ==  null)  {  buff.append( "null ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions  ==  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions  ==  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    buff.append( "null ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	188	2	add
66	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "null ").append(buff.toString());  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    buff.append( "null ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	188	2	add
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ", ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
68	[BUG]  [BUGGY]  buff.append( ", ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "null ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
70	[BUG]  [BUGGY]  buff.append( "null ");  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "null ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "] ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
72	[BUG]  [BUGGY]  buff.append( "] ");  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "] ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
73	[BUG]  [BUGGY]  buff.append(cmd.getValue());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.getValue());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.getValue());	  buff.append(cmd.toString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(requiredOptions.toString());	  buff.append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	14	2	replace
75	[BUG]  [BUGGY]  buff.append(requiredOptions.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(requiredOptions.toString());	  buff.append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	14	2	replace
76	[BUG]  [BUGGY]  buff.append(cmd.getName());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.getName());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.getName());	  buff.append(cmd.toString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
77	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  buff);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	41	None	replace
78	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  option,  buff);  [CE]  cannot  find  symbol  option  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  option,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  option,  buff);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  cannot  find  symbol  option	41	None	replace
79	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  buff,  options);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  buff,  options);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
80	[BUG]  [BUGGY]  throw  new  MissingOptionException(cmd.toString(),  buff,  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(cmd.toString(),  buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(cmd.toString(),  buff,  options);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	41	None	replace
81	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  iter.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  iter.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  iter.toString());	  throw    new    MissingOptionException(buff,    str.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	241	None	replace
82	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  cmd.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  cmd.toString());	  throw    new    MissingOptionException(buff,    str.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	241	None	replace
83	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  requiredOptions.toString());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    str.toString());    	non-compiled	[CE]  <identifier>  expected	241	None	replace
84	[BUG]  [BUGGY]  foundOptions(buff,  options.toString());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  options.toString());	  foundOptions(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
85	[BUG]  [BUGGY]  foundOptions(buff,  requiredOptions.toString(),  buff);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  requiredOptions.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  requiredOptions.toString(),  buff);	  foundOptions(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
86	[BUG]  [BUGGY]  foundOptions(buff,  option.toString());  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  option.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  option.toString());	  foundOptions(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol  option	86	None	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
88	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
89	[BUG]  [BUGGY]  append( "  <   ").append(buff.toString()).append('>');  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	append( "  <   ").append(buff.toString()).append('>');	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  cannot  find  symbol	191	None	replace
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
91	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  / ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(buff.toString()));    	compilable	  [FE]  AssertionFailedError  	203	2	replace
93	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buff.toString());  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(buff.toString()));    	compilable	  [FE]  AssertionFailedError  	203	2	replace
94	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "n ");  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]        AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "n ");	          if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	199	None	replace
95	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]          AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");	          if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	199	None	replace
96	[BUG]  [BUGGY]  IllegalStateException.println(buff,  buff.toString());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  buff.toString());	  IllegalStateException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
97	[BUG]  [BUGGY]  IllegalStateException.println(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buffer.toString());	  IllegalStateException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	131	None	replace
98	[BUG]  [BUGGY]  IllegalStateException.println(buff.toString(),  buff.toString());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff.toString(),  buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff.toString(),  buff.toString());	  IllegalStateException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
99	[BUG]  [BUGGY]  Iterator  <?>  iter  =  requiredOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <?>  iter  =  requiredOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <?>  iter  =  requiredOptions.iterator();	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	27	None	replace
100	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Object>  iter  =  options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Object>  iter  =  options.iterator();	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	27	None	replace
101	[BUG]  [BUGGY]  foundErrors(buff,  buff.toString());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff,  buff.toString());	  foundErrors(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
102	[BUG]  [BUGGY]  foundErrors(buff,  iter.toString());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff,  iter.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff,  iter.toString());	  foundErrors(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
103	[BUG]  [BUGGY]  foundErrors(buff.toString(),  buff);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff.toString(),  buff);	  foundErrors(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
104	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  requiredOptions);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  requiredOptions);	  Throwables.throw    new    MissingOptionException(buff.toString(),    buff);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
105	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  iter.next());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  iter.next());	  Throwables.throw    new    MissingOptionException(buff.toString(),    buff);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
106	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  this.options);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  this.options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  this.options);	  Throwables.throw    new    MissingOptionException(buff.toString(),    buff);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
107	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  cmd.toString());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  cmd.toString());	  Throwables.throw    new    MissingOptionException(buff.toString(),    buff);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
108	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(requiredOptions.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	205	2	replace
109	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append('>');  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	205	2	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(cmd.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	205	2	replace
111	[BUG]  [BUGGY]  buff.append( "  <   ").append(cmd.toString()).append('>');  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(cmd.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	205	2	replace
112	[BUG]  [BUGGY]  buff.append( "  <   ").append(mv.toString()).append('>');  [CE]  cannot  find  symbol  mv  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(mv.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(mv.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  cannot  find  symbol  mv	205	None	replace
113	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  new  MissingOptionException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	new  MissingOptionException(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    new    MissingOptionException(String.valueOf(buff.toString()));    	compilable	  [FE]  AssertionFailedError  	231	2	replace
114	[BUG]  [BUGGY]  new  MissingOptionException(String.valueOf(buff.toString()));  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  new  MissingOptionException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	new  MissingOptionException(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    new    MissingOptionException(String.valueOf(buff.toString()));    	compilable	  [FE]  AssertionFailedError  	231	2	replace
115	[BUG]  [BUGGY]  ger  buff  =  new  MissingOptionException(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  ger  buff  =  new  MissingOptionException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	ger  buff  =  new  MissingOptionException(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  cannot  find  symbol	231	None	replace
116	[BUG]  [BUGGY]  null  =  new  MissingOptionException(String.valueOf(buff.toString()));  [CE]  unexpected  type  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  null  =  new  MissingOptionException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	null  =  new  MissingOptionException(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  unexpected  type	231	None	replace
117	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));	  	non-compiled	[CE]  unreachable  statement	117	None	add
118	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  StringBuffer  buff  =  new  StringBuffer();  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  StringBuffer  buff  =  new  StringBuffer();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    StringBuffer  buff  =  new  StringBuffer();	  	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	117	None	add
119	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  StringBuffer  buff  =  new  StringBuffer(buff.toString()  +  1);  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  StringBuffer  buff  =  new  StringBuffer(buff.toString()  +  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    StringBuffer  buff  =  new  StringBuffer(buff.toString()  +  1);	  	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	117	None	add
120	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  Throwables.checkArgument(buff.length()  >  0);  [CE]  cannot  find  symbol  Throwables  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  Throwables.checkArgument(buff.length()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    Throwables.checkArgument(buff.length()  >  0);	  	non-compiled	[CE]  cannot  find  symbol  Throwables	117	None	add
121	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  StringBuffer  buff  =  new  StringBuffer(buff.toString());  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  StringBuffer  buff  =  new  StringBuffer(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    StringBuffer  buff  =  new  StringBuffer(buff.toString());	  	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	117	None	add
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  buff.append( "msg.required.toString   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "msg.required.toString   ").append(buff.toString());    buff.append( "msg.required.toString   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	206	2	add
123	[BUG]  [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  buff.append( "msg.required.toString   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  buff.append( "msg.required.toString   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "msg.required.toString   ").append(buff.toString());    buff.append( "msg.required.toString   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	206	2	add
124	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.required.toString  fxmsg.required.toString    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  buff.append( ",msg.required.toString   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "msg.required.toString   ").append(buff.toString());    buff.append( ",msg.required.toString   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.required.toString  fxmsg.required.toString    	206	2	add
125	[BUG]  [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  buff.append( ",msg.required.toString   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.required.toString  fxmsg.required.toString    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  buff.append( ",msg.required.toString   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "msg.required.toString   ").append(buff.toString());    buff.append( ",msg.required.toString   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.required.toString  fxmsg.required.toString    	206	2	add
126	[BUG]  [BUGGY]  While(neededOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(neededOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(neededOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    neededOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	non-compiled	[CE]  	234	None	replace
127	[BUG]  [BUGGY]  While(neededOptions!=  null)  {  for(Iterator  iter  =  neededOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(neededOptions!=  null)  {  for(Iterator  iter  =  neededOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(neededOptions!=  null)  {  for(Iterator  iter  =  neededOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    neededOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	non-compiled	[CE]  	234	None	replace
128	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(), "   ");  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(), "   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(), "   ");	  throw    new    MissingOptionException(buff,    option.toString(),   "       ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	166	None	replace
129	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	75	2	add
130	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "n ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	75	2	add
131	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfx  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfx  	75	2	add
132	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfx  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfx  	75	2	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ".toString());	  	compilable	  [FE]  ComparisonFailure  	75	2	add
134	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ".toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ".toString());	  	compilable	  [FE]  ComparisonFailure  	75	2	add
135	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	75	2	add
136	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	75	2	add
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "n ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "n ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	75	2	add
138	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "n ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "n ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "n ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	75	2	add
139	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(), "   "));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(), "   "));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(), "   "));	  throw    new    MissingOptionException(buff.toString(),   "   "));    	non-compiled	[CE]  <identifier>  expected	224	None	replace
140	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  null);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  null);	  throw    new    MissingOptionException(buff.toString(),   "   "));    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	224	None	replace
141	[BUG]  [BUGGY]  nisip.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(options.size()    >    0)    {    throw    new    MissingOptionException(options.toString());    }    	non-compiled	[CE]  not  a  statement	157	None	replace
142	[BUG]  [BUGGY]  foundOptions.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(options.size()    >    0)    {    throw    new    MissingOptionException(options.toString());    }    	non-compiled	[CE]  not  a  statement	157	None	replace
143	[BUG]  [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(options.size()    >    0)    {    throw    new    MissingOptionException(options.toString());    }    	non-compiled	[CE]  not  a  statement	157	None	replace
144	[BUG]  [BUGGY]  nisip.length()  >  0)  {  throw  new  MissingOptionException(str.toString());  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.length()  >  0)  {  throw  new  MissingOptionException(str.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.length()  >  0)  {  throw  new  MissingOptionException(str.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(options.size()    >    0)    {    throw    new    MissingOptionException(options.toString());    }    	non-compiled	[CE]  not  a  statement	157	None	replace
145	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  buff.append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(cmd.toString());    buff.append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	13	2	add
146	[BUG]  [BUGGY]  buff.append(cmd.toString());  buff.append(cmd.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  buff.append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    buff.append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	13	2	add
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append(cmd.toString());  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
148	[BUG]  [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append(cmd.toString());  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
149	[BUG]  [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  if(cmd.length()  >  0)  {  buff.append(cmd.toString());  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  if(cmd.length()  >  0)  {  buff.append(cmd.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    if(cmd!=  null)  {  if(cmd.length()  >  0)  {  buff.append(cmd.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
150	[BUG]  [BUGGY]  buff.append(cmd.toString());  .append(cmd.toString());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  .append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    .append(cmd.toString());	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
151	[BUG]  [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  if(cmd.length()  ==  0)  {  buff.append(cmd.toString());  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  if(cmd.length()  ==  0)  {  buff.append(cmd.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    if(cmd!=  null)  {  if(cmd.length()  ==  0)  {  buff.append(cmd.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
152	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( "msg.bad.required.options.null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    buff.append( "msg.bad.required.options.null ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	121	2	add
153	[BUG]  [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( "msg.bad.required.options.null ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( "msg.bad.required.options.null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    buff.append( "msg.bad.required.options.null ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	121	2	add
154	[BUG]  [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( "msg.bad.required.options.null ".append(buff.toString());  [CE]  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( "msg.bad.required.options.null ".append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    buff.append( "msg.bad.required.options.null ".append(buff.toString());	  	non-compiled	[CE]  	121	None	add
155	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.bad.required.options.null  fxmsg.bad.required.options.null    [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( ",msg.bad.required.options.null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    buff.append( ",msg.bad.required.options.null ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.bad.required.options.null  fxmsg.bad.required.options.null    	121	2	add
156	[BUG]  [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( ",msg.bad.required.options.null ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.bad.required.options.null  fxmsg.bad.required.options.null    [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  buff.append( ",msg.bad.required.options.null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    buff.append( ",msg.bad.required.options.null ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmsg.bad.required.options.null  fxmsg.bad.required.options.null    	121	2	add
157	[BUG]  [BUGGY]  Iterator  iter  =  opts.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  opts.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  opts.iterator();	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(opts.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	29	None	replace
158	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(opts.next());    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
159	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(opts.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(opts.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(opts.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(opts.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	29	None	replace
160	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( "required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "required.options   ").append(buff.toString());    buff.append( "required.options   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	178	2	add
161	[BUG]  [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( "required.options   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( "required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "required.options   ").append(buff.toString());    buff.append( "required.options   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	178	2	add
162	[BUG]  [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(required.options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [CE]  cannot  find  symbol  required  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(required.options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "required.options   ").append(buff.toString());    if(required.options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }	  	non-compiled	[CE]  cannot  find  symbol  required	178	None	add
163	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "required.options   ").append(buff.toString());    if(options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	178	2	add
164	[BUG]  [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "required.options   ").append(buff.toString());    if(options!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	178	2	add
165	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxrequired.options  fxrequired.options    [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( ",required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "required.options   ").append(buff.toString());    buff.append( ",required.options   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxrequired.options  fxrequired.options    	178	2	add
166	[BUG]  [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( ",required.options   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxrequired.options  fxrequired.options    [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( ",required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "required.options   ").append(buff.toString());    buff.append( ",required.options   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxrequired.options  fxrequired.options    	178	2	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "null ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	187	2	replace
168	[BUG]  [BUGGY]  buff.append( "null ").append(buff.toString());  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "null ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	187	2	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	187	2	replace
170	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	187	2	replace
171	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",n ").append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",n ").append(iter.next());	          buff.append(   ",   ").append(iter.next());    	compilable	  [FE]  NoSuchElementException  	47	2	replace
172	[BUG]  [BUGGY]  buff.append( ",n ").append(iter.next());  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",n ").append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",n ").append(iter.next());	          buff.append(   ",   ").append(iter.next());    	compilable	  [FE]  NoSuchElementException  	47	2	replace
173	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ": ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ": ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
174	[BUG]  [BUGGY]  buff.append( ": ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ": ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ": ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.key ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.bad.required.key ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
176	[BUG]  [BUGGY]  buff.append( "msg.bad.required.key ");  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.key ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.bad.required.key ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
177	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	192	2	add
178	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	192	2	add
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	192	2	add
180	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	192	2	add
181	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(Buff.toString()));  }  [CE]  cannot  find  symbol  Buff  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(Buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(Buff.toString()));  }	  	non-compiled	[CE]  cannot  find  symbol  Buff	192	None	add
182	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff  >=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff  >=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff  >=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	192	None	add
183	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti  [CE]  '('  or  '['  expected  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti	  	non-compiled	[CE]  '('  or  '['  expected	80	None	add
184	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	80	2	add
185	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	80	2	add
186	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOpti  [CE]  '('  or  '['  expected  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOpti  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOpti	  	non-compiled	[CE]  '('  or  '['  expected	80	None	add
187	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti  [CE]  '('  or  '['  expected  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti	  	non-compiled	[CE]  '('  or  '['  expected	80	None	add
188	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  Missing  [CE]  '('  or  '['  expected  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  Missing  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  Missing	  	non-compiled	[CE]  '('  or  '['  expected	80	None	add
189	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  requiredOptions,  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  requiredOptions,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  requiredOptions,  buff);	  throw    new    MissingOptionException(buff.toString(),    requiredOptions);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	38	None	replace
190	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  cmd.toString(),  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  cmd.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  cmd.toString(),  requiredOptions);	  throw    new    MissingOptionException(buff.toString(),    requiredOptions);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	38	None	replace
191	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  requiredOptions);	  throw    new    MissingOptionException(buff.toString(),    requiredOptions);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	38	None	replace
192	[BUG]  [BUGGY]  foundOptions(buff,  buff.size()  -  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  buff.size()  -  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  buff.size()  -  1);	  foundOptions(buff,    requiredOptions.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
193	[BUG]  [BUGGY]  Throwables.showError(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  Throwables  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.showError(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.showError(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.showError(String.valueOf(buff.toString()));    	non-compiled	[CE]  cannot  find  symbol  Throwables	18	None	replace
194	[BUG]  [BUGGY]  attern(String.valueOf(buff.toString()));  Throwables.showError(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  attern(String.valueOf(buff.toString()));  Throwables.showError(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	attern(String.valueOf(buff.toString()));  Throwables.showError(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.showError(String.valueOf(buff.toString()));    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
195	[BUG]  [BUGGY]  ger.showError(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  ger  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  ger.showError(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	ger.showError(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.showError(String.valueOf(buff.toString()));    	non-compiled	[CE]  cannot  find  symbol  ger	18	None	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  AssertionFailedError  	19	2	replace
197	[BUG]  [BUGGY]  if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  AssertionFailedError  	19	2	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff  =  new  StringBuffer();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff  =  new  StringBuffer();	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  AssertionFailedError  	19	2	replace
199	[BUG]  [BUGGY]  buff  =  new  StringBuffer();  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff  =  new  StringBuffer();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff  =  new  StringBuffer();	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  AssertionFailedError  	19	2	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  ComparisonFailure  	19	2	replace
201	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  ComparisonFailure  	19	2	replace
202	[BUG]  [BUGGY]  buff.append( "n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [CE]  unclosed  string  literal  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(iter.next());    }    	non-compiled	[CE]  unclosed  string  literal	60	None	replace
203	[BUG]  [BUGGY]  buff.append( ", ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [CE]  unclosed  string  literal  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(iter.next());    }    	non-compiled	[CE]  unclosed  string  literal	60	None	replace
204	[BUG]  [BUGGY]  nisips.add(buff.toString());  [CE]  cannot  find  symbol  nisips  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisips.add(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisips.add(buff.toString());	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    >=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  nisips	83	None	replace
205	[BUG]  [BUGGY]  nisip.add(buff.toString());  [CE]  cannot  find  symbol  nisip  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.add(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.add(buff.toString());	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    >=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  nisip	83	None	replace
206	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	88	2	add
207	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	88	2	add
208	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	88	2	add
209	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	88	2	add
210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	88	2	add
211	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	88	2	add
212	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	88	2	add
213	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	88	2	add
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    throw    new    MissingOptionException(String.valueOf(buff.toString()));    	compilable	  [FE]  ComparisonFailure  	17	2	replace
215	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    throw    new    MissingOptionException(String.valueOf(buff.toString()));    	compilable	  [FE]  ComparisonFailure  	17	2	replace
216	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff),  requiredOptions.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff),  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff),  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    requiredOptions.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	202	None	replace
217	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  requiredOptions.toString(),  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  requiredOptions.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  requiredOptions.toString(),  options);	  throw    new    MissingOptionException(buff,    requiredOptions.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	202	None	replace
218	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  requiredOptions,  options.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  requiredOptions,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  requiredOptions,  options.toString());	  throw    new    MissingOptionException(buff,    requiredOptions.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	202	None	replace
219	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "[null] ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "[null] ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "[null] ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	non-compiled	[CE]  	232	None	replace
220	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "Null ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "Null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "Null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	non-compiled	[CE]  	232	None	replace
221	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
222	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
223	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >	  	non-compiled	[CE]  illegal  start  of  expression	218	None	add
224	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  Missing  [CE]  '('  or  '['  expected  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  Missing  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  Missing	  	non-compiled	[CE]  '('  or  '['  expected	218	None	add
225	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  Missing  [CE]  '('  or  '['  expected  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  Missing  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  Missing	  	non-compiled	[CE]  '('  or  '['  expected	218	None	add
226	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOpti  [CE]  '('  or  '['  expected  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOpti  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOpti	  	non-compiled	[CE]  '('  or  '['  expected	218	None	add
227	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(0));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(requiredOptions.get(0));	  buff.append(   "    <       ").append(requiredOptions.toString()));    	compilable	  [FE]  AssertionFailedError  	100	2	replace
228	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(0));  [FE]  AssertionFailedError  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(0));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.get(0));	  buff.append(   "    <       ").append(requiredOptions.toString()));    	compilable	  [FE]  AssertionFailedError  	100	2	replace
229	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()  -  1);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(requiredOptions.size()  -  1);	  buff.append(   "    <       ").append(requiredOptions.toString()));    	compilable	  [FE]  AssertionFailedError  	100	2	replace
230	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()  -  1);  [FE]  AssertionFailedError  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()  -  1);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.size()  -  1);	  buff.append(   "    <       ").append(requiredOptions.toString()));    	compilable	  [FE]  AssertionFailedError  	100	2	replace
231	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append( "  <   ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(requiredOptions.toString());    buff.append( "  <   ").append(requiredOptions.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
232	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append( "  <   ").append(requiredOptions.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append( "  <   ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString());    buff.append( "  <   ").append(requiredOptions.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
233	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(requiredOptions.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
234	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString());  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
235	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append('  <   ").append(requiredOptions.toString());  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append('  <   ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString());    buff.append('  <   ").append(requiredOptions.toString());	  	non-compiled	[CE]  unclosed  character  literal	35	None	add
236	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append( ",  <   ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(requiredOptions.toString());    buff.append( ",  <   ").append(requiredOptions.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
237	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append( ",  <   ").append(requiredOptions.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append( ",  <   ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString());    buff.append( ",  <   ").append(requiredOptions.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
238	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  cmd));  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  cmd));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  cmd));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	34	None	replace
239	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.get(buff.toString()));  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(options.get(buff.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(options.get(buff.toString()));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
240	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString()),  cmd);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString()),  cmd);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.get(buff.toString()),  cmd);	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	34	None	replace
241	[BUG]  [BUGGY]  buff.length()  <  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  <  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  <  0)  {  throw  new  MissingOptionException(buff.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  not  a  statement	168	None	replace
242	[BUG]  [BUGGY]  buff.length()  ==  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  ==  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  ==  0)  {  throw  new  MissingOptionException(buff.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  not  a  statement	168	None	replace
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "] ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "] ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	189	2	replace
244	[BUG]  [BUGGY]  buff.append( "] ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "] ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "] ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	189	2	replace
245	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	3	2	add
246	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	3	2	add
247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	3	2	add
248	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	3	2	add
249	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(',').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(',').append(buff.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	254	2	replace
251	[BUG]  [BUGGY]  buff.append(',').append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(',').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(',').append(buff.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	254	2	replace
252	[BUG]  [BUGGY]  buff.append( ",' ".append(buff.toString()));  [CE]  cannot  find  symbol  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",' ".append(buff.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",' ".append(buff.toString()));	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	254	None	replace
253	[BUG]  [BUGGY]  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  junit.framework.ComparisonFailure:  expected;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	junit.framework.ComparisonFailure:  expected;	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	non-compiled	[CE]  not  a  statement	254	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ".required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ".required.options ").append(buff.toString());	  buff.append(   "mv.required.options   ").append(buffer.toString());    	compilable	  [FE]  AssertionFailedError  	7	2	replace
255	[BUG]  [BUGGY]  buff.append( ".required.options ").append(buff.toString());  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ".required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ".required.options ").append(buff.toString());	  buff.append(   "mv.required.options   ").append(buffer.toString());    	compilable	  [FE]  AssertionFailedError  	7	2	replace
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "null ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "null ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
257	[BUG]  [BUGGY]  buff.append( "null ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "null ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "null ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.key ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.bad.required.key ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
259	[BUG]  [BUGGY]  buff.append( "msg.bad.required.key ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.key ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.bad.required.key ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
260	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.options.no.required ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.bad.required.options.no.required ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
261	[BUG]  [BUGGY]  buff.append( "msg.bad.required.options.no.required ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.options.no.required ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.bad.required.options.no.required ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
262	[BUG]  [BUGGY]  Iterator  iter  =  this.requiredOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  this.requiredOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  this.requiredOptions.iterator();	  Iterator    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	24	None	replace
263	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
264	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [CE]  unclosed  string  literal  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  unclosed  string  literal	174	None	replace
265	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }	  Iterator    <    String>    iter    =    options.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
266	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  neededOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  neededOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  neededOptions.iterator();	  Iterator    <    String>    iter    =    buff.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	260	None	replace
267	[BUG]  [BUGGY]  Iterator  <  String>  buff  =  requiredOptions.iterator();  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  buff  =  requiredOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  buff  =  requiredOptions.iterator();	  Iterator    <    String>    iter    =    buff.iterator();    	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	260	None	replace
268	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Ilerator  <  String>  iter  =  requiredOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Ilerator  <  String>  iter  =  requiredOptions.iterator();	  Iterator    <    String>    iter    =    buff.iterator();    	non-compiled	[CE]  cannot  find  symbol	260	None	replace
269	[BUG]  [BUGGY]  buff.append( "mv.required.options. ").append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options. ").append(buffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options. ").append(buffer.toString());	  buff.append(   "mv.required.options.   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	9	None	replace
270	[BUG]  [BUGGY]  buff.append( "mv.required.options ".append(buff.toString());  [CE]  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ".append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ".append(buff.toString());	  buff.append(   "mv.required.options.   ").append(buff.toString());    	non-compiled	[CE]  	9	None	replace
271	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(md,  buff.toString());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(md,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(md,  buff.toString());	  Throwables.throw    new    MissingOptionException(buff,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
272	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  str.toString());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  str.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  str.toString());	  Throwables.throw    new    MissingOptionException(buff,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
273	[BUG]  [BUGGY]  if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(iter.next()).append( ",   ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(iter.next()).append( ",   ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  Iterator  <  String>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(iter.next()).append( ",   ");  }	  Iterator    <    String>    iter    =    options.iterator();    while(iter.hasNext())    {    buff.append(iter.next()).append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
274	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
275	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
276	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
277	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
279	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  ' ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =  ' ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
281	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  ' ").append(buff.toString());  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  ' ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =  ' ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
282	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
283	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
284	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "null ");	  	compilable	  [FE]  ComparisonFailure  	162	2	add
285	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "null ");	  	compilable	  [FE]  ComparisonFailure  	162	2	add
286	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	162	2	add
287	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "n ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	162	2	add
288	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "] ");	  	compilable	  [FE]  ComparisonFailure  	162	2	add
289	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "] ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "] ");	  	compilable	  [FE]  ComparisonFailure  	162	2	add
290	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	197	2	add
291	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	197	2	add
292	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	197	2	add
293	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	197	2	add
294	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString()  [CE]  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString()  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString()	  	non-compiled	[CE]  	197	None	add
295	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(requiredOptions.size()).append( "> ");	  buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	93	2	replace
296	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()).append( "> ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.size()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.size()).append( "> ");	  buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	93	2	replace
297	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(0)).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(requiredOptions.get(0)).append( "> ");	  buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	93	2	replace
298	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(0)).append( "> ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(0)).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.get(0)).append( "> ");	  buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	93	2	replace
299	[BUG]  [BUGGY]  buff.length()  <  0)  {  throw  new  MissingOptionException(buffer.toString());  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  <  0)  {  throw  new  MissingOptionException(buffer.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  <  0)  {  throw  new  MissingOptionException(buffer.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buffer.toString());    }    	non-compiled	[CE]  not  a  statement	170	None	replace
300	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buffer.toString());    }    	non-compiled	[CE]  not  a  statement	170	None	replace
301	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());	  	non-compiled	[CE]  unreachable  statement	64	None	add
302	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  Throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  Throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    Throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());	  	non-compiled	[CE]  not  a  statement	64	None	add
303	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  Throwables.checkState(requiredOptions.size()  >  0);  [CE]  cannot  find  symbol  Throwables  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  Throwables.checkState(requiredOptions.size()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    Throwables.checkState(requiredOptions.size()  >  0);	  	non-compiled	[CE]  cannot  find  symbol  Throwables	64	None	add
304	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));	  	non-compiled	[CE]  unreachable  statement	195	None	add
305	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));	  	non-compiled	[CE]  not  a  statement	195	None	add
306	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  StringBuffer  buff  =  new  StringBuffer(buff.toString()  +  'n');  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  StringBuffer  buff  =  new  StringBuffer(buff.toString()  +  'n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    StringBuffer  buff  =  new  StringBuffer(buff.toString()  +  'n');	  	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	195	None	add
307	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  StringBuffer  buff  =  new  StringBuffer(buff.length()  +  'n');  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  StringBuffer  buff  =  new  StringBuffer(buff.length()  +  'n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    StringBuffer  buff  =  new  StringBuffer(buff.length()  +  'n');	  	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	195	None	add
308	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  Throwables.checkArgument(buff.length()  >  0);  [CE]  cannot  find  symbol  Throwables  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  Throwables.checkArgument(buff.length()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    Throwables.checkArgument(buff.length()  >  0);	  	non-compiled	[CE]  cannot  find  symbol  Throwables	195	None	add
309	[BUG]  [BUGGY]  buff.append( ": ").append(requiredOptions.get(buff.toString()));  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ": ").append(requiredOptions.get(buff.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ": ").append(requiredOptions.get(buff.toString()));	  buff.append(   ":   ").append(buff.toString());    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	120	None	replace
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ": ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ": ").append(requiredOptions.toString());	  buff.append(   ":   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	120	2	replace
311	[BUG]  [BUGGY]  buff.append( ": ").append(requiredOptions.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ": ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ": ").append(requiredOptions.toString());	  buff.append(   ":   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	120	2	replace
312	[BUG]  [BUGGY]  buff.append( ": ").append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ": ").append(buffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ": ").append(buffer.toString());	  buff.append(   ":   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	120	None	replace
313	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ":   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ":   ").append(buff.toString());    buff.append( ":   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	119	2	add
314	[BUG]  [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ":   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ":   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ":   ").append(buff.toString());    buff.append( ":   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	119	2	add
315	[BUG]  [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ": ".append(buff.toString());  [CE]  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ": ".append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ":   ").append(buff.toString());    buff.append( ": ".append(buff.toString());	  	non-compiled	[CE]  	119	None	add
316	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx:  fx:    [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ",:   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ":   ").append(buff.toString());    buff.append( ",:   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx:  fx:    	119	2	add
317	[BUG]  [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ",:   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx:  fx:    [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append( ",:   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ":   ").append(buff.toString());    buff.append( ",:   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx:  fx:    	119	2	add
318	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	50	2	add
319	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	50	2	add
320	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	50	2	add
321	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	50	2	add
322	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	50	2	add
323	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	50	2	add
324	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  .append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  .append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    .append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
325	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  <   ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  <   ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
326	[BUG]  [BUGGY]  Option  options  =  opts.getOptions();  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Option  options  =  opts.getOptions();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Option  options  =  opts.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol  opts	132	None	replace
327	[BUG]  [BUGGY]  Options  options  =  opts.getOptions();  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Options  options  =  opts.getOptions();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Options  options  =  opts.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol  opts	132	None	replace
328	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti  [CE]  '('  or  '['  expected  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOpti	  	non-compiled	[CE]  '('  or  '['  expected	78	None	add
329	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  Missing  [CE]  '('  or  '['  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  Missing  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  Missing	  	non-compiled	[CE]  '('  or  '['  expected	78	None	add
330	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	78	2	add
331	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	78	2	add
332	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.to  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.to  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.to	  	non-compiled	[CE]  ')'  expected	78	None	add
333	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException  [CE]  '('  or  '['  expected  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException	  	non-compiled	[CE]  '('  or  '['  expected	78	None	add
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
335	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
337	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
339	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
340	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(options,  buff.toString());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(options,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(options,  buff.toString());	  throw    new    MissingOptionException(options,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	126	None	replace
341	[BUG]  [BUGGY]  throw  new  MissingOptionException(md,  options.toString());  [CE]  cannot  find  symbol  md  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(md,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(md,  options.toString());	  throw    new    MissingOptionException(options,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  md	126	None	replace
342	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:[  Options:  [  short  {f=[  option:  f  ::  null  ]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException( "Missing  option: "  +  options.toString());	  throw    new    MissingOptionException(options,    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:[  Options:  [  short  {f=[  option:  f    ::  null  ]  	126	2	replace
343	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  options.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:[  Options:  [  short  {f=[  option:  f  ::  null  ]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  option: "  +  options.toString());	  throw    new    MissingOptionException(options,    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:[  Options:  [  short  {f=[  option:  f    ::  null  ]  	126	2	replace
344	[BUG]  [BUGGY]  foundOptions  =  buff.size()  >  0;  [CE]  cannot  find  symbol  foundOptions  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions  =  buff.size()  >  0;  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions  =  buff.size()  >  0;	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  foundOptions	81	None	replace
345	[BUG]  [BUGGY]  bucket.add(buff);  [CE]  cannot  find  symbol  bucket  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.add(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.add(buff);	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  bucket	81	None	replace
346	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	113	2	add
347	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	113	2	add
348	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  If(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  If(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    If(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	non-compiled	[CE]  ';'  expected	113	None	add
349	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(Buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  cannot  find  symbol  Buff  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(Buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(Buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	non-compiled	[CE]  cannot  find  symbol  Buff	113	None	add
350	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  buff,  options.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  buff,  options.toString());	  throw    new    MissingOptionException(msg,    buff,    options.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	221	None	replace
351	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(msg,  buff,  options.toString());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(msg,  buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(msg,  buff,  options.toString());	  throw    new    MissingOptionException(msg,    buff,    options.toString());    	non-compiled	[CE]  <identifier>  expected	221	None	replace
352	[BUG]  [BUGGY]  IllegalStateException.println(buff,  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  null);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  null);	  IllegalStateException.println(buff);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
353	[BUG]  [BUGGY]  IllegalStateException.println(buff,  buff);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  buff);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  buff);	  IllegalStateException.println(buff);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
354	[BUG]  [BUGGY]  buff.append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buffer.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buffer.toString());	  bucket.append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	84	None	replace
355	[BUG]  [BUGGY]  buff.append(md.toString());  [CE]  cannot  find  symbol  md  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(md.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(md.toString());	  bucket.append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  md	84	None	replace
356	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ",n ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ",n ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ",n ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  	248	None	replace
357	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	204	2	add
358	[BUG]  [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	204	2	add
359	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(buff.toString()).append('>');    if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	204	2	add
360	[BUG]  [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(buff.toString()).append('>');    if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	204	2	add
361	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(buff.toString()).append('>');    if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	204	2	add
362	[BUG]  [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(buff.toString()).append('>');    if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	204	2	add
363	[BUG]  [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append('  <   ").append(buff.toString()).append('>');  [CE]  unclosed  character  literal  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append('  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append('  <   ").append(buff.toString()).append('>');	  	non-compiled	[CE]  unclosed  character  literal	204	None	add
364	[BUG]  [BUGGY]  foundError(buff,  buff.toString(),  null);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  buff.toString(),  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  buff.toString(),  null);	  foundError(buff.toString(),    null);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
365	[BUG]  [BUGGY]  foundError(buff,  cmd.toString(),  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  cmd.toString(),  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  cmd.toString(),  null);	  foundError(buff.toString(),    null);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
366	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "n   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
367	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "n   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
368	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "negative ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "negative ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
369	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "negative ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "negative ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "negative ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
370	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
371	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "mv.required.options ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
372	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "mv.required ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "mv.required ".toString());	  	compilable	  [FE]  ComparisonFailure  	164	2	add
373	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "mv.required ".toString());  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "mv.required ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "mv.required ".toString());	  	compilable	  [FE]  ComparisonFailure  	164	2	add
374	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <  /   ").append(buff.toString()).append(   ">   ");  buff.append( "  <  /   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    buff.append( "  <  /   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	143	2	add
375	[BUG]  [BUGGY]  buff.append(   "  <  /   ").append(buff.toString()).append(   ">   ");  buff.append( "  <  /   ").append(buff.toString()).append( "> ");  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <  /   ").append(buff.toString()).append(   ">   ");  buff.append( "  <  /   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    buff.append( "  <  /   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	143	2	add
376	[BUG]  [BUGGY]  .append(buff.toString());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  .append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	.append(buff.toString());	  buff.append(buff.toString());    .append(buff.toString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
377	[BUG]  [BUGGY]  .append(requiredOptions.toString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  .append(requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	.append(requiredOptions.toString());	  buff.append(buff.toString());    .append(buff.toString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
378	[BUG]  [BUGGY]  .append(Buff.toString(buff));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  .append(Buff.toString(buff));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	.append(Buff.toString(buff));	  buff.append(buff.toString());    .append(buff.toString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
379	[BUG]  [BUGGY]  .append( "n ").append(buff.toString());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  .append( "n ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	.append( "n ").append(buff.toString());	  buff.append(buff.toString());    .append(buff.toString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
380	[BUG]  [BUGGY]  nisip.append(buff.toString());  [CE]  cannot  find  symbol  nisip  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.append(buff.toString());	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  nisip	82	None	replace
381	[BUG]  [BUGGY]  foundOptions.add(buff.toString());  [CE]  cannot  find  symbol  foundOptions  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions.add(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions.add(buff.toString());	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  foundOptions	82	None	replace
382	[BUG]  [BUGGY]  nisipr.append(buff.toString());  [CE]  cannot  find  symbol  nisipr  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipr.append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipr.append(buff.toString());	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  nisipr	82	None	replace
383	[BUG]  [BUGGY]  ettyPrinter.checkRequiredOptions(buff);  [CE]  cannot  find  symbol  ettyPrinter  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  ettyPrinter.checkRequiredOptions(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	ettyPrinter.checkRequiredOptions(buff);	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  ettyPrinter	82	None	replace
384	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  option.toString());  [CE]  cannot  find  symbol  option  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  option.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  options: "  +  option.toString());	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  option	68	None	replace
385	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());  [CE]  <identifier>  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	non-compiled	[CE]  <identifier>  expected	68	None	replace
386	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:[  Options:  [  short  {f=[  option:  f  ::  null  ]  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException( "Missing  options: "  +  options.toString());	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:[  Options:  [  short  {f=[  option:  f    ::  null  ]  	68	2	replace
387	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  options.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:[  Options:  [  short  {f=[  option:  f  ::  null  ]  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  options: "  +  options.toString());	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:[  Options:  [  short  {f=[  option:  f    ::  null  ]  	68	2	replace
388	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  buff.append( "  <   ").append(buff.toString()).append( ".> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    buff.append( "  <   ").append(buff.toString()).append( ".> ");	  	compilable	  [FE]  ComparisonFailure  	261	2	add
389	[BUG]  [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  buff.append( "  <   ").append(buff.toString()).append( ".> ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  buff.append( "  <   ").append(buff.toString()).append( ".> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    buff.append( "  <   ").append(buff.toString()).append( ".> ");	  	compilable	  [FE]  ComparisonFailure  	261	2	add
390	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }	  	compilable	  [FE]  ComparisonFailure  	261	2	add
391	[BUG]  [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }	  	compilable	  [FE]  ComparisonFailure  	261	2	add
392	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( "mv.required.options   ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ".toString());    buff.append( "mv.required.options   ".toString());	  	compilable	  [FE]  ComparisonFailure  	15	2	add
393	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( "mv.required.options   ".toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( "mv.required.options   ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ".toString());    buff.append( "mv.required.options   ".toString());	  	compilable	  [FE]  ComparisonFailure  	15	2	add
394	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ",mv.required.options   ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ".toString());    buff.append( ",mv.required.options   ".toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    	15	2	add
395	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ",mv.required.options   ".toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ",mv.required.options   ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ".toString());    buff.append( ",mv.required.options   ".toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    	15	2	add
396	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ".required.options ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ".toString());    buff.append( ".required.options ".toString());	  	compilable	  [FE]  ComparisonFailure  	15	2	add
397	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ".required.options ".toString());  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ".required.options ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ".toString());    buff.append( ".required.options ".toString());	  	compilable	  [FE]  ComparisonFailure  	15	2	add
398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(cmd.toString());	  buff.append(   "    <       ").append(buffer.toString());    	compilable	  [FE]  AssertionFailedError  	37	2	replace
399	[BUG]  [BUGGY]  buff.append( "  <   ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(cmd.toString());	  buff.append(   "    <       ").append(buffer.toString());    	compilable	  [FE]  AssertionFailedError  	37	2	replace
400	[BUG]  [BUGGY]  buff.append( "  <   ").append(Buff.toString(buff.toString()));  [CE]  cannot  find  symbol  Buff  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(Buff.toString(buff.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(Buff.toString(buff.toString()));	  buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  cannot  find  symbol  Buff	37	None	replace
401	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions,  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions,  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    requiredOptions);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	127	None	replace
402	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions);	  throw    new    MissingOptionException(buff,    options.toString(),    requiredOptions);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
403	[BUG]  [BUGGY]  throw  new  MissingOptionException(cmd,  options.toString(),  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(cmd,  options.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(cmd,  options.toString(),  requiredOptions);	  throw    new    MissingOptionException(buff,    options.toString(),    requiredOptions);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	127	None	replace
404	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions,  buf);  [CE]  cannot  find  symbol  buf  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions,  buf);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  requiredOptions,  buf);	  throw    new    MissingOptionException(buff,    options.toString(),    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  buf	127	None	replace
405	[BUG]  [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  buff.append( ", ");  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  buff.append( ", ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  requiredOptions.iterator();  buff.append( ", ");	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	12	None	replace
406	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( ", ");  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( ", ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( ", ");	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	12	None	replace
407	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requestedOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requestedOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requestedOptions.iterator();	  Iterator    <    String>    iter    =    opts.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	129	None	replace
408	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    if(opts!=    null)    {    for(Iterator    iter    =    options.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	249	None	replace
409	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  opts  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  opts  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  opts  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    if(opts!=    null)    {    for(Iterator    iter    =    options.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	249	None	replace
410	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  opts  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  opts  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  opts  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    if(opts!=    null)    {    for(Iterator    iter    =    options.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	249	None	replace
411	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append( "[   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "[   ").append(buff.toString());    buff.append( "[   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	136	2	add
412	[BUG]  [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append( "[   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append( "[   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "[   ").append(buff.toString());    buff.append( "[   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	136	2	add
413	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx[  fx[    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append( ",[   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "[   ").append(buff.toString());    buff.append( ",[   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx[  fx[    	136	2	add
414	[BUG]  [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append( ",[   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx[  fx[    [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append( ",[   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "[   ").append(buff.toString());    buff.append( ",[   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx[  fx[    	136	2	add
415	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(requiredOptions.size()  -  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ", ").append(requiredOptions.size()  -  1);	  buff.append(buff.toString());    if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
416	[BUG]  [BUGGY]  buff.append( ", ").append(requiredOptions.size()  -  1);  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(requiredOptions.size()  -  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(requiredOptions.size()  -  1);	  buff.append(buff.toString());    if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	76	2	replace
417	[BUG]  [BUGGY]  Throwables.throwMissingException(buff,  options.toString());  [CE]  cannot  find  symbol  Throwables  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throwMissingException(buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throwMissingException(buff,  options.toString());	  throw    new    MissingOptionException(md,    buff,    options.toString());    	non-compiled	[CE]  cannot  find  symbol  Throwables	222	None	replace
418	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  buff,  options.toString());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  buff,  options.toString());	  throw    new    MissingOptionException(md,    buff,    options.toString());    	non-compiled	[CE]  <identifier>  expected	222	None	replace
419	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), " ",  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), " ",  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()), " ",  requiredOptions);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "       ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	23	None	replace
420	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()), " ");  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()), " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()), " ");	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "       ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
421	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), ", ");  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()), ", ");	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "       ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	23	None	replace
422	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   "mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	1	2	add
423	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   "mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	1	2	add
424	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   "mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	1	2	add
425	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   "mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	1	2	add
426	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  options.toString());	  throw    new    MissingOptionException(buffer,    options.toString());    	non-compiled	[CE]  <identifier>  expected	223	None	replace
427	[BUG]  [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  not  a  statement	155	None	replace
428	[BUG]  [BUGGY]  bucket.length()  >  0)  {  Throw  new  MissingOptionException(buff.toString());  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.length()  >  0)  {  Throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.length()  >  0)  {  Throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  not  a  statement	155	None	replace
429	[BUG]  [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(Buffs.toString(buff.toString()));  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(Buffs.toString(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.length()  >  0)  {  throw  new  MissingOptionException(Buffs.toString(buff.toString()));  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  not  a  statement	155	None	replace
430	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next());  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]        AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next());	  if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	147	None	replace
431	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  if(iter.hasNext())  {  buff.append(iter.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]          AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  if(iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  if(iter.hasNext())  {  buff.append(iter.next());  }	  if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	147	None	replace
432	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	69	2	add
433	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	69	2	add
434	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	69	2	add
435	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	69	2	add
436	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	69	2	add
437	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "n ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	69	2	add
438	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append(buff.toString());  buff.append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	69	2	add
439	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(cmd.toString());  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append(buff.toString());  buff.append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	69	2	add
440	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(Buff.toString());  [CE]  cannot  find  symbol  Buff  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append(buff.toString());  buff.append(Buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append(buff.toString());  buff.append(Buff.toString());	  	non-compiled	[CE]  cannot  find  symbol  Buff	69	None	add
441	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( ", ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	59	2	replace
442	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( ", ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	59	2	replace
443	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "no-required ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "no-required ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "no-required ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "no   ");    }    	non-compiled	[CE]  	233	None	replace
444	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [CE]  <identifier>  expected  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	non-compiled	[CE]  <identifier>  expected	196	None	replace
445	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  1);	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	compilable	  [FE]  ComparisonFailure  	196	2	replace
446	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  1);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  1);	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	compilable	  [FE]  ComparisonFailure  	196	2	replace
447	[BUG]  [BUGGY]  Throwables.throwMissingException(String.valueOf(buff.toString()  +  'n'));  [CE]  cannot  find  symbol  Throwables  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throwMissingException(String.valueOf(buff.toString()  +  'n'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throwMissingException(String.valueOf(buff.toString()  +  'n'));	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	non-compiled	[CE]  cannot  find  symbol  Throwables	196	None	replace
448	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  for(Iterator  <  String>  iter  =  opts.iterator();  iter.hasNext())  {  buff.append(iter.next());  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  for(Iterator  <  String>  iter  =  opts.iterator();  iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  for(Iterator  <  String>  iter  =  opts.iterator();  iter.hasNext())  {  buff.append(iter.next());  }	  Iterator    <    String>    iter    =    opts.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  ';'  expected	104	None	replace
449	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  for(Iterator  <  String>  iter  =  options.iterator();  iter.hasNext())  {  buff.append(iter.next());  }  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  for(Iterator  <  String>  iter  =  options.iterator();  iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  for(Iterator  <  String>  iter  =  options.iterator();  iter.hasNext())  {  buff.append(iter.next());  }	  Iterator    <    String>    iter    =    opts.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  ';'  expected	104	None	replace
450	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(options.next());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(options.next());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(options.next());	  Iterator    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(options.next());    	non-compiled	[CE]  illegal  start  of  expression	250	None	replace
451	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());	  Iterator    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(options.next());    	non-compiled	[CE]  illegal  start  of  expression	250	None	replace
452	[BUG]  [BUGGY]  Iterator  opts  =  this.options.iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  opts  =  this.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  opts  =  this.options.iterator();	  Iterator    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
453	[BUG]  [BUGGY]  Iterator  opts  =  iter.options.iterator();  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  opts  =  iter.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  opts  =  iter.options.iterator();	  Iterator    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol  options	98	None	replace
454	[BUG]  [BUGGY]  Iterator  opts  =  iter.opts.iterator();  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  opts  =  iter.opts.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  opts  =  iter.opts.iterator();	  Iterator    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol  opts	98	None	replace
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	56	2	replace
456	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	56	2	replace
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	56	2	replace
458	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	56	2	replace
459	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
460	[BUG]  [BUGGY]  AllOptions.add(buff,  requiredOptions);  [CE]  cannot  find  symbol  AllOptions  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions.add(buff,  requiredOptions);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions.add(buff,  requiredOptions);	  AllOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol  AllOptions	97	None	replace
461	[BUG]  [BUGGY]  AllOptions.add(buff,  buff);  [CE]  cannot  find  symbol  AllOptions  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions.add(buff,  buff);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions.add(buff,  buff);	  AllOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol  AllOptions	97	None	replace
462	[BUG]  [BUGGY]  AllOptions.add(buff,  null);  [CE]  cannot  find  symbol  AllOptions  [FE]                        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions.add(buff,  null);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions.add(buff,  null);	  AllOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol  AllOptions	97	None	replace
463	[BUG]  [BUGGY]  AllOptions.add(buff,  iter.next());  [CE]  cannot  find  symbol  AllOptions  [FE]                          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions.add(buff,  iter.next());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions.add(buff,  iter.next());	  AllOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol  AllOptions	97	None	replace
464	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
465	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
466	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ").append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ").append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ").append(iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
467	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
468	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
469	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ").append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ").append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ").append(iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
470	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions  ==  null)  {  buff.append( "n   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions  ==  null)  {  buff.append( "n   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
471	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions  ==  null)  {  buff.append( "n   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions  ==  null)  {  buff.append( "n   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions  ==  null)  {  buff.append( "n   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
472	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  ComparisonFailure  	229	2	replace
473	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  ComparisonFailure  	229	2	replace
474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  AssertionFailedError  	229	2	replace
475	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  AssertionFailedError  	229	2	replace
476	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  throw  new  MissingOptionException( " ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  ComparisonFailure  	229	2	replace
477	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException( " ");  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  throw  new  MissingOptionException( " ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  ComparisonFailure  	229	2	replace
478	[BUG]  [BUGGY]  buff.append( ",  expected: ").append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  expected: ").append(buffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",  expected: ").append(buffer.toString());	  buff.append(   ",    expected:   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	258	None	replace
479	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  expected: ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",  expected: ").append(requiredOptions.toString());	  buff.append(   ",    expected:   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	258	2	replace
480	[BUG]  [BUGGY]  buff.append( ",  expected: ").append(requiredOptions.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  expected: ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",  expected: ").append(requiredOptions.toString());	  buff.append(   ",    expected:   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	258	2	replace
481	[BUG]  [BUGGY]  buff.append( ",  expected: ").append(mv.toString());  [CE]  cannot  find  symbol  mv  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  expected: ").append(mv.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",  expected: ").append(mv.toString());	  buff.append(   ",    expected:   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  mv	258	None	replace
482	[BUG]  [BUGGY]  IllegalArgumentException.println(buff,  buff.toString());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalArgumentException.println(buff,  buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalArgumentException.println(buff,  buff.toString());	  IllegalArgumentException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
483	[BUG]  [BUGGY]  IllegalArgumentException.println(buff,  iter.toString());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalArgumentException.println(buff,  iter.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalArgumentException.println(buff,  iter.toString());	  IllegalArgumentException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
484	[BUG]  [BUGGY]  IllegalArgumentException.println(buff.toString(),  buff.toString());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalArgumentException.println(buff.toString(),  buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalArgumentException.println(buff.toString(),  buff.toString());	  IllegalArgumentException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	145	None	replace
485	[BUG]  [BUGGY]  throw  new  MissingOptionException(cmd,  options.toString(),  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(cmd,  options.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(cmd,  options.toString(),  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	128	None	replace
486	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString(),  cmd);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString(),  cmd);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  options.toString(),  cmd);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  <identifier>  expected	128	None	replace
487	[BUG]  [BUGGY]  throw  new  MissingOptionException(msg,  options.toString(),  buff);  [CE]  cannot  find  symbol  msg  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(msg,  options.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(msg,  options.toString(),  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  cannot  find  symbol  msg	128	None	replace
488	[BUG]  [BUGGY]  throw  new  MissingOptionException(msg.toString(),  buff,  options);  [CE]  cannot  find  symbol  msg  [FE]                        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(msg.toString(),  buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(msg.toString(),  buff,  options);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  cannot  find  symbol  msg	128	None	replace
489	[BUG]  [BUGGY]  buff.append( "mv.required.addoptions ").append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.addoptions ").append(buffer.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.addoptions ").append(buffer.toString());	  buff.append(   "mv.required.addoptions   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	181	None	replace
490	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.addoptions ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required.addoptions ").append(cmd.toString());	  buff.append(   "mv.required.addoptions   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	181	2	replace
491	[BUG]  [BUGGY]  buff.append( "mv.required.addoptions ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.addoptions ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.addoptions ").append(cmd.toString());	  buff.append(   "mv.required.addoptions   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	181	2	replace
492	[BUG]  [BUGGY]  buff.append( "mv.required.addoptions ").append(Buff.toString(options));  [CE]  cannot  find  symbol  Buff  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.addoptions ").append(Buff.toString(options));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.addoptions ").append(Buff.toString(options));	  buff.append(   "mv.required.addoptions   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  Buff	181	None	replace
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(cmd.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  / ").append(cmd.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	144	2	replace
494	[BUG]  [BUGGY]  buff.append( "  <  / ").append(cmd.toString()).append( "> ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(cmd.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(cmd.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	144	2	replace
495	[BUG]  [BUGGY]  buff.append( "  <  / ").append(mcd.toString()).append( "> ");  [CE]  cannot  find  symbol  mcd  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(mcd.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(mcd.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  cannot  find  symbol  mcd	144	None	replace
496	[BUG]  [BUGGY]  buff.append( "  <  / ").append(mv.toString()).append( "> ");  [CE]  cannot  find  symbol  mv  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(mv.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(mv.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  cannot  find  symbol  mv	144	None	replace
497	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "Required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "Required.options ").append(buff.toString());	  buff.append(   "required.options   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	179	2	replace
498	[BUG]  [BUGGY]  buff.append( "Required.options ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "Required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "Required.options ").append(buff.toString());	  buff.append(   "required.options   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	179	2	replace
499	[BUG]  [BUGGY]  buff.append( "required.options ").append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options ").append(buffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "required.options ").append(buffer.toString());	  buff.append(   "required.options   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	179	None	replace
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "required.options ").append(cmd.toString());	  buff.append(   "required.options   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	179	2	replace
501	[BUG]  [BUGGY]  buff.append( "required.options ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "required.options ").append(cmd.toString());	  buff.append(   "required.options   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	179	2	replace
502	[BUG]  [BUGGY]  bucket.append(buff);  [CE]  cannot  find  symbol  bucket  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.append(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.append(buff);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  bucket	31	None	replace
503	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	109	2	add
504	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	109	2	add
505	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	109	None	add
506	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  expected  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	109	None	add
507	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	133	2	add
508	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	133	2	add
509	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
510	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
511	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
512	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
513	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	133	2	add
514	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  <   ").append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  <   ").append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "  <   ").append(iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
515	[BUG]  [BUGGY]  throw  new  MissingOptionException(mbuff,  buff.toString());  [CE]  cannot  find  symbol  mbuff  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(mbuff,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(mbuff,  buff.toString());	  throw    new    MissingOptionException(md,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  mbuff	63	None	replace
516	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".append( "  <   ").append(buff.toString());  }  [CE]  unclosed  string  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(   "    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  string  literal	135	None	replace
517	[BUG]  [BUGGY]  if(options.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(   "    <       ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	135	None	replace
518	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	184	2	add
519	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	184	2	add
520	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    buff.append( ",n ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	184	2	add
521	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  buff.append( ",n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    buff.append( ",n ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	184	2	add
522	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	184	None	add
523	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	184	None	add
524	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ".required.options       ").append(buff.toString());    buff.append( "mv.required.options   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	5	2	add
525	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ".required.options       ").append(buff.toString());    buff.append( "mv.required.options   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	5	2	add
526	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ".required.options       ").append(buff.toString());    buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	5	2	add
527	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ".required.options       ").append(buff.toString());    buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	5	2	add
528	[BUG]  [BUGGY]  Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();	  if(requiredOptions!=    null)    {    Iterator    <    String>    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
529	[BUG]  [BUGGY]  Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }	  if(requiredOptions!=    null)    {    Iterator    <    String>    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
530	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
531	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
532	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  Iterator  <  String>  buff  =  requiredOptions.iterator();  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  Iterator  <  String>  buff  =  requiredOptions.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    Iterator  <  String>  buff  =  requiredOptions.iterator();	  	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	210	None	add
533	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  Iterator  <  String>  buff  =  options.iterator();  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  Iterator  <  String>  buff  =  options.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    Iterator  <  String>  buff  =  options.iterator();	  	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	210	None	add
534	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	210	2	add
535	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( "n ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	210	2	add
536	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( ",n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    buff.append( ",n ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
537	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( ",n ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  buff.append( ",n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    buff.append( ",n ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
538	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  getMessage());  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  getMessage());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  getMessage());	  Throwables.throw    new    MissingOptionException(buff.toString(),   "       ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
539	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  this);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  this);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  this);	  Throwables.throw    new    MissingOptionException(buff.toString(),   "       ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
540	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(), " ",  requiredOptions);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(), " ",  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(), " ",  requiredOptions);	  Throwables.throw    new    MissingOptionException(buff.toString(),   "       ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
541	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "msg.no.required ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "msg.no.required ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "msg.no.required ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  	252	None	replace
542	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff  =  new  StringBuffer(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff  =  new  StringBuffer(buff.toString());	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer(buff.toString());    	compilable	  [FE]  AssertionFailedError  	20	2	replace
543	[BUG]  [BUGGY]  buff  =  new  StringBuffer(buff.toString());  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff  =  new  StringBuffer(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff  =  new  StringBuffer(buff.toString());	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer(buff.toString());    	compilable	  [FE]  AssertionFailedError  	20	2	replace
544	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer(buff.toString());  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer(buff.toString());    	compilable	  [FE]  ComparisonFailure  	20	2	replace
545	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer(buff.toString());  }  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer(buff.toString());  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer(buff.toString());    	compilable	  [FE]  ComparisonFailure  	20	2	replace
546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( "mv.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	198	2	replace
547	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( "mv.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( "mv.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	198	2	replace
548	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
549	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "n ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
550	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "null ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
551	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "null ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "null ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
552	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
553	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "mv.required.options ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
554	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "   ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
555	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "   ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "   ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
556	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  new  MissingOptionException( "Missing  options:   "  +  buff.toString());  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  new  MissingOptionException( "Missing  options:   "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    new  MissingOptionException( "Missing  options:   "  +  buff.toString());	  	non-compiled	[CE]  unreachable  statement	67	None	add
557	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  throw  new  MissingOptionException( "Missing  options:   "  +  buff.toString());  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  throw  new  MissingOptionException( "Missing  options:   "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    throw  new  MissingOptionException( "Missing  options:   "  +  buff.toString());	  	non-compiled	[CE]  unreachable  statement	67	None	add
558	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  Throwables.checkState(requiredOptions.size()  >  0);  [CE]  cannot  find  symbol  Throwables  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  Throwables.checkState(requiredOptions.size()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    Throwables.checkState(requiredOptions.size()  >  0);	  	non-compiled	[CE]  cannot  find  symbol  Throwables	67	None	add
559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",mv.required.options ").append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ",mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	256	2	replace
560	[BUG]  [BUGGY]  buff.append( ",mv.required.options ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",mv.required.options ").append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ",mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	256	2	replace
561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",mv.required.options, ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",mv.required.options, ").append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ",mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	256	2	replace
562	[BUG]  [BUGGY]  buff.append( ",mv.required.options, ").append(buff.toString());  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",mv.required.options, ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",mv.required.options, ").append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ",mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	256	2	replace
563	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  opts.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  iter  =  opts.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  iter  =  opts.iterator();	  Iterator    <    Option>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	26	None	replace
564	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.requiredOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  iter  =  this.requiredOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  iter  =  this.requiredOptions.iterator();	  Iterator    <    Option>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	26	None	replace
565	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
566	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
567	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
568	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
569	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append(, ",  <   ").append(buff.toString());  [CE]  illegal  start  of  expression  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append(, ",  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append(, ",  <   ").append(buff.toString());	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
570	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".,  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".,  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
571	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".,  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".,  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".,  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
572	[BUG]  [BUGGY]  buff.length()  <  0)  {  throw  new  MissingOptionException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  <  0)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  <  0)  {  throw  new  MissingOptionException( " ");  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(   "   ");    }    	non-compiled	[CE]  not  a  statement	171	None	replace
573	[BUG]  [BUGGY]  buff.length()  ==  0)  {  throw  new  MissingOptionException( " ");  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  ==  0)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  ==  0)  {  throw  new  MissingOptionException( " ");  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(   "   ");    }    	non-compiled	[CE]  not  a  statement	171	None	replace
574	[BUG]  [BUGGY]  buff.length()!=  0)  {  throw  new  MissingOptionException( " ");  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()!=  0)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()!=  0)  {  throw  new  MissingOptionException( " ");  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(   "   ");    }    	non-compiled	[CE]  not  a  statement	171	None	replace
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
576	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
577	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
578	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
579	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "mv.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
580	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "mv.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "mv.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  =   ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
582	[BUG]  [BUGGY]  buff.append( "  =   ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  =   ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
583	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
584	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
585	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
586	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "n  =   ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
588	[BUG]  [BUGGY]  buff.append( "n  =   ").append(buff.toString());  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "n  =   ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
589	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString(),  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString(),  requiredOptions);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "Unexpected    exception:   "    +    buff.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	259	None	replace
590	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "Unexpected    exception:   "    +    buff.toString());    	non-compiled	[CE]  <identifier>  expected	259	None	replace
591	[BUG]  [BUGGY]  Throwables.warning(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());  [CE]  cannot  find  symbol  Throwables  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.warning(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.warning(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "Unexpected    exception:   "    +    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  Throwables	259	None	replace
592	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  cmd);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  cmd);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  cmd);	  throw    new    MissingOptionException(buff.toString(),    options);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	240	None	replace
593	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  options);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  options);	  throw    new    MissingOptionException(buff.toString(),    options);    	non-compiled	[CE]  <identifier>  expected	240	None	replace
594	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  options);	  throw    new    MissingOptionException(buff.toString(),    options);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	240	None	replace
595	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  cmd,  buff.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  cmd,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  cmd,  buff.toString());	  throw    new    MissingOptionException(buff,    path,    buff.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	242	None	replace
596	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  tokenList,  buff.toString());  [CE]  cannot  find  symbol  tokenList  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  tokenList,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  tokenList,  buff.toString());	  throw    new    MissingOptionException(buff,    path,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  tokenList	242	None	replace
597	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  buff.append( "  <   ").append(requiredOptions.toString()).append( ">   ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    buff.append( "  <   ").append(requiredOptions.toString()).append( ">   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	92	2	add
598	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  buff.append( "  <   ").append(requiredOptions.toString()).append( ">   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  buff.append( "  <   ").append(requiredOptions.toString()).append( ">   ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    buff.append( "  <   ").append(requiredOptions.toString()).append( ">   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	92	2	add
599	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	92	2	add
600	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	92	2	add
601	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	92	2	add
602	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(requiredOptions.toString()).append( "> ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	92	2	add
603	[BUG]  [BUGGY]  buff.append( "msg.bad.required.options.null ").append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.options.null ").append(buffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.bad.required.options.null ").append(buffer.toString());	  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	122	None	replace
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }	  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	122	2	replace
605	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }	  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	122	2	replace
606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
607	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	134	2	replace
608	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "n   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ");    buff.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
609	[BUG]  [BUGGY]          buff.append(   "n   ");  buff.append( "n   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "n   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ");    buff.append( "n   ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
610	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( ",n   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ");    buff.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    	42	2	add
611	[BUG]  [BUGGY]          buff.append(   "n   ");  buff.append( ",n   ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( ",n   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ");    buff.append( ",n   ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn    	42	2	add
612	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "ne   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ");    buff.append( "ne   ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
613	[BUG]  [BUGGY]          buff.append(   "n   ");  buff.append( "ne   ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "ne   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ");    buff.append( "ne   ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
614	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "n't   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ");    buff.append( "n't   ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
615	[BUG]  [BUGGY]          buff.append(   "n   ");  buff.append( "n't   ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "n't   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ");    buff.append( "n't   ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
616	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "n  = ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ");    buff.append( "n  = ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
617	[BUG]  [BUGGY]          buff.append(   "n   ");  buff.append( "n  = ");  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "n  = ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ");    buff.append( "n  = ");	  	compilable	  [FE]  ComparisonFailure  	42	2	add
618	[BUG]  [BUGGY]  nisipr.append( "null ");  [CE]  cannot  find  symbol  nisipr  [FE]          AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipr.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipr.append( "null ");	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  cannot  find  symbol  nisipr	148	None	replace
619	[BUG]  [BUGGY]  nisip.append( "null ");  [CE]  cannot  find  symbol  nisip  [FE]            AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.append( "null ");	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  cannot  find  symbol  nisip	148	None	replace
620	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
621	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n  [CE]  unclosed  string  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  unclosed  string  literal	172	None	replace
622	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append( ">   ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    buff.append( "  <   ").append(cmd.toString()).append( ">   ");	  	compilable	  [FE]  ComparisonFailure  	95	2	add
623	[BUG]  [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append( ">   ");  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append( ">   ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    buff.append( "  <   ").append(cmd.toString()).append( ">   ");	  	compilable	  [FE]  ComparisonFailure  	95	2	add
624	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  if(cmd!=  null)  {  buff.append( "  <   ").append(cmd.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    if(cmd!=  null)  {  buff.append( "  <   ").append(cmd.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	95	2	add
625	[BUG]  [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  if(cmd!=  null)  {  buff.append( "  <   ").append(cmd.toString()).append( "> ");  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  if(cmd!=  null)  {  buff.append( "  <   ").append(cmd.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    if(cmd!=  null)  {  buff.append( "  <   ").append(cmd.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	95	2	add
626	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",n ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",n ").append(options.toString());	  buff.append(   ",   ").append(options.toString());    	compilable	  [FE]  AssertionFailedError  	142	2	replace
627	[BUG]  [BUGGY]  buff.append( ",n ").append(options.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",n ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",n ").append(options.toString());	  buff.append(   ",   ").append(options.toString());    	compilable	  [FE]  AssertionFailedError  	142	2	replace
628	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",   ").append(options.toString());  buff.append( ",   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ",   ").append(options.toString());    buff.append( ",   ").append(options.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	141	2	add
629	[BUG]  [BUGGY]  buff.append(   ",   ").append(options.toString());  buff.append( ",   ").append(options.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",   ").append(options.toString());  buff.append( ",   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",   ").append(options.toString());    buff.append( ",   ").append(options.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	141	2	add
630	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",   ").append(options.toString());  if(options!=  null)  {  buff.append( ", ").append(options.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ",   ").append(options.toString());    if(options!=  null)  {  buff.append( ", ").append(options.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	141	2	add
631	[BUG]  [BUGGY]  buff.append(   ",   ").append(options.toString());  if(options!=  null)  {  buff.append( ", ").append(options.toString());  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",   ").append(options.toString());  if(options!=  null)  {  buff.append( ", ").append(options.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",   ").append(options.toString());    if(options!=  null)  {  buff.append( ", ").append(options.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	141	2	add
632	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  aughtExceptionHandler  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  aughtExceptionHandler.handleMissingException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	aughtExceptionHandler.handleMissingException(String.valueOf(buff.toString()));	  if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  cannot  find  symbol  aughtExceptionHandler	193	None	replace
633	[BUG]  [BUGGY]  buff.append( "msg.required.toString ").append(buffer.toString());  [CE]  cannot  find  symbol  buffer  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.toString ").append(buffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.toString ").append(buffer.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	207	None	replace
634	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.error.toString ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.error.toString ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
635	[BUG]  [BUGGY]  buff.append( "msg.required.error.toString ").append(buff.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.error.toString ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.error.toString ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.toString ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.bad.required.toString ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
637	[BUG]  [BUGGY]  buff.append( "msg.bad.required.toString ").append(buff.toString());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.toString ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.bad.required.toString ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
638	[BUG]  [BUGGY]  buff.append( "  <   ").append(mv.toString());  [CE]  cannot  find  symbol  mv  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(mv.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(mv.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol  mv	36	None	replace
639	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(options.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
640	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(options.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
641	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString()).append('n');	  bucket.append(buff.toString()).append('n');    	compilable	  [FE]  AssertionFailedError  	124	2	replace
642	[BUG]  [BUGGY]  buff.append(buff.toString()).append('n');  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString()).append('n');	  bucket.append(buff.toString()).append('n');    	compilable	  [FE]  AssertionFailedError  	124	2	replace
643	[BUG]  [BUGGY]  buff.append(buffer.toString()).append('n');  [CE]  cannot  find  symbol  buffer  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buffer.toString()).append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buffer.toString()).append('n');	  bucket.append(buff.toString()).append('n');    	non-compiled	[CE]  cannot  find  symbol  buffer	124	None	replace
644	[BUG]  [BUGGY]  buff.append(md.toString()).append('n');  [CE]  cannot  find  symbol  md  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(md.toString()).append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(md.toString()).append('n');	  bucket.append(buff.toString()).append('n');    	non-compiled	[CE]  cannot  find  symbol  md	124	None	replace
645	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  option.toString());  [CE]  cannot  find  symbol  option  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  option.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  option: "  +  option.toString());	  throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  option	65	None	replace
646	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [CE]  <identifier>  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());	  throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    	non-compiled	[CE]  <identifier>  expected	65	None	replace
647	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",native ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",native ").append(buff.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	185	2	replace
648	[BUG]  [BUGGY]  buff.append( ",native ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",native ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",native ").append(buff.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	185	2	replace
649	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	30	2	add
650	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	30	2	add
651	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
652	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)	  	compilable	  [FE]  ComparisonFailure  	30	2	add
653	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)	  	compilable	  [FE]  ComparisonFailure  	30	2	add
654	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  Missing  [CE]  '('  or  '['  expected  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  Missing  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  Missing	  	non-compiled	[CE]  '('  or  '['  expected	30	None	add
655	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
656	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
657	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
658	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
659	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
660	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append('n').append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
661	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append('n').append(buff.toString());  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append('n').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append('n').append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
662	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	215	None	replace
663	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	201	None	replace
664	[BUG]  [BUGGY]  throw  new  MissingOptionException(md,  null,  buff.toString());  [CE]  cannot  find  symbol  md  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(md,  null,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(md,  null,  buff.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  md	201	None	replace
665	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	201	None	replace
666	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  null,  buff.toString());  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  null,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  null,  buff.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	201	None	replace
667	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  iter,  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  iter,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  iter,  options);	  throw    new    MissingOptionException(buff.toString(),    iter);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	159	None	replace
668	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(iter.toString()),  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(iter.toString()),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(iter.toString()),  buff);	  throw    new    MissingOptionException(buff.toString(),    iter);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	159	None	replace
669	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  iter);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  iter);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  iter);	  throw    new    MissingOptionException(buff.toString(),    iter);    	non-compiled	[CE]  <identifier>  expected	159	None	replace
670	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  iter,  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  iter,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  iter,  requiredOptions);	  throw    new    MissingOptionException(buff.toString(),    iter);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	159	None	replace
671	[BUG]  [BUGGY]  throw  new  MissingOptionException(options.toString(),  buff,  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(options.toString(),  buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(options.toString(),  buff,  options);	  throw    new    MissingOptionException(buff,    options.toString(),    options);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	183	None	replace
672	[BUG]  [BUGGY]  throw  new  MissingOptionException(md,  options.toString(),  buff);  [CE]  cannot  find  symbol  md  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(md,  options.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(md,  options.toString(),  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    options);    	non-compiled	[CE]  cannot  find  symbol  md	183	None	replace
673	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",  <   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	54	2	replace
674	[BUG]  [BUGGY]  buff.append( ",  <   ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",  <   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	54	2	replace
675	[BUG]  [BUGGY]  append( "  <   ").append(buff.toString()).append( "> ");  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	append( "  <   ").append(buff.toString()).append( "> ");	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
676	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  requiredOptions.add(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  requiredOptions.add(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    	compilable	  [FE]  AssertionFailedError  	91	2	replace
677	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  requiredOptions.add(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  requiredOptions.add(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  requiredOptions.add(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    	compilable	  [FE]  AssertionFailedError  	91	2	replace
678	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options. ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( "mv.required.options. ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
679	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options. ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options. ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( "mv.required.options. ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
680	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ").append(options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required.options ").append(options.toString());	  buff.append(   "mv.required.options   ".toString());    	compilable	  [FE]  AssertionFailedError  	16	2	replace
681	[BUG]  [BUGGY]  buff.append( "mv.required.options ").append(options.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ").append(options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ").append(options.toString());	  buff.append(   "mv.required.options   ".toString());    	compilable	  [FE]  AssertionFailedError  	16	2	replace
682	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ").toString();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required.options ").toString();	  buff.append(   "mv.required.options   ".toString());    	compilable	  [FE]  AssertionFailedError  	16	2	replace
683	[BUG]  [BUGGY]  buff.append( "mv.required.options ").toString();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ").toString();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ").toString();	  buff.append(   "mv.required.options   ".toString());    	compilable	  [FE]  AssertionFailedError  	16	2	replace
684	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString());  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString());	  throw    new    MissingOptionException(buff,    path.toString());    	non-compiled	[CE]  cannot  find  symbol  option	243	None	replace
685	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next()).append( "n ");  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next()).append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next()).append( "n ");	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	149	None	replace
686	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  options,   " ");  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  options,   " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  options,   " ");	  throw    new    MissingOptionException(buff.toString(),    options,   "       ");    	non-compiled	[CE]  <identifier>  expected	167	None	replace
687	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  requiredOptions, "   ");  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  requiredOptions, "   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  requiredOptions, "   ");	  throw    new    MissingOptionException(buff.toString(),    options,   "       ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	167	None	replace
688	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString())+ ") ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException(String.valueOf(buff.toString())+ ") ");	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +       ")   ");    	compilable	  [FE]  ComparisonFailure  	194	2	replace
689	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString())+ ") ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString())+ ") ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString())+ ") ");	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +       ")   ");    	compilable	  [FE]  ComparisonFailure  	194	2	replace
690	[BUG]  [BUGGY]  Iterator  <  Option>  opts  =  iter.options.iterator();  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  opts  =  iter.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  opts  =  iter.options.iterator();	  Iterator    <    Option>    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol  options	138	None	replace
691	[BUG]  [BUGGY]  Iterator  <  Option>  opts  =  iter.opts.iterator();  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  opts  =  iter.opts.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  opts  =  iter.opts.iterator();	  Iterator    <    Option>    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol  opts	138	None	replace
692	[BUG]  [BUGGY]  Iterator  <  Option>  opts  =  this.options.iterator();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  opts  =  this.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  opts  =  this.options.iterator();	  Iterator    <    Option>    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>       ");    	compilable	  [FE]  AssertionFailedError  	235	2	replace
694	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>       ");    	compilable	  [FE]  AssertionFailedError  	235	2	replace
695	[BUG]  [BUGGY]  buff.append('  <  ').append(buff.toString());  [CE]  unclosed  character  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('  <  ').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('  <  ').append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('>').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('>').append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	52	2	replace
697	[BUG]  [BUGGY]  buff.append('>').append(buff.toString());  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('>').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('>').append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	52	2	replace
698	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(msg,  buff.toString());  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(msg,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(msg,  buff.toString());	  throw    new    MissingOptionException(msg,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	200	None	replace
699	[BUG]  [BUGGY]  foundError(buff,  buff.toString());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  buff.toString());	  foundError(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
700	[BUG]  [BUGGY]  foundError(buff,  iter.toString());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  iter.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  iter.toString());	  foundError(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
701	[BUG]  [BUGGY]  foundOptions(buff,  requiredOptions.size()  -  2);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  requiredOptions.size()  -  2);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  requiredOptions.size()  -  2);	  foundOptions(buff,    requiredOptions.size());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
702	[BUG]  [BUGGY]  foundOptions(buff,  buff.size());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  buff.size());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  buff.size());	  foundOptions(buff,    requiredOptions.size());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
703	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.checkRequiredOptions ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.checkRequiredOptions ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	165	2	replace
704	[BUG]  [BUGGY]  buff.append( "mv.checkRequiredOptions ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.checkRequiredOptions ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.checkRequiredOptions ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	165	2	replace
705	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   ",   ").append(iter.next());  buff.append( ",   ").append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   ",   ").append(iter.next());    buff.append( ",   ").append(iter.next());	  	compilable	  [FE]  NoSuchElementException  	46	2	add
706	[BUG]  [BUGGY]          buff.append(   ",   ").append(iter.next());  buff.append( ",   ").append(iter.next());  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   ",   ").append(iter.next());  buff.append( ",   ").append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   ",   ").append(iter.next());    buff.append( ",   ").append(iter.next());	  	compilable	  [FE]  NoSuchElementException  	46	2	add
707	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   ",   ").append(iter.next());  buff.append(',').append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   ",   ").append(iter.next());    buff.append(',').append(iter.next());	  	compilable	  [FE]  NoSuchElementException  	46	2	add
708	[BUG]  [BUGGY]          buff.append(   ",   ").append(iter.next());  buff.append(',').append(iter.next());  [FE]  NoSuchElementException  [FE]      NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   ",   ").append(iter.next());  buff.append(',').append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   ",   ").append(iter.next());    buff.append(',').append(iter.next());	  	compilable	  [FE]  NoSuchElementException  	46	2	add
709	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
710	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
711	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
712	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append( "null ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  else  {  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
714	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
715	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ", ").append(cmd.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	112	2	replace
716	[BUG]  [BUGGY]  buff.append( ", ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(cmd.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	112	2	replace
717	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",n ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",n ").append(cmd.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	112	2	replace
718	[BUG]  [BUGGY]  buff.append( ",n ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",n ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",n ").append(cmd.toString());	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	112	2	replace
719	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  <identifier>  expected	173	None	replace
720	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.n  [CE]  ')'  expected  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.n  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.n	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  ')'  expected	173	None	replace
721	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
722	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  buff.append( ", ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    buff.append( ", ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	111	2	add
723	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  buff.append( ", ").append(cmd.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  buff.append( ", ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    buff.append( ", ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	111	2	add
724	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  expected;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	111	None	add
725	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  expected  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	111	None	add
726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append('    <       ").append(buff.toString()).append(   ">       ");    	compilable	  [FE]  AssertionFailedError  	236	2	replace
727	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append('    <       ").append(buff.toString()).append(   ">       ");    	compilable	  [FE]  AssertionFailedError  	236	2	replace
728	[BUG]  [BUGGY]  buff.append('  <  ').append(buff.toString()).append( "> ");  [CE]  unclosed  character  literal  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('  <  ').append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('  <  ').append(buff.toString()).append( "> ");	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append('    <       ").append(buff.toString()).append(   ">       ");    	non-compiled	[CE]  unclosed  character  literal	236	None	replace
729	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( "mv.required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( "mv.required.options   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	10	2	add
730	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( "mv.required.options   ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( "mv.required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( "mv.required.options   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	10	2	add
731	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  org.apache.commons.cli.CommandLine@49cd6d79  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ",mv.required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( ",mv.required.options   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  org.apache.commons.cli.CommandLine@49cd6d79  	10	2	add
732	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ",mv.required.options   ").append(cmd.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  org.apache.commons.cli.CommandLine@49cd6d79  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ",mv.required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( ",mv.required.options   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  org.apache.commons.cli.CommandLine@49cd6d79  	10	2	add
733	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ".required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( ".required.options   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	10	2	add
734	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ".required.options   ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ".required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( ".required.options   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	10	2	add
735	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",mv.required.options ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
736	[BUG]  [BUGGY]  buff.append( ",mv.required.options ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",mv.required.options ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
737	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options. ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required.options. ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
738	[BUG]  [BUGGY]  buff.append( "mv.required.options. ");  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options. ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options. ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
739	[BUG]  [BUGGY]  buff.append( "mv.required.options ",  options);  [CE]  no  suitable  method  found  for  append(String,Options)  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ",  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ",  options);	          buff.append(   "mv.required.options   ");    	non-compiled	[CE]  no  suitable  method  found  for  append(String,Options)	45	None	replace
740	[BUG]  [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()));  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  not  a  statement	228	None	replace
741	[BUG]  [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()), " ");  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()), " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(String.valueOf(buff.toString()), " ");	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  not  a  statement	228	None	replace
742	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
743	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
744	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
745	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
746	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( "n ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
747	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( "n ");  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( "n ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
748	[BUG]  [BUGGY]  buff.add(buff);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.add(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.add(buff);	  foundOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
749	[BUG]  [BUGGY]  if(buff!=  null)  {  buff.add(buff);  }  else  {  requiredOptions.add(buff);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  buff.add(buff);  }  else  {  requiredOptions.add(buff);  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  buff.add(buff);  }  else  {  requiredOptions.add(buff);  }	  foundOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol	152	None	replace
750	[BUG]  [BUGGY]  if(buff!=  null)  {  foundOptions.add(buff);  }  [CE]  cannot  find  symbol  foundOptions  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  foundOptions.add(buff);  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  foundOptions.add(buff);  }	  foundOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol  foundOptions	152	None	replace
751	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  requiredOptions.add(buff);  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=  null)  {  requiredOptions.add(buff);  }	  foundOptions.add(buff);    	compilable	  [FE]  AssertionFailedError  	152	2	replace
752	[BUG]  [BUGGY]  if(buff!=  null)  {  requiredOptions.add(buff);  }  [FE]  AssertionFailedError  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  requiredOptions.add(buff);  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  requiredOptions.add(buff);  }	  foundOptions.add(buff);    	compilable	  [FE]  AssertionFailedError  	152	2	replace
753	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
754	[BUG]  [BUGGY]  buff.append('n');  buff.append('n');  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
755	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('m');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('m');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
756	[BUG]  [BUGGY]  buff.append('n');  buff.append('m');  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('m');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('m');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
757	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('N');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('N');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
758	[BUG]  [BUGGY]  buff.append('n');  buff.append('N');  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('N');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('N');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
759	[BUG]  [BUGGY]  buff.append('n');  buff.append( "n');  [CE]  unclosed  string  literal  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append( "n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append( "n');	  	non-compiled	[CE]  unclosed  string  literal	237	None	add
760	[BUG]  [BUGGY]  Iterator  options  =  opts.iterator();  [CE]  cannot  find  symbol  opts  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  options  =  opts.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  options  =  opts.iterator();	  Iterator    options    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol  opts	130	None	replace
761	[BUG]  [BUGGY]  Iterator  options  =  this.options.iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  options  =  this.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  options  =  this.options.iterator();	  Iterator    options    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	130	None	replace
762	[BUG]  [BUGGY]  Iterator  options  =  iter.options.iterator();  [CE]  cannot  find  symbol  options  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  options  =  iter.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  options  =  iter.options.iterator();	  Iterator    options    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol  options	130	None	replace
763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");	          buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    	compilable	  [FE]  AssertionFailedError  	262	2	replace
764	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.toString()).append( ".> ");	          buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    	compilable	  [FE]  AssertionFailedError  	262	2	replace
765	[BUG]  [BUGGY]  AllOptions(buff);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(buff);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(buff);	  AllOptions(opts);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
766	[BUG]  [BUGGY]  AllOptions(cmd);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(cmd);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(cmd);	  AllOptions(opts);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
767	[BUG]  [BUGGY]  AllOptions(requiredOptions);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(requiredOptions);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(requiredOptions);	  AllOptions(opts);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
768	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString()).append( "null ");	  bucket.append(buff.toString()).append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	125	2	replace
769	[BUG]  [BUGGY]  buff.append(buff.toString()).append( "null ");  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString()).append( "null ");	  bucket.append(buff.toString()).append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	125	2	replace
770	[BUG]  [BUGGY]  buff.append(buffer.toString()).append( "null ");  [CE]  cannot  find  symbol  buffer  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buffer.toString()).append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buffer.toString()).append( "null ");	  bucket.append(buff.toString()).append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol  buffer	125	None	replace
771	[BUG]  [BUGGY]  bucket.append(buff.toString()).append( "null ");  [CE]  cannot  find  symbol  bucket  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.append(buff.toString()).append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.append(buff.toString()).append( "null ");	  bucket.append(buff.toString()).append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol  bucket	125	None	replace
772	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append( "no ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString()).append( "no ");	  bucket.append(buff.toString()).append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	125	2	replace
773	[BUG]  [BUGGY]  buff.append(buff.toString()).append( "no ");  [FE]  AssertionFailedError  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append( "no ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString()).append( "no ");	  bucket.append(buff.toString()).append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	125	2	replace
774	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "n   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ").append(cmd.toString());    buff.append( "n   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
775	[BUG]  [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "n   ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "n   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ").append(cmd.toString());    buff.append( "n   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
776	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  if(cmd!=  null)  {  buff.append( "n   ").append(cmd.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ").append(cmd.toString());    if(cmd!=  null)  {  buff.append( "n   ").append(cmd.toString());  }	  	compilable	  [FE]  ComparisonFailure  	48	2	add
777	[BUG]  [BUGGY]          buff.append(   "n   ").append(cmd.toString());  if(cmd!=  null)  {  buff.append( "n   ").append(cmd.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  if(cmd!=  null)  {  buff.append( "n   ").append(cmd.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ").append(cmd.toString());    if(cmd!=  null)  {  buff.append( "n   ").append(cmd.toString());  }	  	compilable	  [FE]  ComparisonFailure  	48	2	add
778	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append('n').append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ").append(cmd.toString());    buff.append('n').append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
779	[BUG]  [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append('n').append(cmd.toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append('n').append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ").append(cmd.toString());    buff.append('n').append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
780	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "n  = ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ").append(cmd.toString());    buff.append( "n  = ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
781	[BUG]  [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "n  = ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "n  = ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ").append(cmd.toString());    buff.append( "n  = ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
782	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	253	2	add
783	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append( ", ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	253	2	add
784	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	253	None	add
785	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  expected  [CE]  not  a  statement  [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  expected  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    junit.framework.ComparisonFailure:  expected	  	non-compiled	[CE]  not  a  statement	253	None	add
786	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options. ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required.options. ").append(cmd.toString());	  buff.append(   "mv.required.options   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	11	2	replace
787	[BUG]  [BUGGY]  buff.append( "mv.required.options. ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options. ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options. ").append(cmd.toString());	  buff.append(   "mv.required.options   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	11	2	replace
788	[BUG]  [BUGGY]  buff.append( "mv.required.options ").append(cmd.getName());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ").append(cmd.getName());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ").append(cmd.getName());	  buff.append(   "mv.required.options   ").append(cmd.toString());    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
789	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  Iterator  <  String>  iter  =  opts.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  Iterator  <  String>  iter  =  opts.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  Iterator  <  String>  iter  =  opts.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }	  Iterator    <    String>    iter    =    opts.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
790	[BUG]  [BUGGY]  buff.handleMissingException( " ");  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.handleMissingException( " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
791	[BUG]  [BUGGY]  assistExceptionHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  assistExceptionHandler  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  assistExceptionHandler.handleMissingException( " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	assistExceptionHandler.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  assistExceptionHandler	227	None	replace
792	[BUG]  [BUGGY]  luckHandler.handleMissingException( " ");  [CE]  cannot  find  symbol  luckHandler  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  luckHandler.handleMissingException( " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	luckHandler.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  luckHandler	227	None	replace
793	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	190	2	add
794	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append( "> ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	190	2	add
795	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	190	2	add
796	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	190	2	add
797	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	190	2	add
798	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	190	2	add
799	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	190	2	add
800	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	190	2	add
801	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	71	2	add
802	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "n ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	71	2	add
803	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	71	2	add
804	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	71	2	add
805	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ".toString());	  	compilable	  [FE]  ComparisonFailure  	71	2	add
806	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ".toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ".toString());	  	compilable	  [FE]  ComparisonFailure  	71	2	add
807	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	71	2	add
808	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "mv.required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "mv.required.options ");	  	compilable	  [FE]  ComparisonFailure  	71	2	add
809	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "n ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "n ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	71	2	add
810	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "n ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "n ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "n ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	71	2	add
811	[BUG]  [BUGGY]  foundOptions  =  true;  [CE]  cannot  find  symbol  foundOptions  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions  =  true;  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions  =  true;	  foundOptions    =    false;    	non-compiled	[CE]  cannot  find  symbol  foundOptions	153	None	replace
812	[BUG]  [BUGGY]  buff  =  false;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff  =  false;  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff  =  false;	  foundOptions    =    false;    	non-compiled	[CE]  incompatible  types	153	None	replace
813	[BUG]  [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  not  a  statement	32	None	replace
814	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  not  a  statement	32	None	replace
815	[BUG]  [BUGGY]  nisip.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.length()  >  0)  {  throw  new  MissingOptionException(Buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  not  a  statement	32	None	replace
816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "n ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	74	2	replace
817	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "n ");  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "n ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	74	2	replace
818	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(options.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	251	None	replace
819	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(options.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	251	None	replace
820	[BUG]  [BUGGY]  Throwables.checkArgument(buff.length()  >  0);  [CE]  cannot  find  symbol  Throwables  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.checkArgument(buff.length()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.checkArgument(buff.length()  >  0);	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.checkArgument(buff.length()    >    0);    	non-compiled	[CE]  cannot  find  symbol  Throwables	21	None	replace
821	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff.length()  >  0);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff.length()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff.length()  >  0);	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.checkArgument(buff.length()    >    0);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	21	None	replace
822	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( "mv.required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( "mv.required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	180	2	add
823	[BUG]  [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( "mv.required.addoptions   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( "mv.required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( "mv.required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	180	2	add
824	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ".required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( ".required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	180	2	add
825	[BUG]  [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ".required.addoptions   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ".required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( ".required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	180	2	add
826	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
827	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
828	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  requiredOptions.add(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  requiredOptions.add(buff.toString());  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
829	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  requiredOptions.add(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  requiredOptions.add(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  requiredOptions.add(buff.toString());  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
830	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
831	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
832	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
833	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
834	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	89	2	replace
835	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	89	2	replace
836	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  null> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  null> ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "null   ");    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
837	[BUG]  [BUGGY]  buff.append( "  <  null> ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  null> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  null> ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "null   ");    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
838	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.toString();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.toString();	  foundOptions    =    buff.toString();    	compilable	  [FE]  AssertionFailedError  	151	2	replace
839	[BUG]  [BUGGY]  buff.toString();  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.toString();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.toString();	  foundOptions    =    buff.toString();    	compilable	  [FE]  AssertionFailedError  	151	2	replace
840	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.length();	  buff.length()    {    throw    new    MissingOptionException(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	169	2	replace
841	[BUG]  [BUGGY]  buff.length();  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length();	  buff.length()    {    throw    new    MissingOptionException(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	169	2	replace
842	[BUG]  [BUGGY]  buff.length()  {  throw  new  MissingOptionException( " ");  }  [CE]  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  {  throw  new  MissingOptionException( " ");  }	  buff.length()    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  	169	None	replace
843	[BUG]  [BUGGY]  buff.length()  {  throw  new  MissingOptionException(buff.toString(),  requiredOptions);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  {  throw  new  MissingOptionException(buff.toString(),  requiredOptions);  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  {  throw  new  MissingOptionException(buff.toString(),  requiredOptions);  }	  buff.length()    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  ';'  expected	169	None	replace
844	[BUG]  [BUGGY]  Iterator  iter  =  this.options.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  this.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  this.options.iterator();	  Iterator    iter    =    options.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	139	None	replace
845	[BUG]  [BUGGY]  buff.append( "  <   ").append(buffer.toString()  + "> ");  [CE]  cannot  find  symbol  buffer  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(buffer.toString()  + "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(buffer.toString()  + "> ");	  buff.append(   "    <       ").append(buffer.toString()));    	non-compiled	[CE]  cannot  find  symbol  buffer	101	None	replace
846	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	62	2	replace
847	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	62	2	replace
848	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
849	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
850	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
851	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
852	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ",n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ",n   ").append(buff.toString());    buff.append( ",n   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	105	2	add
853	[BUG]  [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ",n   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ",n   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",n   ").append(buff.toString());    buff.append( ",n   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	105	2	add
854	[BUG]  [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ",n ",).append(buff.toString());  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ",n ",).append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",n   ").append(buff.toString());    buff.append( ",n ",).append(buff.toString());	  	non-compiled	[CE]  illegal  start  of  expression	105	None	add
855	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('  [CE]  illegal  line  end  in  character  literal  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('n');    }    	non-compiled	[CE]  illegal  line  end  in  character  literal	175	None	replace
856	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
857	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
858	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff);	  Throwables.throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
859	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));	  Throwables.throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
860	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  requiredOptions);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  requiredOptions);	  Throwables.throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
861	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  e);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  e);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  e);	  Throwables.throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
862	[BUG]  [BUGGY]  buff.append( "  <   ").append(cmd.getName()).append( "> ");  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.getName()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(cmd.getName()).append( "> ");	  buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
863	[BUG]  [BUGGY]  buff.append( "  <   ").append(cmd.getValue()).append( "> ");  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.getValue()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(cmd.getValue()).append( "> ");	  buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
864	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	55	2	add
865	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	55	2	add
866	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	55	2	add
867	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	55	2	add
868	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	55	2	add
869	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	55	2	add
870	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  cmd.toString(),  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  cmd.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  cmd.toString(),  buff);	  throw    new    MissingOptionException(buff,    str.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	239	None	replace
871	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  tokenList.toString(),  buff);  [CE]  cannot  find  symbol  tokenList  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  tokenList.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  tokenList.toString(),  buff);	  throw    new    MissingOptionException(buff,    str.toString(),    buff);    	non-compiled	[CE]  cannot  find  symbol  tokenList	239	None	replace
872	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString(),  buff);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  options.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  options.toString(),  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    buff);    	non-compiled	[CE]  <identifier>  expected	220	None	replace
873	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  iter);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  iter);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  iter);	  throw    new    MissingOptionException(buff,    options.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	220	None	replace
874	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
875	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
876	[BUG]  [BUGGY]  if(requiredOptions.contains(buff))  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.contains(buff))  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.contains(buff))  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
877	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions  ==  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions  ==  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
878	[BUG]  [BUGGY]  AllOptions(buff,  options);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(buff,  options);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
879	[BUG]  [BUGGY]  AllOptions(opts,  requiredOptions);  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(opts,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(opts,  requiredOptions);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  opts	154	None	replace
880	[BUG]  [BUGGY]  AllOptions(buff,  requiredOptions,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(buff,  requiredOptions,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(buff,  requiredOptions,  options);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
881	[BUG]  [BUGGY]  AllOptions(buff,  requiredOptions,  opts);  [CE]  cannot  find  symbol  opts  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(buff,  requiredOptions,  opts);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(buff,  requiredOptions,  opts);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  opts	154	None	replace
882	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	90	2	add
883	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	90	2	add
884	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
885	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
886	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions  ==  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions  ==  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
887	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions  ==  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions  ==  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions  ==  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
888	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
889	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
890	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append(  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append(  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    buff.append( "  <   ").append(buff.toString()).append( "> ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append(	  	non-compiled	[CE]  illegal  start  of  expression	90	None	add
891	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
892	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
893	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
894	[BUG]  [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "  <   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
895	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.values().iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.values().iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.values().iterator();	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	156	None	replace
896	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  requiredOptions);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	115	None	replace
897	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  options);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	115	None	replace
898	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  e);  [CE]  cannot  find  symbol  e  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  e);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  e);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  cannot  find  symbol  e	115	None	replace
899	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  cmd);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  cmd);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  cmd);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	115	None	replace
900	[BUG]  [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    	non-compiled	[CE]  ')'  expected	28	None	replace
901	[BUG]  [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    	non-compiled	[CE]  ')'  expected	28	None	replace
902	[BUG]  [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(requiredOptions.next());  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(requiredOptions.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(requiredOptions.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    	non-compiled	[CE]  ')'  expected	28	None	replace
903	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
904	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
905	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options. ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
906	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options. ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options. ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
907	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
908	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]        junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
909	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( ",mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( ",mv.required.options ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
910	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( ",mv.required.options ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]          junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( ",mv.required.options ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( ",mv.required.options ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
911	[BUG]  [BUGGY]  .append( "n ");  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  .append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	.append( "n ");	  buff.append(buff.toString());    .append(buff.toString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
912	[BUG]  [BUGGY]  .append( ": ").append(buff.toString());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  .append( ": ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	.append( ": ").append(buff.toString());	  buff.append(buff.toString());    .append(buff.toString());    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
913	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(cmd.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ").append(cmd.toString());    if(options!=  null)  {  buff.append( "mv.required.options   ").append(cmd.toString());  }	  	compilable	  [FE]  ComparisonFailure  	10	2	add
914	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(cmd.toString());  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(cmd.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ").append(cmd.toString());    if(options!=  null)  {  buff.append( "mv.required.options   ").append(cmd.toString());  }	  	compilable	  [FE]  ComparisonFailure  	10	2	add
915	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
916	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
917	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions  ==  null)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions  ==  null)  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
918	[BUG]  [BUGGY]  if(requiredOptions  ==  null)  {  buff.append( ", ");  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions  ==  null)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions  ==  null)  {  buff.append( ", ");  }	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	compilable	  [FE]  AssertionFailedError  	211	2	replace
919	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(	          buff.append(       "mv.required.options       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
920	[BUG]  [BUGGY]  if(opts!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(opts!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(opts!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(	          buff.append(       "mv.required.options       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
921	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    buff.append( "  <   ").append(cmd.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	95	2	add
922	[BUG]  [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append('>');  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    buff.append( "  <   ").append(cmd.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	95	2	add
923	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[ ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "[ ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
924	[BUG]  [BUGGY]  buff.append( "[ ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[ ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "[ ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
925	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.options.no-required ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.options.no-required ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
926	[BUG]  [BUGGY]  buff.append( "msg.required.options.no-required ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.options.no-required ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.options.no-required ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
927	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	197	2	add
928	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	197	2	add
929	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options	  	non-compiled	[CE]  unclosed  string  literal	197	None	add
930	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(	  	non-compiled	[CE]  illegal  start  of  expression	197	None	add
931	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	88	2	add
932	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	88	2	add
933	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  }   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  }   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	54	2	replace
934	[BUG]  [BUGGY]  buff.append( "  }   ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  }   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  }   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	54	2	replace
935	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  iter);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  iter);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  iter);	  throw    new    MissingOptionException(buff.toString(),    iter);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	159	None	replace
936	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  iter);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  iter);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString(),  iter);	  throw    new    MissingOptionException(buff.toString(),    iter);    	non-compiled	[CE]  cannot  find  symbol  option	159	None	replace
937	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  message);  [CE]  cannot  find  symbol  message  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  message);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  message);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  cannot  find  symbol  message	115	None	replace
938	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString(),  options));  [CE]  no  suitable  method  found  for  valueOf(String,Options)  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString(),  options));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString(),  options));	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  no  suitable  method  found  for  valueOf(String,Options)	115	None	replace
939	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "required.options   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	178	2	add
940	[BUG]  [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "required.options   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "required.options   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	178	2	add
941	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString()  [CE]  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    if(options!=  null)  {  buff.append(   "mv.required.options     ").append(buff.toString());  }  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString()  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString()	  	non-compiled	[CE]  	3	None	add
942	[BUG]  [BUGGY]  buff.append( "  <   ").append(buffer.toString()).append('>');  [CE]  cannot  find  symbol  buffer  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(buffer.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(buffer.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  cannot  find  symbol  buffer	205	None	replace
943	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  / ").append(buff.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	205	2	replace
944	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append('>');  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(buff.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	205	2	replace
945	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +   ") ");  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +   ") ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +   ") ");	  Throwables.throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
946	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  0);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()),  0);	  Throwables.throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
947	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  '/'));  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  '/'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(String.valueOf(buff.toString()  +  '/'));	  Throwables.throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  <identifier>  expected	116	None	replace
948	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	30	2	add
949	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	30	2	add
950	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
951	[BUG]  [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  String>  iter  =  requiredOptions.iterator();	  if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
952	[BUG]  [BUGGY]  nisipIterator  <  String>  buff  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  String>  buff  =  requiredOptions.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  String>  buff  =  requiredOptions.iterator();	  if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
953	[BUG]  [BUGGY]  nisipIterator  <  String>  buff  =  iter.next();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  String>  buff  =  iter.next();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  String>  buff  =  iter.next();	  if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
954	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  options,  requiredOptions);	  throw    new    MissingOptionException(buff,    options.toString(),    requiredOptions);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	127	None	replace
955	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  neededOptions);  [CE]  cannot  find  symbol  neededOptions  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  neededOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  options,  neededOptions);	  throw    new    MissingOptionException(buff,    options.toString(),    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  neededOptions	127	None	replace
956	[BUG]  [BUGGY]  nisips.add(buff);  [CE]  cannot  find  symbol  nisips  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisips.add(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisips.add(buff);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  nisips	219	None	replace
957	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ";n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ";n ");	  buff.append(buff.toString());    if(buff.length()    >    0)    {    buff.append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	72	2	replace
958	[BUG]  [BUGGY]  buff.append( ";n ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ";n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ";n ");	  buff.append(buff.toString());    if(buff.length()    >    0)    {    buff.append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	72	2	replace
959	[BUG]  [BUGGY]  nisipIterator  <  Object>  iter  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  Object>  iter  =  requiredOptions.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  Object>  iter  =  requiredOptions.iterator();	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
960	[BUG]  [BUGGY]  nisipIterator  <  String>  buff  =  options.iterator();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  String>  buff  =  options.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  String>  buff  =  options.iterator();	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
961	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
962	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
963	[BUG]  [BUGGY]  uncoveredOptions  =  true;  [CE]  cannot  find  symbol  uncoveredOptions  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  uncoveredOptions  =  true;  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	uncoveredOptions  =  true;	  foundOptions    =    false;    	non-compiled	[CE]  cannot  find  symbol  uncoveredOptions	153	None	replace
964	[BUG]  [BUGGY]  requiredOptions  =  false;  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  requiredOptions  =  false;  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	requiredOptions  =  false;	  foundOptions    =    false;    	non-compiled	[CE]  incompatible  types	153	None	replace
965	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
966	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  return;  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  return;  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
967	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  return;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  return;  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  return;  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	58	2	replace
968	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
969	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
970	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
971	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
972	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
973	[BUG]  [BUGGY]  foundOptions(buff,  iter.toString());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  iter.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  iter.toString());	  foundOptions(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
974	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
975	[BUG]  [BUGGY]  Aleger  <?>  requiredOptions  =  options.getOptions();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Aleger  <?>  requiredOptions  =  options.getOptions();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Aleger  <?>  requiredOptions  =  options.getOptions();	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    >=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
976	[BUG]  [BUGGY]  Aleger  <?>  requiredOptions  =  options.get(buff.toString());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Aleger  <?>  requiredOptions  =  options.get(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Aleger  <?>  requiredOptions  =  options.get(buff.toString());	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    >=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
977	[BUG]  [BUGGY]  Throw  new  MissingException(String.valueOf(buff.toString()));  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingException(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throw    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  not  a  statement	228	None	replace
978	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  Iterator  <  String>  opts  =  options.iterator();  while(opts.hasNext())  {  buff.append(opts.next());  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  Iterator  <  String>  opts  =  options.iterator();  while(opts.hasNext())  {  buff.append(opts.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  Iterator  <  String>  opts  =  options.iterator();  while(opts.hasNext())  {  buff.append(opts.next());  }	  Iterator    <    String>    iter    =    opts.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
979	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options.   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options.   ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.options.   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	8	2	add
980	[BUG]  [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options.   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options.   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options.   ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.options.   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	8	2	add
981	[BUG]  [BUGGY]  requiredOptions  =  buff.toString();  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  requiredOptions  =  buff.toString();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	requiredOptions  =  buff.toString();	  foundOptions    =    buff.toString();    	non-compiled	[CE]  incompatible  types	151	None	replace
982	[BUG]  [BUGGY]  buff.append( "  <   ").append(buffer.toString()  +  '>'));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(buffer.toString()  +  '>'));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(buffer.toString()  +  '>'));	  buff.append(   "    <       ").append(buffer.toString()));    	non-compiled	[CE]  	101	None	replace
983	[BUG]  [BUGGY]  foundError(buff,  option.toString());  [CE]  cannot  find  symbol  option  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  option.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  option.toString());	  foundError(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  option	245	None	replace
984	[BUG]  [BUGGY]  foundError(buff,  options.toString());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  options.toString());	  foundError(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	245	None	replace
985	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buffer.toString()));  [CE]  cannot  find  symbol  buffer  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buffer.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.get(buffer.toString()));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  cannot  find  symbol  buffer	34	None	replace
986	[BUG]  [BUGGY]  For(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }  [CE]  ')'  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  For(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	For(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(opts.next());    }    	non-compiled	[CE]  ')'  expected	29	None	replace
987	[BUG]  [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }  [CE]  ')'  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	For(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(opts.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(opts.next());    }    	non-compiled	[CE]  ')'  expected	29	None	replace
988	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	compilable	  [FE]  AssertionFailedError  	173	2	replace
989	[BUG]  [BUGGY]  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	compilable	  [FE]  AssertionFailedError  	173	2	replace
990	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	compilable	  [FE]  ComparisonFailure  	173	2	replace
991	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	compilable	  [FE]  ComparisonFailure  	173	2	replace
992	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options  ==  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options  ==  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
993	[BUG]  [BUGGY]  if(options  ==  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options  ==  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options  ==  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( ".required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ".required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	6	2	replace
994	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "ne   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ").append(cmd.toString());    buff.append( "ne   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
995	[BUG]  [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "ne   ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "ne   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ").append(cmd.toString());    buff.append( "ne   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
996	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "md   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ").append(cmd.toString());    buff.append( "md   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
997	[BUG]  [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "md   ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( "md   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ").append(cmd.toString());    buff.append( "md   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	48	2	add
998	[BUG]  [BUGGY]  TasksUiUtil.checkRequiredOptions(buff,  requiredOptions);  [CE]  cannot  find  symbol  TasksUiUtil  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  TasksUiUtil.checkRequiredOptions(buff,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	TasksUiUtil.checkRequiredOptions(buff,  requiredOptions);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  TasksUiUtil	31	None	replace
999	[BUG]  [BUGGY]  TasksUiUtil.checkState(buff,  requiredOptions.size()  >  0);  [CE]  cannot  find  symbol  TasksUiUtil  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  TasksUiUtil.checkState(buff,  requiredOptions.size()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	TasksUiUtil.checkState(buff,  requiredOptions.size()  >  0);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  TasksUiUtil	31	None	replace
1000	[BUG]  [BUGGY]  TasksUiUtil.checkRequiredOptions(buff);  [CE]  cannot  find  symbol  TasksUiUtil  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  TasksUiUtil.checkRequiredOptions(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	TasksUiUtil.checkRequiredOptions(buff);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  TasksUiUtil	31	None	replace
1001	[BUG]  [BUGGY]  TasksUiUtil.checkRequiredOptions(buff,  neededOptions);  [CE]  cannot  find  symbol  neededOptions  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  TasksUiUtil.checkRequiredOptions(buff,  neededOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	TasksUiUtil.checkRequiredOptions(buff,  neededOptions);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  neededOptions	31	None	replace
1002	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    if(opts!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
1003	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    if(options!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
1004	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
1005	[BUG]  [BUGGY]  AllOptions(options);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(options);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(options);	  AllOptions(opts);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1006	[BUG]  [BUGGY]  buff.append( ";n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n "  [CE]  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ";n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n "  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ";n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n "	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(buff.toString());    }    	non-compiled	[CE]  	59	None	replace
1007	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ";n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ";n ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	59	2	replace
1008	[BUG]  [BUGGY]  buff.append( ";n ").append(buff.toString());  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ";n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ";n ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	59	2	replace
1009	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  optionOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  iter  =  optionOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  iter  =  optionOptions.iterator();	  Iterator    <    Option>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	26	None	replace
1010	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }	  	compilable	  [FE]  ComparisonFailure  	261	2	add
1011	[BUG]  [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    if(buff!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }	  	compilable	  [FE]  ComparisonFailure  	261	2	add
1012	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()));  Throwables.checkArgument(buffer.length()  >  0);  [CE]  cannot  find  symbol  buffer  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()));  Throwables.checkArgument(buffer.length()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()));  Throwables.checkArgument(buffer.length()  >  0);	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.checkArgument(buff.length()    >    0);    	non-compiled	[CE]  cannot  find  symbol  buffer	21	None	replace
1013	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1014	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1015	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "] ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "] ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1016	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "] ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "] ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "] ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1017	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "] ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "] ");  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1018	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "] ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "] ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "] ");  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1019	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(options.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(options.toString()).append( "> ");	  buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	93	2	replace
1020	[BUG]  [BUGGY]  buff.append( "  <   ").append(options.toString()).append( "> ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(options.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(options.toString()).append( "> ");	  buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	93	2	replace
1021	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  requiredOptions.add(buff);  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  requiredOptions.add(buff);  }	  	compilable	  [FE]  ComparisonFailure  	214	2	add
1022	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  requiredOptions.add(buff);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  requiredOptions.add(buff);  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  requiredOptions.add(buff);  }	  	compilable	  [FE]  ComparisonFailure  	214	2	add
1023	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append('n').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	214	None	add
1024	[BUG]  [BUGGY]  buff.append('  <   ").append(buff.toString()).append( "> ");  [CE]  unclosed  character  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('  <   ").append(buff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('  <   ").append(buff.toString()).append( "> ");	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append('    <       ").append(buff.toString()).append(   ">       ");    	non-compiled	[CE]  unclosed  character  literal	236	None	replace
1025	[BUG]  [BUGGY]  buff.append( "mv.required.options ",  options.toString());  [CE]  no  suitable  method  found  for  append(String,String)  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ",  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ",  options.toString());	  buff.append(   "mv.required.options   ".toString());    	non-compiled	[CE]  no  suitable  method  found  for  append(String,String)	16	None	replace
1026	[BUG]  [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( ", ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	226	None	replace
1027	[BUG]  [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append('n');  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	226	None	replace
1028	[BUG]  [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( "n ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	226	None	replace
1029	[BUG]  [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( "[ ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( "[ ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  for(int  i  =  0;  i  <  requiredOptions.size();  ++i)  {  buff.append( "[ ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	226	None	replace
1030	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.toString()).append( ">n ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(cmd.toString()).append( ">n ");	  buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	96	2	replace
1031	[BUG]  [BUGGY]  buff.append( "  <   ").append(cmd.toString()).append( ">n ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(cmd.toString()).append( ">n ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(cmd.toString()).append( ">n ");	  buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	96	2	replace
1032	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1033	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1034	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1035	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>');    	compilable	  [FE]  AssertionFailedError  	191	2	replace
1036	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   "mv.required.options       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	1	2	add
1037	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   "mv.required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   "mv.required.options       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  buff.append( "mv.required.options ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	1	2	add
1038	[BUG]  [BUGGY]  buff.append(   ",   ").append(options.toString());  if(options!=  null)  {  buff.append( ", ").append(options.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",   ").append(options.toString());  if(options!=  null)  {  buff.append( ", ").append(options.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",   ").append(options.toString());    if(options!=  null)  {  buff.append( ", ").append(options.toString());  }  else  {  throw  new  MissingException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	141	None	add
1039	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  / ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1040	[BUG]  [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1041	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  0> ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  0> ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1042	[BUG]  [BUGGY]  buff.append( "  <  0> ").append(requiredOptions.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  0> ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  0> ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1043	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  n ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  n ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1044	[BUG]  [BUGGY]  buff.append( "  <  n ").append(requiredOptions.toString());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  n ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  n ").append(requiredOptions.toString());	  buff.append(   "    <       ").append(requiredOptions.toString());    	compilable	  [FE]  AssertionFailedError  	36	2	replace
1045	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( "n ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1046	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( "n ");  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( "n ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1047	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( ", ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1048	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( ", ");  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append( ", ");  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1049	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append('n');  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1050	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append('n');  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append(buff.toString());  buff.append('n');  }	  buff.append(buff.toString());    buff.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	70	2	replace
1051	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  null,   " ");  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  null,   " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  null,   " ");	  throw    new    MissingOptionException(buff.toString(),    options,   "       ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	167	None	replace
1052	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  optionName,   " ");  [CE]  cannot  find  symbol  optionName  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  optionName,   " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  optionName,   " ");	  throw    new    MissingOptionException(buff.toString(),    options,   "       ");    	non-compiled	[CE]  cannot  find  symbol  optionName	167	None	replace
1053	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  =  n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  =  n ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1054	[BUG]  [BUGGY]  buff.append( "  =  n ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  =  n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  =  n ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   "n    =   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	217	2	replace
1055	[BUG]  [BUGGY]  Iterator  <  Option>  opts  =  options.keySet().iterator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  opts  =  options.keySet().iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  opts  =  options.keySet().iterator();	  Iterator    <    Option>    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
1056	[BUG]  [BUGGY]  Iterator  <  Option>  opts  =  options.values().iterator();  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  opts  =  options.values().iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  opts  =  options.values().iterator();	  Iterator    <    Option>    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	138	None	replace
1057	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
1058	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ",  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ",  <   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
1059	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
1060	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <        fx    <          [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ",  <     ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ",    <       ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx        <              fx        <                	53	2	add
1061	[BUG]  [BUGGY]  buff.append( "mv.required.options ".append(buff.toString()));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ".append(buff.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ".append(buff.toString()));	  buff.append(   "mv.required.options.   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
1062	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  If(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  If(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    If(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	non-compiled	[CE]  ';'  expected	192	None	add
1063	[BUG]  [BUGGY]  foundOptions(buff,  options.size()  -  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  options.size()  -  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  options.size()  -  1);	  foundOptions(buff,    requiredOptions.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
1064	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()  [CE]  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()	  	non-compiled	[CE]  	133	None	add
1065	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append( ".toString());  }  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append( ".toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append( ".toString());  }	  	non-compiled	[CE]  unclosed  string  literal	133	None	add
1066	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
1067	[BUG]  [BUGGY]  foundOptions(buff,  options.size());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  options.size());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  options.size());	  foundOptions(buff,    requiredOptions.size());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
1068	[BUG]  [BUGGY]  foundOptions(buff,  iter.size());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  iter.size());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  iter.size());	  foundOptions(buff,    requiredOptions.size());    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
1069	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  null);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(),  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(),  null);	  Throwables.throw    new    MissingOptionException(buff.toString(),   "       ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1070	[BUG]  [BUGGY]  buff.append(   ",  expected:   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",  expected:   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",    expected:   ").append(buff.toString());    junit.framework.ComparisonFailure:  expected;	  	non-compiled	[CE]  not  a  statement	257	None	add
1071	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
1072	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
1073	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
1074	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  opts.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
1075	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": ");  }	  	non-compiled	[CE]  illegal  start  of  expression	75	None	add
1076	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1077	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1078	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(options.toString());	  bucket.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	84	2	replace
1079	[BUG]  [BUGGY]  buff.append(options.toString());  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(options.toString());	  bucket.append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	84	2	replace
1080	[BUG]  [BUGGY]  Ilerator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Ilerator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Ilerator  <  String>  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }	  Iterator    <    String>    iter    =    options.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
1081	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());	  	non-compiled	[CE]  not  a  statement	111	None	add
1082	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size()  ];  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size()  ];  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size()  ];	  	non-compiled	[CE]  not  a  statement	111	None	add
1083	[BUG]  [BUGGY]  buff.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  	155	None	replace
1084	[BUG]  [BUGGY]  buff.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(buff.toString());  [CE]  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(buff.toString());	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  	155	None	replace
1085	[BUG]  [BUGGY]  buff.append( ", ").append(ByteBuffer.toString(buff)).append( "n ");  [CE]  cannot  find  symbol  ByteBuffer  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(ByteBuffer.toString(buff)).append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(ByteBuffer.toString(buff)).append( "n ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  ByteBuffer	155	None	replace
1086	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n ").append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "n ").append( "n ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	155	2	replace
1087	[BUG]  [BUGGY]  buff.append( "n ").append( "n ");  [FE]  AssertionFailedError  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n ").append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "n ").append( "n ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	155	2	replace
1088	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "msg.required.toString   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "msg.required.toString   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "msg.required.toString   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	206	2	add
1089	[BUG]  [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "msg.required.toString   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.required.toString   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "msg.required.toString   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "msg.required.toString   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "msg.required.toString   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	206	2	add
1090	[BUG]  [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( "null ");	          if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  cannot  find  symbol	199	None	replace
1091	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	195	None	add
1092	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	195	None	add
1093	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	195	None	add
1094	[BUG]  [BUGGY]  Throw  new  MissingOptionException(buff,  options.toString());  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(buff,  options.toString());	  throw    new    MissingOptionException(md,    buff,    options.toString());    	non-compiled	[CE]  not  a  statement	222	None	replace
1095	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append(',').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append(',').append(buff.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	254	2	replace
1096	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append(',').append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append(',').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append(',').append(buff.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	254	2	replace
1097	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  requiredOptions.add(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	requiredOptions.add(buff);	  foundOptions.add(buff);    	compilable	  [FE]  AssertionFailedError  	152	2	replace
1098	[BUG]  [BUGGY]  requiredOptions.add(buff);  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  requiredOptions.add(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	requiredOptions.add(buff);	  foundOptions.add(buff);    	compilable	  [FE]  AssertionFailedError  	152	2	replace
1099	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[] ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "[] ").append(buff.toString());	  buff.append(   "[   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1100	[BUG]  [BUGGY]  buff.append( "[] ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[] ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "[] ").append(buff.toString());	  buff.append(   "[   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	137	2	replace
1101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n').append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1102	[BUG]  [BUGGY]  buff.append('n').append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n').append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1103	[BUG]  [BUGGY]  buff.length()  >=  0)  {  throw  new  MissingOptionException( " ");  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >=  0)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >=  0)  {  throw  new  MissingOptionException( " ");  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(   "   ");    }    	non-compiled	[CE]  not  a  statement	171	None	replace
1104	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  option);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  option);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  option);	  throw    new    MissingOptionException(buff,    options.toString(),    buff);    	non-compiled	[CE]  cannot  find  symbol  option	220	None	replace
1105	[BUG]  [BUGGY]  throw  new  MissingOptionException(options,  buff.toString(),  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(options,  buff.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(options,  buff.toString(),  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	220	None	replace
1106	[BUG]  [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString()));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(requiredOptions.toString()));	  buff.append(   "    <       ").append(requiredOptions.toString()));    	non-compiled	[CE]  	100	None	replace
1107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.options. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.bad.required.options. ").append(buff.toString());	  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	122	2	replace
1108	[BUG]  [BUGGY]  buff.append( "msg.bad.required.options. ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.bad.required.options. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.bad.required.options. ").append(buff.toString());	  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	122	2	replace
1109	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  StringBuffer  buff  =  new  StringBuffer();  }  [CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  StringBuffer  buff  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  StringBuffer  buff  =  new  StringBuffer();  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	non-compiled	[CE]  variable  buff  is  already  defined  in  method  checkRequiredOptions()	19	None	replace
1110	[BUG]  [BUGGY]  Throw  new  MissingOptionException(buff,  buff.toString());  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(buff,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(buff,  buff.toString());	  throw    new    MissingOptionException(md,    buff.toString());    	non-compiled	[CE]  not  a  statement	63	None	replace
1111	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  iter  =  options.iterator();  while(iter.hasNext())  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(options.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	251	None	replace
1112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ":n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ":n ").append(buff.toString());	  buff.append(   ":   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1113	[BUG]  [BUGGY]  buff.append( ":n ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ":n ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ":n ").append(buff.toString());	  buff.append(   ":   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	120	2	replace
1114	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ".required.options       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	5	2	add
1115	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ".required.options       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	5	2	add
1116	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "mv.required.options   ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ".required.options     ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "mv.required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ".required.options       ").append(buff.toString());    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "mv.required.options   ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
1117	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  /  'n'));  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  /  'n'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()  /  'n'));	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	196	None	replace
1118	[BUG]  [BUGGY]  Throw  new  MissingOptionException(cmd,  options.toString(),  buff);  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(cmd,  options.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(cmd,  options.toString(),  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  not  a  statement	128	None	replace
1119	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  cmd);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  cmd);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  options,  cmd);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	128	None	replace
1120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.no.required ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.no.required ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
1121	[BUG]  [BUGGY]  buff.append( "msg.no.required ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.no.required ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.no.required ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
1122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.options.no-required ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.options.no-required ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
1123	[BUG]  [BUGGY]  buff.append( "msg.required.options.no-required ");  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.options.no-required ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.options.no-required ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
1124	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
1125	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
1126	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
1127	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
1128	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
1129	[BUG]  [BUGGY]  if(options.hasOption(options))  {  buff.append( "null ").append(buff.toString());  buff.append( ",null ").append(buff.toString());  }  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options.hasOption(options))  {  buff.append( "null ").append(buff.toString());  buff.append( ",null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options.hasOption(options))  {  buff.append( "null ").append(buff.toString());  buff.append( ",null ").append(buff.toString());  }	          buff.append(       "n       ").append(buff.toString());    buff.append(   ",n       ").append(buff.toString());    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	213	None	replace
1130	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  exception);  [CE]  cannot  find  symbol  exception  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  exception);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  exception);	  throw    new    MissingOptionException(buff.toString(),    error);    	non-compiled	[CE]  cannot  find  symbol  exception	40	None	replace
1131	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  option,  options);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  option,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  option,  options);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  cannot  find  symbol  option	41	None	replace
1132	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  tokenList.toString(),  buff,  options);  [CE]  cannot  find  symbol  tokenList  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  tokenList.toString(),  buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  tokenList.toString(),  buff,  options);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  cannot  find  symbol  tokenList	41	None	replace
1133	[BUG]  [BUGGY]  Throw  new  MissingOptionException(buff.toString(),  options,  buff);  [CE]  not  a  statement  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(buff.toString(),  options,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(buff.toString(),  options,  buff);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  not  a  statement	41	None	replace
1134	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  null));  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  null));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  null));	  throw    new    MissingOptionException(buff.toString(),   "   "));    	non-compiled	[CE]  ';'  expected	224	None	replace
1135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1136	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	2	2	replace
1137	[BUG]  [BUGGY]  foundErrors(buff,  options.toString());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff,  options.toString());	  foundErrors(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	246	None	replace
1138	[BUG]  [BUGGY]  foundErrors(buff,  option.toString());  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff,  option.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff,  option.toString());	  foundErrors(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  option	246	None	replace
1139	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  toString(),  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  toString(),  buff);	  throw    new    MissingOptionException(buff,    str.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	239	None	replace
1140	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  buff);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString(),  buff);	  throw    new    MissingOptionException(buff,    str.toString(),    buff);    	non-compiled	[CE]  cannot  find  symbol  option	239	None	replace
1141	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()) ");  [CE]  unclosed  string  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()) ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()) ");	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +       ")   ");    	non-compiled	[CE]  unclosed  string  literal	194	None	replace
1142	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  buff.append( "n   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  buff.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1143	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  buff.append( "n   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  buff.append( "n   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  buff.append( "n   ");  }	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1145	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1146	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(opts!=  null)  {  buff.append( "n   ");  }  [CE]  cannot  find  symbol  opts  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(opts!=  null)  {  buff.append( "n   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    if(opts!=  null)  {  buff.append( "n   ");  }	  	non-compiled	[CE]  cannot  find  symbol  opts	164	None	add
1147	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(opts!=  null)  {  buff.append( "null ");  }  [CE]  cannot  find  symbol  opts  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  if(opts!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    if(opts!=  null)  {  buff.append( "null ");  }	  	non-compiled	[CE]  cannot  find  symbol  opts	164	None	add
1148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  if(options!=  null)  {  buff.append( "mv.required.options   ".toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ".toString());    if(options!=  null)  {  buff.append( "mv.required.options   ".toString());  }	  	compilable	  [FE]  ComparisonFailure  	15	2	add
1149	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ".toString());  if(options!=  null)  {  buff.append( "mv.required.options   ".toString());  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  if(options!=  null)  {  buff.append( "mv.required.options   ".toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ".toString());    if(options!=  null)  {  buff.append( "mv.required.options   ".toString());  }	  	compilable	  [FE]  ComparisonFailure  	15	2	add
1150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.addoptions ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "required.addoptions ").append(buff.toString());	  buff.append(   "mv.required.addoptions   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	181	2	replace
1151	[BUG]  [BUGGY]  buff.append( "required.addoptions ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.addoptions ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "required.addoptions ").append(buff.toString());	  buff.append(   "mv.required.addoptions   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	181	2	replace
1152	[BUG]  [BUGGY]  foundError(buff,  option.toString(),  null);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  option.toString(),  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  option.toString(),  null);	  foundError(buff.toString(),    null);    	non-compiled	[CE]  cannot  find  symbol  option	247	None	replace
1153	[BUG]  [BUGGY]  foundError(buff,  options.toString(),  null);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  options.toString(),  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  options.toString(),  null);	  foundError(buff.toString(),    null);    	non-compiled	[CE]  cannot  find  symbol	247	None	replace
1154	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "no ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "no ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "no ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "no   ");    }    	non-compiled	[CE]  	233	None	replace
1155	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  selectedOptions.iterator();  iter.hasNext();)  {  buff.append( "no ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  selectedOptions.iterator();  iter.hasNext();)  {  buff.append( "no ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  selectedOptions.iterator();  iter.hasNext();)  {  buff.append( "no ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "no   ");    }    	non-compiled	[CE]  	233	None	replace
1156	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());  }	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	compilable	  [FE]  ComparisonFailure  	68	2	replace
1157	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString());  }	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	compilable	  [FE]  ComparisonFailure  	68	2	replace
1158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append(':').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ":   ").append(buff.toString());    buff.append(':').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	119	2	add
1159	[BUG]  [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append(':').append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ":   ").append(buff.toString());  buff.append(':').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ":   ").append(buff.toString());    buff.append(':').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	119	2	add
1160	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": "  +  iter.next());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": "  +  iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": "  +  iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
1161	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  new  MissingOptionException( "Missing  option: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    new  MissingOptionException( "Missing  option: "  +  buff.toString());	  	non-compiled	[CE]  unreachable  statement	64	None	add
1162	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
1163	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "] ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  option:   "  +  buff.toString());  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "] ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "] ");  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
1164	[BUG]  [BUGGY]  buff.append(bin.toString()).append('n');  [CE]  cannot  find  symbol  bin  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(bin.toString()).append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(bin.toString()).append('n');	  bucket.append(buff.toString()).append('n');    	non-compiled	[CE]  cannot  find  symbol  bin	124	None	replace
1165	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString  [CE]  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options ").append(buff.toString	          buff.append(       "mv.required.options       ").append(buff.toString());    if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	non-compiled	[CE]  	4	None	replace
1166	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buffer.toString()));  }  [CE]  cannot  find  symbol  buffer  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buffer.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  throw  new  MissingOptionException(String.valueOf(buffer.toString()));  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ").append(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  buffer	176	None	replace
1167	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
1168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1169	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1170	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  	non-compiled	[CE]  illegal  start  of  expression	162	None	add
1171	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(opts!=  null)  {  buff.append( "null ");  }  [CE]  cannot  find  symbol  opts  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(opts!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    if(opts!=  null)  {  buff.append( "null ");  }	  	non-compiled	[CE]  cannot  find  symbol  opts	162	None	add
1172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  expected: ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",  expected: ").append(options.toString());	  buff.append(   ",    expected:   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	258	2	replace
1173	[BUG]  [BUGGY]  buff.append( ",  expected: ").append(options.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  expected: ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",  expected: ").append(options.toString());	  buff.append(   ",    expected:   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	258	2	replace
1174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append( "no-symbol ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString()).append( "no-symbol ");	  bucket.append(buff.toString()).append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	125	2	replace
1175	[BUG]  [BUGGY]  buff.append(buff.toString()).append( "no-symbol ");  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString()).append( "no-symbol ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString()).append( "no-symbol ");	  bucket.append(buff.toString()).append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	125	2	replace
1176	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1177	[BUG]  [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  buff.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  buff.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  requiredOptions.iterator();  buff.hasNext();)  {  buff.append( ", ");  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1178	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
1179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1180	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1181	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1182	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1183	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1184	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1185	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  0 ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =  0 ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1186	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  0 ").append(buff.toString());  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  0 ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =  0 ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1187	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  if(options!=  null)  {  buff.append( "mv.required.options   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "mv.required.options   ");    if(options!=  null)  {  buff.append( "mv.required.options   ");  }	  	compilable	  [FE]  ComparisonFailure  	44	2	add
1188	[BUG]  [BUGGY]          buff.append(   "mv.required.options   ");  if(options!=  null)  {  buff.append( "mv.required.options   ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  if(options!=  null)  {  buff.append( "mv.required.options   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "mv.required.options   ");    if(options!=  null)  {  buff.append( "mv.required.options   ");  }	  	compilable	  [FE]  ComparisonFailure  	44	2	add
1189	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
1190	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
1191	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
1192	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
1193	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ": ");  }	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
1194	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ").append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	117	None	add
1195	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.addoptions   ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	180	2	add
1196	[BUG]  [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.addoptions   ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	180	2	add
1197	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.addoptions   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	180	2	add
1198	[BUG]  [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.addoptions   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "mv.required.addoptions   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	180	2	add
1199	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  neededOptions.iterator();  iter.hasNext();)  {  buff.append( "[null] ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  neededOptions.iterator();  iter.hasNext();)  {  buff.append( "[null] ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  neededOptions.iterator();  iter.hasNext();)  {  buff.append( "[null] ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    neededOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	non-compiled	[CE]  	234	None	replace
1200	[BUG]  [BUGGY]  found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1201	[BUG]  [BUGGY]  found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1202	[BUG]  [BUGGY]  found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	found  =  buff.length()  >  0  ||  buff.charAt(buff.length()  -  1)!=  '/')  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  ';'  expected	114	None	replace
1203	[BUG]  [BUGGY]  Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(requiredOptions.next());  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(requiredOptions.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  requiredOptions  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(requiredOptions.next());  }	  if(requiredOptions!=    null)    {    Iterator    <    String>    iter    =    requiredOptions.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
1204	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	210	None	add
1205	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	210	None	add
1206	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	210	None	add
1207	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions!=  null)  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1208	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  buff.append( ", ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions!=  null)  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1209	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  0)  {  Throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  0)  {  Throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff.length()  >  0)  {  Throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	non-compiled	[CE]  not  a  statement	113	None	add
1210	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	113	2	add
1211	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	113	2	add
1212	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(Buff.toString()));  }  [CE]  cannot  find  symbol  Buff  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(Buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(Buff.toString()));  }	  	non-compiled	[CE]  cannot  find  symbol  Buff	113	None	add
1213	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
1214	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n ");  }	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
1215	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('-');  }	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
1216	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    if(opts!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  	non-compiled	[CE]  illegal  start  of  expression	160	None	add
1217	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	121	2	add
1218	[BUG]  [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "msg.bad.required.options.null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	121	2	add
1219	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <  [ ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <  [ ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	50	2	add
1220	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <  [ ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <  [ ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <  [ ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	50	2	add
1221	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	50	None	add
1222	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  }   ").append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  }   ").append(iter.next());	          buff.append(   ",   ").append(iter.next());    	compilable	  [FE]  NoSuchElementException  	47	2	replace
1223	[BUG]  [BUGGY]  buff.append( "  }   ").append(iter.next());  [FE]  NoSuchElementException  [FE]    NoSuchElementException    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  }   ").append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  }   ").append(iter.next());	          buff.append(   ",   ").append(iter.next());    	compilable	  [FE]  NoSuchElementException  	47	2	replace
1224	[BUG]  [BUGGY]  buff.length()  {  throw  new  MissingOptionException(buff,  iter.toString());  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  {  throw  new  MissingOptionException(buff,  iter.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  {  throw  new  MissingOptionException(buff,  iter.toString());  }	  buff.length()    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  ';'  expected	169	None	replace
1225	[BUG]  [BUGGY]  IllegalArgumentException.println(buff,  BAD_NAMESPACE.toString());  [CE]  cannot  find  symbol  BAD_NAMESPACE  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalArgumentException.println(buff,  BAD_NAMESPACE.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalArgumentException.println(buff,  BAD_NAMESPACE.toString());	  IllegalArgumentException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  BAD_NAMESPACE	145	None	replace
1226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "no-requiredOptions ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "no-requiredOptions ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	165	2	replace
1227	[BUG]  [BUGGY]  buff.append( "no-requiredOptions ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "no-requiredOptions ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "no-requiredOptions ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	165	2	replace
1228	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('f');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('f');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1229	[BUG]  [BUGGY]  buff.append('n');  buff.append('f');  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('f');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('f');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('-');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('-');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1231	[BUG]  [BUGGY]  buff.append('n');  buff.append('-');  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('-');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('-');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1232	[BUG]  [BUGGY]  nisipToString(buff);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipToString(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipToString(buff);	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
1233	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ".required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ".required.options ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
1234	[BUG]  [BUGGY]  buff.append( ".required.options ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ".required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ".required.options ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
1235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  }   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  }   ").append(options.toString());	  buff.append(   ",   ").append(options.toString());    	compilable	  [FE]  AssertionFailedError  	142	2	replace
1236	[BUG]  [BUGGY]  buff.append( "  }   ").append(options.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  }   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  }   ").append(options.toString());	  buff.append(   ",   ").append(options.toString());    	compilable	  [FE]  AssertionFailedError  	142	2	replace
1237	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  this.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  this.options.iterator();	  Iterator    <    String>    iter    =    options.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	102	None	replace
1238	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1239	[BUG]  [BUGGY]  if(opts  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(opts  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(opts  ==  null)  {  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
1240	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1241	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1242	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1243	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1244	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    if(requiredOptions!=  null)  {  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	208	None	add
1245	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
1246	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
1247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
1248	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( ".> ");  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
1249	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
1250	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    if(requiredOptions!=  null)  {  buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  }  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        if(requiredOptions!=    null)    {    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    }    if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	  	compilable	  [FE]  ComparisonFailure  	90	2	add
1251	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  requiredOptions.toString());  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  requiredOptions.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  requiredOptions.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buffer.toString());    }    	non-compiled	[CE]  not  a  statement	170	None	replace
1252	[BUG]  [BUGGY]  buff.length()  ==  0)  {  throw  new  MissingOptionException(buffer.toString());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  ==  0)  {  throw  new  MissingOptionException(buffer.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  ==  0)  {  throw  new  MissingOptionException(buffer.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buffer.toString());    }    	non-compiled	[CE]  not  a  statement	170	None	replace
1253	[BUG]  [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( ", ");  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append( ", ");	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  cannot  find  symbol	150	None	replace
1254	[BUG]  [BUGGY]  buff.append( "  }.append( ").append(buff.toString()));  [CE]  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  }.append( ").append(buff.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  }.append( ").append(buff.toString()));	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(buff.toString()));    	non-compiled	[CE]  	203	None	replace
1255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "no-required ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "no-required ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
1256	[BUG]  [BUGGY]  buff.append( "no-required ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "no-required ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "no-required ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	209	2	replace
1257	[BUG]  [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ".append(buff.toString()).append('>');  [CE]  unclosed  string  literal  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ".append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( ".append(buff.toString()).append('>');	  	non-compiled	[CE]  unclosed  string  literal	204	None	add
1258	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  String  cmd  =(String)iter.next();  buff.append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(cmd.toString());    String  cmd  =(String)iter.next();  buff.append(cmd.toString());	  	compilable	  [FE]  NoSuchElementException  	13	2	add
1259	[BUG]  [BUGGY]  buff.append(cmd.toString());  String  cmd  =(String)iter.next();  buff.append(cmd.toString());  [FE]  NoSuchElementException  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  String  cmd  =(String)iter.next();  buff.append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    String  cmd  =(String)iter.next();  buff.append(cmd.toString());	  	compilable	  [FE]  NoSuchElementException  	13	2	add
1260	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  String  cmd  =(String)iter.next();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(cmd.toString());    String  cmd  =(String)iter.next();	  	compilable	  [FE]  NoSuchElementException  	13	2	add
1261	[BUG]  [BUGGY]  buff.append(cmd.toString());  String  cmd  =(String)iter.next();  [FE]  NoSuchElementException  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  String  cmd  =(String)iter.next();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    String  cmd  =(String)iter.next();	  	compilable	  [FE]  NoSuchElementException  	13	2	add
1262	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
1263	[BUG]  [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append('n');  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append('n');  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
1264	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
1265	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    if(options!=  null)  {  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
1266	[BUG]  [BUGGY]  atterns.showError(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  atterns  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  atterns.showError(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	atterns.showError(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.showError(String.valueOf(buff.toString()));    	non-compiled	[CE]  cannot  find  symbol  atterns	18	None	replace
1267	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
1268	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  buff.append( "null ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
1269	[BUG]  [BUGGY]  buff.append( "msg.required.toString ").append(block.toString());  [CE]  cannot  find  symbol  block  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.toString ").append(block.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.toString ").append(block.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  block	207	None	replace
1270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.key ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.key ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1271	[BUG]  [BUGGY]  buff.append( "msg.required.key ").append(buff.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.key ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.key ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1272	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  unclosed  string  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString());  buff.append( ".append( "  <   ").append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(   "    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  string  literal	135	None	replace
1273	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>;  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>;	  	non-compiled	[CE]  not  a  statement	184	None	add
1274	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",n   ").append(buff.toString());    junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>	  	non-compiled	[CE]  not  a  statement	184	None	add
1275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "required.options. ").append(buff.toString());	  buff.append(   "required.options   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	179	2	replace
1276	[BUG]  [BUGGY]  buff.append( "required.options. ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "required.options. ").append(buff.toString());	  buff.append(   "required.options   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	179	2	replace
1277	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   ",n   ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	105	2	add
1278	[BUG]  [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",n   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",n   ").append(buff.toString());    buff.append( ", ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	105	2	add
1279	[BUG]  [BUGGY]  buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure  =  new  CommandLine();  [CE]  package  junit  does  not  exist  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   ",n   ").append(buff.toString());  junit.framework.ComparisonFailure  =  new  CommandLine();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   ",n   ").append(buff.toString());    junit.framework.ComparisonFailure  =  new  CommandLine();	  	non-compiled	[CE]  package  junit  does  not  exist	105	None	add
1280	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	80	2	add
1281	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	80	2	add
1282	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException  [CE]  '('  or  '['  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException	  	non-compiled	[CE]  '('  or  '['  expected	80	None	add
1283	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException  [CE]  '('  or  '['  expected  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException	  	non-compiled	[CE]  '('  or  '['  expected	80	None	add
1284	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  sortedOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  sortedOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  sortedOptions.iterator();	  Iterator    <    String>    iter    =    opts.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	129	None	replace
1285	[BUG]  [BUGGY]  throw  new  MissingOptionException(buffer,  path,  buff.toString());  [CE]  cannot  find  symbol  buffer  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buffer,  path,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buffer,  path,  buff.toString());	  throw    new    MissingOptionException(buff,    path,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	242	None	replace
1286	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  exception);  [CE]  cannot  find  symbol  exception  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  exception);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  exception);	  throw    new    MissingOptionException(buff.toString(),    options);    	non-compiled	[CE]  cannot  find  symbol  exception	240	None	replace
1287	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  option);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  option);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  option);	  throw    new    MissingOptionException(buff.toString(),    options);    	non-compiled	[CE]  cannot  find  symbol  option	240	None	replace
1288	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  options);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString(),  options);	  throw    new    MissingOptionException(buff.toString(),    options);    	non-compiled	[CE]  cannot  find  symbol  option	240	None	replace
1289	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	69	2	add
1290	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	69	2	add
1291	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1292	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append('n');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1293	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( ";n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( ";n ");	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1294	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( ";n ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( ";n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( ";n ");	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1295	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "n ").append(getRequiredOptions());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "n ").append(getRequiredOptions());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( "n ").append(getRequiredOptions());	  	non-compiled	[CE]  cannot  find  symbol	69	None	add
1296	[BUG]  [BUGGY]  MutableIterator  <  String>  iter  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  MutableIterator  <  String>  iter  =  requiredOptions.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	MutableIterator  <  String>  iter  =  requiredOptions.iterator();	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1297	[BUG]  [BUGGY]  MutableIterator  <  String>  buff  =  options.iterator();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  MutableIterator  <  String>  buff  =  options.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	MutableIterator  <  String>  buff  =  options.iterator();	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1298	[BUG]  [BUGGY]  MutableIterator  <  String>  buff  =  iter.next();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  MutableIterator  <  String>  buff  =  iter.next();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	MutableIterator  <  String>  buff  =  iter.next();	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
1299	[BUG]  [BUGGY]  Throw  new  MissingOptionException(buffer,  options.toString());  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(buffer,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(buffer,  options.toString());	  throw    new    MissingOptionException(buffer,    options.toString());    	non-compiled	[CE]  not  a  statement	223	None	replace
1300	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
1301	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
1302	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	218	None	add
1303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
1304	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
1305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",was:   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",was:   ").append(buff.toString());	  buff.append(   ",n   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	106	2	replace
1306	[BUG]  [BUGGY]  buff.append( ",was:   ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",was:   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",was:   ").append(buff.toString());	  buff.append(   ",n   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	106	2	replace
1307	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  requiredOptions,  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  requiredOptions,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  requiredOptions,  options);	  throw    new    MissingOptionException(buff.toString(),    requiredOptions);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	38	None	replace
1308	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  requiredOptions);  [CE]  cannot  find  symbol  option  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString(),  requiredOptions);	  throw    new    MissingOptionException(buff.toString(),    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  option	38	None	replace
1309	[BUG]  [BUGGY]  Throwables.throwMissingException(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  Throwables  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throwMissingException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throwMissingException(String.valueOf(buff.toString()));	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    	non-compiled	[CE]  cannot  find  symbol  Throwables	118	None	replace
1310	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  optionName,  requiredOptions.toString());  [CE]  cannot  find  symbol  optionName  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  optionName,  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  optionName,  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol  optionName	202	None	replace
1311	[BUG]  [BUGGY]  IllegalStateException.println(buff,  iter.toString());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  iter.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  iter.toString());	  IllegalStateException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1312	[BUG]  [BUGGY]  IllegalStateException.println(buff,  BAD_NON_OBJECT.toString());  [CE]  cannot  find  symbol  BAD_NON_OBJECT  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  BAD_NON_OBJECT.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  BAD_NON_OBJECT.toString());	  IllegalStateException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  BAD_NON_OBJECT	131	None	replace
1313	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1314	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  while(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  while(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  while(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('n');  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1315	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  while(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('  [CE]  illegal  line  end  in  character  literal  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  while(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  while(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append('	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append('n');    }    	non-compiled	[CE]  illegal  line  end  in  character  literal	175	None	replace
1316	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	non-compiled	[CE]  	232	None	replace
1317	[BUG]  [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append( ", ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  	248	None	replace
1318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  / ").append(requiredOptions.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	144	2	replace
1319	[BUG]  [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString()).append( "> ");  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(requiredOptions.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(requiredOptions.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	144	2	replace
1320	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buffer.toString()).append( "> ");  [CE]  cannot  find  symbol  buffer  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buffer.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(buffer.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  cannot  find  symbol  buffer	144	None	replace
1321	[BUG]  [BUGGY]  buff.append( "  <  / ").append(muff.toString()).append( "> ");  [CE]  cannot  find  symbol  muff  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(muff.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(muff.toString()).append( "> ");	  buff.append(   "    <    /   ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  cannot  find  symbol  muff	144	None	replace
1322	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());	  	non-compiled	[CE]  not  a  statement	253	None	add
1323	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>;  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>;  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    junit.framework.ComparisonFailure:  expected,  but  was:  <  [fx]>;	  	non-compiled	[CE]  not  a  statement	253	None	add
1324	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
1325	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
1326	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(Buff.toString());  }  [CE]  cannot  find  symbol  Buff  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(Buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(Buff.toString());  }	  	non-compiled	[CE]  cannot  find  symbol  Buff	188	None	add
1327	[BUG]  [BUGGY]  throw  new  MissingOptionException(options,  buff.toString(),  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(options,  buff.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(options,  buff.toString(),  options);	  throw    new    MissingOptionException(buff,    options.toString(),    options);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	183	None	replace
1328	[BUG]  [BUGGY]  Throw  new  MissingOptionException(buff,  options.toString(),  options);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(buff,  options.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(buff,  options.toString(),  options);	  throw    new    MissingOptionException(buff,    options.toString(),    options);    	non-compiled	[CE]  not  a  statement	183	None	replace
1329	[BUG]  [BUGGY]  AllOptions(options,  requiredOptions);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(options,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(options,  requiredOptions);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1330	[BUG]  [BUGGY]  AllOptions(requiredOptions,  buff);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(requiredOptions,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(requiredOptions,  buff);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol	154	None	replace
1331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append( ".> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  / ").append(buff.toString()).append( ".> ");	          buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    	compilable	  [FE]  AssertionFailedError  	262	2	replace
1332	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append( ".> ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append( ".> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(buff.toString()).append( ".> ");	          buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    	compilable	  [FE]  AssertionFailedError  	262	2	replace
1333	[BUG]  [BUGGY]  buff.append( "  <   ").append(muff.toString()).append( "> ");  [CE]  cannot  find  symbol  muff  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(muff.toString()).append( "> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(muff.toString()).append( "> ");	          buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    	non-compiled	[CE]  cannot  find  symbol  muff	262	None	replace
1334	[BUG]  [BUGGY]  Iterator  opts  =  options.keySet().iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  opts  =  options.keySet().iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  opts  =  options.keySet().iterator();	  Iterator    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1335	[BUG]  [BUGGY]  Iterator  opts  =  options.values().iterator();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  opts  =  options.values().iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  opts  =  options.values().iterator();	  Iterator    opts    =    options.iterator();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
1336	[BUG]  [BUGGY]  buff.append( "  <   ").append(block.toString()).append( "> ");  [CE]  cannot  find  symbol  block  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(block.toString()).append( "> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(block.toString()).append( "> ");	  buff.append(   "    <       ").append(buffer.toString()).append(   ">   ");    	non-compiled	[CE]  cannot  find  symbol  block	94	None	replace
1337	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());  [CE]  not  a  statement  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    junit.framework.ComparisonFailure:  was:  <  [fx  >>  requiredOptions.size());	  	non-compiled	[CE]  not  a  statement	109	None	add
1338	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( ", ").append(fx);  [CE]  cannot  find  symbol  fx  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( ", ").append(fx);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    buff.append( ", ").append(fx);	  	non-compiled	[CE]  cannot  find  symbol  fx	109	None	add
1339	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>       ");    	compilable	  [FE]  AssertionFailedError  	235	2	replace
1340	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append('>');  }  else  {  buff.append( "  <   ").append(buff.toString()).append('>');  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>       ");    	compilable	  [FE]  AssertionFailedError  	235	2	replace
1341	[BUG]  [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append('> ");  [CE]  unclosed  character  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  / ").append(buff.toString()).append('> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  / ").append(buff.toString()).append('> ");	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>       ");    	non-compiled	[CE]  unclosed  character  literal	235	None	replace
1342	[BUG]  [BUGGY]  assister.handleMissingException( " ");  [CE]  cannot  find  symbol  assister  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  assister.handleMissingException( " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	assister.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  assister	227	None	replace
1343	[BUG]  [BUGGY]  assistExceptionHandler( " ");  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  assistExceptionHandler( " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	assistExceptionHandler( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	227	None	replace
1344	[BUG]  [BUGGY]  Iterator  iter  =  optionOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  optionOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  optionOptions.iterator();	  Iterator    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	24	None	replace
1345	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  }	  throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    	compilable	  [FE]  ComparisonFailure  	65	2	replace
1346	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString());  }	  throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    	compilable	  [FE]  ComparisonFailure  	65	2	replace
1347	[BUG]  [BUGGY]  throw  new  MissingOptionException(msg,  null,  buff.toString());  [CE]  cannot  find  symbol  msg  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(msg,  null,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(msg,  null,  buff.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  msg	201	None	replace
1348	[BUG]  [BUGGY]  Throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(buff,  null,  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  not  a  statement	201	None	replace
1349	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  null,  options.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  null,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  null,  options.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	201	None	replace
1350	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(cmd.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(cmd.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	112	2	replace
1351	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(cmd.toString());  }  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(cmd.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(cmd.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	112	2	replace
1352	[BUG]  [BUGGY]  nisip.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(Buff.toString());  }  [CE]  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(Buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.append( ", ").append(buff.charAt(0))  {  throw  new  MissingOptionException(Buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  	32	None	replace
1353	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(Buffer.toString());  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(Buffer.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(Buffer.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  not  a  statement	32	None	replace
1354	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	89	2	replace
1355	[BUG]  [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(requiredOptions!=  null)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	compilable	  [FE]  AssertionFailedError  	89	2	replace
1356	[BUG]  [BUGGY]  Ilerator  iter  =  options.iterator();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Ilerator  iter  =  options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Ilerator  iter  =  options.iterator();	  Iterator    iter    =    requiredOptions.iterator();    if(opts!=    null)    {    for(Iterator    iter    =    options.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
1357	[BUG]  [BUGGY]  Iterator  <  Option>  options  =  options.iterator();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  options  =  options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  options  =  options.iterator();	  Iterator    iter    =    requiredOptions.iterator();    if(opts!=    null)    {    for(Iterator    iter    =    options.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  cannot  find  symbol	249	None	replace
1358	[BUG]  [BUGGY]  IllegalStateException.println(buff,  buf);  [CE]  cannot  find  symbol  buf  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  buf);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  buf);	  IllegalStateException.println(buff);    	non-compiled	[CE]  cannot  find  symbol  buf	182	None	replace
1359	[BUG]  [BUGGY]  IllegalStateException.println(buff,  BAD_EXPECTED);  [CE]  cannot  find  symbol  BAD_EXPECTED  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  BAD_EXPECTED);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  BAD_EXPECTED);	  IllegalStateException.println(buff);    	non-compiled	[CE]  cannot  find  symbol  BAD_EXPECTED	182	None	replace
1360	[BUG]  [BUGGY]  buff.append( "n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n "  [CE]  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n "  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "n ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n "	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(iter.next());    }    	non-compiled	[CE]  	60	None	replace
1361	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  this.options.toString());  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  this.options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  this.options.toString());	  Throwables.throw    new    MissingOptionException(buff,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1362	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buffer,  buff.toString());  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buffer,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buffer,  buff.toString());	  Throwables.throw    new    MissingOptionException(buff,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1363	[BUG]  [BUGGY]  if(options.hasOption(options))  {  buff.append( ",   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }  [CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options.hasOption(options))  {  buff.append( ",   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options.hasOption(options))  {  buff.append( ",   ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(buff.toString());    	non-compiled	[CE]  method  hasOption  in  class  Options  cannot  be  applied  to  given  types;	110	None	replace
1364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	110	2	replace
1365	[BUG]  [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options!=  null)  {  buff.append( ", ").append(buff.toString());  buff.append( ", ").append(buff.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(   ",       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	110	2	replace
1366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( ", ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( ", ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
1367	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( ", ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( ", ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  else  {  buff.append( ", ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
1368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
1369	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString());  }	          buff.append(       "    <           ").append(buff.toString());    buff.append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	51	2	replace
1370	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  for(Iterator  iter  =  options.iterator();  iter.hasNext();)  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    if(opts!=    null)    {    for(Iterator    iter    =    options.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  illegal  start  of  expression	249	None	replace
1371	[BUG]  [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  buff.append(options.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  buff.append(options.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  options.iterator();  if(requiredOptions!=  null)  {  buff.append(options.next());  }	  Iterator    iter    =    requiredOptions.iterator();    if(opts!=    null)    {    for(Iterator    iter    =    options.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	249	None	replace
1372	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:fx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString()  + ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException( "Missing  option: "  +  buff.toString()  + ", ");	  throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:fx  	65	2	replace
1373	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString()  + ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:fx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString()  + ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  option: "  +  buff.toString()  + ", ");	  throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [option:fx  	65	2	replace
1374	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString(),  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  option: "  +  buff.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  option: "  +  buff.toString(),  options);	  throw    new    MissingOptionException(   "Missing    option:   "    +    buff.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	65	None	replace
1375	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:fx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString()  + ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException( "Missing  options: "  +  buff.toString()  + ", ");	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:fx  	68	2	replace
1376	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString()  + ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:fx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  options: "  +  buff.toString()  + ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  options: "  +  buff.toString()  + ", ");	  throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<Missing  [required  options:  fx]>  but  was:<Missing  [options:fx  	68	2	replace
1377	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.to  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.to  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.to	  	non-compiled	[CE]  ')'  expected	80	None	add
1378	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	80	2	add
1379	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	80	2	add
1380	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString()  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString()  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString()	  	non-compiled	[CE]  ')'  expected	80	None	add
1381	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.to  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.to  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff  ==  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.to	  	non-compiled	[CE]  ')'  expected	80	None	add
1382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[ ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "[ ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	165	2	replace
1383	[BUG]  [BUGGY]  buff.append( "[ ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[ ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "[ ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "n   ");    }    	compilable	  [FE]  AssertionFailedError  	165	2	replace
1384	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "[ ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( "[ ");	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1385	[BUG]  [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "[ ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    buff.append(buff.toString());  buff.append( "[ ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        buff.append(buff.toString());    buff.append( "[ ");	  	compilable	  [FE]  ComparisonFailure  	69	2	add
1386	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  }  [CE]  unclosed  string  literal  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append( "  <   ").append(buff.toString()).append( "> ");  }  else  {  buff.append( "  }	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    	non-compiled	[CE]  unclosed  string  literal	89	None	replace
1387	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  error,  options.toString());  [CE]  cannot  find  symbol  error  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  error,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  error,  options.toString());	  throw    new    MissingOptionException(msg,    buff,    options.toString());    	non-compiled	[CE]  cannot  find  symbol  error	221	None	replace
1388	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  path,  options.toString());  [CE]  cannot  find  symbol  path  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  path,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  path,  options.toString());	  throw    new    MissingOptionException(msg,    buff,    options.toString());    	non-compiled	[CE]  cannot  find  symbol  path	221	None	replace
1389	[BUG]  [BUGGY]  IllegalStateException.println(buff, "Unknown  statement ");  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff, "Unknown  statement ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff, "Unknown  statement ");	  IllegalStateException.println(buff);    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
1390	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ");    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	42	2	add
1391	[BUG]  [BUGGY]          buff.append(   "n   ");  buff.append('n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ");    buff.append('n');	  	compilable	  [FE]  ComparisonFailure  	42	2	add
1392	[BUG]  [BUGGY]          buff.append(   "n   ");  buff.append( "n   ")  [CE]  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ");  buff.append( "n   ")  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ");    buff.append( "n   ")	  	non-compiled	[CE]  	42	None	add
1393	[BUG]  [BUGGY]  Iterator  <  Object>  iter  =  requiredOptions.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Object>  iter  =  requiredOptions.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Object>  iter  =  requiredOptions.iterator();	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(options.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	27	None	replace
1394	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  null,  requiredOptions,  buff.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  null,  requiredOptions,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  null,  requiredOptions,  buff.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	201	None	replace
1395	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  null,  methodName,  buff.toString());  [CE]  cannot  find  symbol  methodName  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  null,  methodName,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  null,  methodName,  buff.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  methodName	201	None	replace
1396	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  null,  stringBuffer,  buff.toString());  [CE]  cannot  find  symbol  stringBuffer  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  null,  stringBuffer,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  null,  stringBuffer,  buff.toString());	  throw    new    MissingOptionException(buff,    null,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  stringBuffer	201	None	replace
1397	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  options,   " ");  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  options,   " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString(),  options,   " ");	  throw    new    MissingOptionException(buff.toString(),    options,   "       ");    	non-compiled	[CE]  cannot  find  symbol  option	167	None	replace
1398	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  opts, " ");  [CE]  cannot  find  symbol  opts  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  opts, " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  opts, " ");	  throw    new    MissingOptionException(buff.toString(),    options,   "       ");    	non-compiled	[CE]  cannot  find  symbol  opts	167	None	replace
1399	[BUG]  [BUGGY]  buff.append(muff.toString());  [CE]  cannot  find  symbol  muff  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(muff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(muff.toString());	  bucket.append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  muff	84	None	replace
1400	[BUG]  [BUGGY]  While(buff!=  null)  {  buff.append( "no ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  buff.append( "no ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  buff.append( "no ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "no   ");    }    	non-compiled	[CE]  	233	None	replace
1401	[BUG]  [BUGGY]  [FE]  OutOfMemoryError  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null)  {  buff.append( "no ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	while(buff!=  null)  {  buff.append( "no ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "no   ");    }    	compilable	  [FE]  OutOfMemoryError  	233	2	replace
1402	[BUG]  [BUGGY]  while(buff!=  null)  {  buff.append( "no ");  }  [FE]  OutOfMemoryError  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null)  {  buff.append( "no ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	while(buff!=  null)  {  buff.append( "no ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "no   ");    }    	compilable	  [FE]  OutOfMemoryError  	233	2	replace
1403	[BUG]  [BUGGY]  While(buff!=  null)  {  buff.append( "msg.no.required ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  buff.append( "msg.no.required ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  buff.append( "msg.no.required ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "no   ");    }    	non-compiled	[CE]  	233	None	replace
1404	[BUG]  [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  <  String>  iter  =  requiredOptions.iterator();  buff.append(iter.next());	  if(buff!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
1405	[BUG]  [BUGGY]  foundOptions(buff);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff);	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1406	[BUG]  [BUGGY]  foundOptions(buff,  null);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  null);	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1407	[BUG]  [BUGGY]  foundOptions(buff,  false);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  false);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  false);	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    ==    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
1408	[BUG]  [BUGGY]  foundOptions(buff,  iter.size()  -  1);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  iter.size()  -  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  iter.size()  -  1);	  foundOptions(buff,    requiredOptions.size()    -    1);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
1409	[BUG]  [BUGGY]  nisipIterator  iter  =  requiredOptions.iterator();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  iter  =  requiredOptions.iterator();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  iter  =  requiredOptions.iterator();	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1410	[BUG]  [BUGGY]  nisipIterator  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisipIterator  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisipIterator  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
1411	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1412	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1413	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1414	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions!=  null)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1415	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1416	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   ",   ");  }  if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    if(requiredOptions.size()  >  0)  {  buff.append( ", ");  }  else  {  buff.append( ", ");  }	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	210	2	add
1417	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",> ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",> ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	54	2	replace
1418	[BUG]  [BUGGY]  buff.append( ",> ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <        [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",> ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",> ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ",    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	54	2	replace
1419	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	188	None	add
1420	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString()  [CE]  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString()  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString()	  	non-compiled	[CE]  	188	None	add
1421	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
1422	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "null   ").append(buff.toString());  }  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	188	2	add
1423	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ".mv.required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( ".mv.required.options   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	10	2	add
1424	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ".mv.required.options   ").append(cmd.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ").append(cmd.toString());  buff.append( ".mv.required.options   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ").append(cmd.toString());    buff.append( ".mv.required.options   ").append(cmd.toString());	  	compilable	  [FE]  ComparisonFailure  	10	2	add
1425	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('[');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append('[');	  	compilable	  [FE]  ComparisonFailure  	160	2	add
1426	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('[');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append('[');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append('[');	  	compilable	  [FE]  ComparisonFailure  	160	2	add
1427	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxn  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxn  	160	2	add
1428	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxn  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append('n');  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append('n');    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxn  	160	2	add
1429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1430	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1431	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1432	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1433	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1434	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  >  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    >    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	71	2	add
1435	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), " ",  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), " ",  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()), " ",  buff);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "       ");    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	23	None	replace
1436	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString())+ ",  cannot  be  applied  to  given  types;  [CE]  unclosed  string  literal  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString())+ ",  cannot  be  applied  to  given  types;  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString())+ ",  cannot  be  applied  to  given  types;	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "       ");    	non-compiled	[CE]  unclosed  string  literal	23	None	replace
1437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  null> ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <  null> ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	189	2	replace
1438	[BUG]  [BUGGY]  buff.append( "  <  null> ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <  null> ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <  null> ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "null   ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	189	2	replace
1439	[BUG]  [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  buff.append( "  <   ").append(buff.toString()).append('.> ");  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "  <     ").append(buff.toString()).append(   ".>   ");  buff.append( "  <   ").append(buff.toString()).append('.> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "    <       ").append(buff.toString()).append(   ".>   ");    buff.append( "  <   ").append(buff.toString()).append('.> ");	  	non-compiled	[CE]  unclosed  character  literal	261	None	add
1440	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.toString ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.toString ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
1441	[BUG]  [BUGGY]  buff.append( "msg.required.toString ").append(cmd.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.toString ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.toString ").append(cmd.toString());	          buff.append(   "n   ").append(cmd.toString());    	compilable	  [FE]  AssertionFailedError  	49	2	replace
1442	[BUG]  [BUGGY]  buff.append(cmd.substring(1));  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.substring(1));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.substring(1));	  buff.append(cmd.toString());    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
1443	[BUG]  [BUGGY]  foundOptions(buff,  requiredOptions.toArray(new  String[requiredOptions.size()  ]));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  requiredOptions.toArray(new  String[requiredOptions.size()  ]));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  requiredOptions.toArray(new  String[requiredOptions.size()  ]));	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
1444	[BUG]  [BUGGY]  foundOptions(buff,  null)  {  throw  new  MissingOptionException( " ");  }  [CE]  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  null)  {  throw  new  MissingOptionException( " ");  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  	79	None	replace
1445	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  options,  requiredOptions);  [CE]  cannot  find  symbol  option  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  options,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString(),  options,  requiredOptions);	  throw    new    MissingOptionException(buff,    options.toString(),    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  option	127	None	replace
1446	[BUG]  [BUGGY]  foundError(buff,  str.toString(),  null);  [CE]  cannot  find  symbol  str  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  str.toString(),  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  str.toString(),  null);	  foundError(buff.toString(),    null);    	non-compiled	[CE]  cannot  find  symbol  str	247	None	replace
1447	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  buff.toString(),  requiredOptions);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  buff.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  buff.toString(),  requiredOptions);	  Throwables.throw    new    MissingOptionException(buff,    buff.toString());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
1448	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  buffer.toString());  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  buffer.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  buffer.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buffer.toString());    }    	non-compiled	[CE]  not  a  statement	170	None	replace
1449	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  iter.toString());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  iter.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(buffer,  iter.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buffer.toString());    }    	non-compiled	[CE]  not  a  statement	170	None	replace
1450	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  tokenList.toString());  [CE]  cannot  find  symbol  tokenList  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  tokenList.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  tokenList.toString());	  throw    new    MissingOptionException(buff,    path.toString());    	non-compiled	[CE]  cannot  find  symbol  tokenList	243	None	replace
1451	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",no ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",no ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   ",n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	213	2	replace
1452	[BUG]  [BUGGY]  buff.append( ",no ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  fxn      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",no ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",no ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append(   ",n       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	213	2	replace
1453	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(buff.charAt(0)).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  <   ").append(buff.charAt(0)).append('>');	  foundOptions    =    false;    	compilable	  [FE]  AssertionFailedError  	153	2	replace
1454	[BUG]  [BUGGY]  buff.append( "  <   ").append(buff.charAt(0)).append('>');  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(buff.charAt(0)).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(buff.charAt(0)).append('>');	  foundOptions    =    false;    	compilable	  [FE]  AssertionFailedError  	153	2	replace
1455	[BUG]  [BUGGY]  foundError(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(String.valueOf(buff.toString()));	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
1456	[BUG]  [BUGGY]  bucket.append(buff.toString()).append( ", ");  [CE]  cannot  find  symbol  bucket  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  bucket.append(buff.toString()).append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	bucket.append(buff.toString()).append( ", ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  cannot  find  symbol  bucket	114	None	replace
1457	[BUG]  [BUGGY]  foundOptions(buff,  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  ';'  expected	193	None	replace
1458	[BUG]  [BUGGY]  aughtException(String.valueOf(buff.toString()));  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  aughtException(String.valueOf(buff.toString()));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	aughtException(String.valueOf(buff.toString()));	  if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
1459	[BUG]  [BUGGY]  foundOptions(buff,  false)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [CE]  ';'  expected  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  false)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  false)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	non-compiled	[CE]  ';'  expected	193	None	replace
1460	[BUG]  [BUGGY]  buff.append('  {  ').append(buff.toString());  [CE]  unclosed  character  literal  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('  {  ').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('  {  ').append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append('    <       ").append(buff.toString());    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
1461	[BUG]  [BUGGY]  foundOptions(buff,  null)  {  throw  new  MissingOptionException(Buff.toString());  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  null)  {  throw  new  MissingOptionException(Buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  null)  {  throw  new  MissingOptionException(Buff.toString());  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  ';'  expected	82	None	replace
1462	[BUG]  [BUGGY]  foundOption(buff,  null)  {  throw  new  MissingOptionException(Buff.toString());  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOption(buff,  null)  {  throw  new  MissingOptionException(Buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOption(buff,  null)  {  throw  new  MissingOptionException(Buff.toString());  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  ';'  expected	82	None	replace
1463	[BUG]  [BUGGY]  foundOptions(buff,  false)  {  throw  new  MissingOptionException(Buff.toString());  }  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  false)  {  throw  new  MissingOptionException(Buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  false)  {  throw  new  MissingOptionException(Buff.toString());  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=    null)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  ';'  expected	82	None	replace
1464	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append('[').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "[   ").append(buff.toString());    buff.append('[').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	136	2	add
1465	[BUG]  [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append('[').append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "[   ").append(buff.toString());  buff.append('[').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "[   ").append(buff.toString());    buff.append('[').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	136	2	add
1466	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append('.  <   ").append(buff.toString());  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   ".  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append('.  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   ".    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append('.  <   ").append(buff.toString());	  	non-compiled	[CE]  unclosed  character  literal	55	None	add
1467	[BUG]  [BUGGY]  foundByNotNullOrUndefined();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundByNotNullOrUndefined();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundByNotNullOrUndefined();	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1468	[BUG]  [BUGGY]  foundByNotNullOrUndefined(buff.toString());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundByNotNullOrUndefined(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundByNotNullOrUndefined(buff.toString());	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1469	[BUG]  [BUGGY]  foundErrors(buff,  new  MissingOptionException( " "));  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff,  new  MissingOptionException( " "));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff,  new  MissingOptionException( " "));	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1470	[BUG]  [BUGGY]  foundErrors(buff,  new  MissingOptionException( "Missing  statement "));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff,  new  MissingOptionException( "Missing  statement "));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff,  new  MissingOptionException( "Missing  statement "));	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    Throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	155	None	replace
1471	[BUG]  [BUGGY]  foundError(buff,  new  MissingOptionException( "msg.no.required ",  null));  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  new  MissingOptionException( "msg.no.required ",  null));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  new  MissingOptionException( "msg.no.required ",  null));	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	33	None	replace
1472	[BUG]  [BUGGY]  foundError(buff,  new  MissingOptionException( "msg.no.required ",  requiredOptions));  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  new  MissingOptionException( "msg.no.required ",  requiredOptions));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  new  MissingOptionException( "msg.no.required ",  requiredOptions));	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	33	None	replace
1473	[BUG]  [BUGGY]  foundError(buff,  new  MissingOptionException( "msg.required.type ",  null));  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  new  MissingOptionException( "msg.required.type ",  null));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  new  MissingOptionException( "msg.required.type ",  null));	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	33	None	replace
1474	[BUG]  [BUGGY]  foundError(buff,  new  MissingOptionException( " ").toString());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  new  MissingOptionException( " ").toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  new  MissingOptionException( " ").toString());	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
1475	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  AssertionFailedError  	19	2	replace
1476	[BUG]  [BUGGY]  if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  ==  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  else  {  buff  =  new  StringBuffer();  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    StringBuffer    buff    =    new    StringBuffer();    	compilable	  [FE]  AssertionFailedError  	19	2	replace
1477	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
1478	[BUG]  [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options    fxmv.required.options      [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "mv.required.options     ").append(buff.toString());    buff.append(   ",mv.required.options     ").append(buff.toString());  buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "mv.required.options       ").append(buff.toString());        buff.append(   ",mv.required.options       ").append(buff.toString());    buff.append( "mv.required.options   ").append(buff.toString());  buff.append( ",mv.required.options   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options      fxmv.required.options        	255	2	add
1479	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append(',').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    buff.append(',').append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	253	2	add
1480	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append(',').append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append(',').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    buff.append(',').append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	253	2	add
1481	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    buff.append( "  }   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	253	2	add
1482	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(',').append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(',').append(buff.toString());    buff.append( "  }   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	253	2	add
1483	[BUG]  [BUGGY]  if(buffer.length()  >  0)  {  buff.append( ",   ").append(buff.toString());  buff.append(',').append(buff.toString());  }  [CE]  cannot  find  symbol  buffer  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buffer.length()  >  0)  {  buff.append( ",   ").append(buff.toString());  buff.append(',').append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buffer.length()  >  0)  {  buff.append( ",   ").append(buff.toString());  buff.append(',').append(buff.toString());  }	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	254	None	replace
1484	[BUG]  [BUGGY]  if(buffer.length()  >  0)  {  buff.append( ",   ").append(buff.toString());  buff.append(',').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [CE]  cannot  find  symbol  buffer  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buffer.length()  >  0)  {  buff.append( ",   ").append(buff.toString());  buff.append(',').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buffer.length()  >  0)  {  buff.append( ",   ").append(buff.toString());  buff.append(',').append(buff.toString());  }  else  {  throw  new  MissingException( " ");  }	          buff.append(       ",       ").append(buff.toString());    buff.append(',').append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	254	None	replace
1485	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append(   ")  <   ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(requiredOptions.toString());    buff.append(   ")  <   ").append(requiredOptions.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
1486	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append(   ")  <   ").append(requiredOptions.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    [f  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString());  buff.append(   ")  <   ").append(requiredOptions.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString());    buff.append(   ")  <   ").append(requiredOptions.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      [f  	35	2	add
1487	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('n').append(requiredOptions.size()  >  0);	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1488	[BUG]  [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  >  0);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  >  0);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('n').append(requiredOptions.size()  >  0);	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1489	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  +  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('n').append(requiredOptions.size()  +  1);	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1490	[BUG]  [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  +  1);  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  +  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('n').append(requiredOptions.size()  +  1);	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1491	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  >  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('n').append(requiredOptions.size()  >  1);	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1492	[BUG]  [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  >  1);  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('n').append(requiredOptions.size()  >  1);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('n').append(requiredOptions.size()  >  1);	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1493	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('r');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('n');    buff.append('r');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1494	[BUG]  [BUGGY]  buff.append('n');  buff.append('r');  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('n');  buff.append('r');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('n');    buff.append('r');	  	compilable	  [FE]  ComparisonFailure  	237	2	add
1495	[BUG]  [BUGGY]  buff.append( ", ").append(requiredOptions.toString()));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(requiredOptions.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(requiredOptions.toString()));	  buff.append(   "    <       ").append(requiredOptions.toString()));    	non-compiled	[CE]  	100	None	replace
1496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  was:   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ",  was:   ").append(options.toString());	  buff.append(   ",   ").append(options.toString());    	compilable	  [FE]  AssertionFailedError  	142	2	replace
1497	[BUG]  [BUGGY]  buff.append( ",  was:   ").append(options.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  was:   ").append(options.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",  was:   ").append(options.toString());	  buff.append(   ",   ").append(options.toString());    	compilable	  [FE]  AssertionFailedError  	142	2	replace
1498	[BUG]  [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append('>   ");  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append( "  <   ").append(cmd.toString()).append('>   ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    buff.append( "  <   ").append(cmd.toString()).append('>   ");	  	non-compiled	[CE]  unclosed  character  literal	95	None	add
1499	[BUG]  [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append('  <   ").append(cmd.toString()).append( ">   ");  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(cmd.toString()).append(   ">   ");  buff.append('  <   ").append(cmd.toString()).append( ">   ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(cmd.toString()).append(   ">   ");    buff.append('  <   ").append(cmd.toString()).append( ">   ");	  	non-compiled	[CE]  unclosed  character  literal	95	None	add
1500	[BUG]  [BUGGY]  buff.append( ", ").append(buffer.toString()));  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(buffer.toString()));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(buffer.toString()));	  buff.append(   "    <       ").append(buffer.toString()));    	non-compiled	[CE]  	101	None	replace
1501	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "no   ").append(buff.toString());  buff.append('n').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "no   ").append(buff.toString());  buff.append('n').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
1502	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "no   ").append(buff.toString());  buff.append('n').append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "no   ").append(buff.toString());  buff.append('n').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "no   ").append(buff.toString());  buff.append('n').append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
1503	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "no   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "no   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
1504	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "no   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append('n').append(buff.toString());  buff.append( "no   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append('n').append(buff.toString());    buff.append( "no   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	214	2	add
1505	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff.toString());  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff.toString());	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    Throwables.showError(String.valueOf(buff.toString()));    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	18	None	replace
1506	[BUG]  [BUGGY]  if(options.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
1507	[BUG]  [BUGGY]  if(options.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString()  [CE]  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(options.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString()  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(options.size()  >  0)  {  buff.append( "mv.required.options ").append(buff.toString());  }  else  {  buff.append( "mv.required.options ").append(buff.toString()	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   "mv.required.options       ").append(buff.toString());    	non-compiled	[CE]  	2	None	replace
1508	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }	  buff.append(buff.toString());    .append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	77	2	replace
1509	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( ", ");  }	  buff.append(buff.toString());    .append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	77	2	replace
1510	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append(buff.toString());  }	  buff.append(buff.toString());    .append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	77	2	replace
1511	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append(buff.toString());  }	  buff.append(buff.toString());    .append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	77	2	replace
1512	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }	  buff.append(buff.toString());    .append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	77	2	replace
1513	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()  >  0)  {  buff.append(buff.toString());  }  else  {  buff.append( "n ");  }	  buff.append(buff.toString());    .append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	77	2	replace
1514	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( ".mv.required.options   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "mv.required.options   ");    buff.append( ".mv.required.options   ");	  	compilable	  [FE]  ComparisonFailure  	44	2	add
1515	[BUG]  [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( ".mv.required.options   ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "mv.required.options   ");  buff.append( ".mv.required.options   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "mv.required.options   ");    buff.append( ".mv.required.options   ");	  	compilable	  [FE]  ComparisonFailure  	44	2	add
1516	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  this.opts.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  this.opts.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  this.opts.iterator();	  Iterator    <    String>    iter    =    opts.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	129	None	replace
1517	[BUG]  [BUGGY]  While(buff!=  null)  {  buff.append( "null ");  }  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    neededOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	non-compiled	[CE]  	234	None	replace
1518	[BUG]  [BUGGY]  [FE]  OutOfMemoryError  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	while(buff!=  null)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    neededOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	compilable	  [FE]  OutOfMemoryError  	234	2	replace
1519	[BUG]  [BUGGY]  while(buff!=  null)  {  buff.append( "null ");  }  [FE]  OutOfMemoryError  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	while(buff!=  null)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    neededOptions.iterator();    iter.hasNext();)    {    buff.append(   "null   ");    }    	compilable	  [FE]  OutOfMemoryError  	234	2	replace
1520	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  }  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    if(buff  ==  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  }	  	non-compiled	[CE]  unreachable  statement	195	None	add
1521	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  }	  	non-compiled	[CE]  unreachable  statement	195	None	add
1522	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));	  	non-compiled	[CE]  unreachable  statement	195	None	add
1523	[BUG]  [BUGGY]  buff.add(Buff.toString(buff));  [CE]  cannot  find  symbol  Buff  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.add(Buff.toString(buff));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.add(Buff.toString(buff));	  foundOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol  Buff	152	None	replace
1524	[BUG]  [BUGGY]  buff.add(Buff.toString());  [CE]  cannot  find  symbol  Buff  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.add(Buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.add(Buff.toString());	  foundOptions.add(buff);    	non-compiled	[CE]  cannot  find  symbol  Buff	152	None	replace
1525	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  string,  requiredOptions.toString());  [CE]  cannot  find  symbol  string  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  string,  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  string,  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol  string	202	None	replace
1526	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  tokenList,  requiredOptions.toString());  [CE]  cannot  find  symbol  tokenList  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  tokenList,  requiredOptions.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  tokenList,  requiredOptions.toString());	  throw    new    MissingOptionException(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol  tokenList	202	None	replace
1527	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(), " ",  buff);  [CE]  <identifier>  expected  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff.toString(), " ",  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff.toString(), " ",  buff);	  Throwables.throw    new    MissingOptionException(buff.toString(),   "       ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
1528	[BUG]  [BUGGY]  foundOptions(buff,  false)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  false)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  false)  {  throw  new  MissingOptionException(buff.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    0)    {    throw    new    MissingOptionException(Buff.toString());    }    	non-compiled	[CE]  ';'  expected	32	None	replace
1529	[BUG]  [BUGGY]  AllOptions(buff,  iter.requiredOptions);  [CE]  cannot  find  symbol  requiredOptions  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(buff,  iter.requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(buff,  iter.requiredOptions);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  requiredOptions	154	None	replace
1530	[BUG]  [BUGGY]  AllOptions(buff,  opts);  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  AllOptions(buff,  opts);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	AllOptions(buff,  opts);	  AllOptions(buff,    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  opts	154	None	replace
1531	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <    >  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ",  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( ",  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      fx    <      >  	204	2	add
1532	[BUG]  [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ",  <   ").append(buff.toString()).append('>');  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  <    fx  <    >  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ",  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( ",  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    <      fx    <      >  	204	2	add
1533	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ".  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( ".  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	204	2	add
1534	[BUG]  [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ".  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(buff.toString()).append('>');  buff.append( ".  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(buff.toString()).append('>');    buff.append( ".  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	204	2	add
1535	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[ ").append(buff.toString()).append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "[ ").append(buff.toString()).append( "] ");	  [Delete]    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1536	[BUG]  [BUGGY]  buff.append( "[ ").append(buff.toString()).append( "] ");  [FE]  AssertionFailedError  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[ ").append(buff.toString()).append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "[ ").append(buff.toString()).append( "] ");	  [Delete]    	compilable	  [FE]  AssertionFailedError  	226	2	replace
1537	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  'n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  'n');	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	compilable	  [FE]  ComparisonFailure  	196	2	replace
1538	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  'n');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  'n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n')+  'n');	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	compilable	  [FE]  ComparisonFailure  	196	2	replace
1539	[BUG]  [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [CE]  not  a  statement  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  'n'));	  throw    new    MissingOptionException(String.valueOf(buff.toString()    +    'n'));    	non-compiled	[CE]  not  a  statement	196	None	replace
1540	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  buff.toString(),  iter);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  buff.toString(),  iter);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  buff.toString(),  iter);	  throw    new    MissingOptionException(buff,    str.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	239	None	replace
1541	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  buff.toString(),  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  buff.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  buff.toString(),  requiredOptions);	  throw    new    MissingOptionException(buff,    str.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	239	None	replace
1542	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString()),  buff);  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString()),  buff);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.get(buff.toString()),  buff);	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	34	None	replace
1543	[BUG]  [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  this.options));  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  this.options));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(requiredOptions.get(buff.toString(),  this.options));	  buff.append(   "    <       ").append(requiredOptions.get(buff.toString()));    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	34	None	replace
1544	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  cmd,  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  cmd,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  cmd,  requiredOptions);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	128	None	replace
1545	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  cmd,  exception);  [CE]  cannot  find  symbol  exception  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  cmd,  exception);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  cmd,  exception);	  throw    new    MissingOptionException(buff,    options.toString(),    cmd);    	non-compiled	[CE]  cannot  find  symbol  exception	128	None	replace
1546	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  str.toString(),  iter);  [CE]  cannot  find  symbol  str  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  str.toString(),  iter);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  str.toString(),  iter);	  throw    new    MissingOptionException(buff.toString(),    iter);    	non-compiled	[CE]  cannot  find  symbol  str	159	None	replace
1547	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	78	2	add
1548	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	78	2	add
1549	[BUG]  [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString()  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString()  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=        null)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff!=  null)  {  throw  new  MissingOptionException(buff.toString()	  	non-compiled	[CE]  ')'  expected	78	None	add
1550	[BUG]  [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(opts.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(opts.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  requiredOptions.iterator();  while(iter.hasNext())  {  buff.append(opts.next());  }	  For(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(opts.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	29	None	replace
1551	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( "n ");  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
1552	[BUG]  [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( "n ");  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( "n ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( "n ");  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
1553	[BUG]  [BUGGY]  buff.append(cmd.toString());  if(cmd.isEmpty())  {  buff.append(cmd.toString());  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd.isEmpty())  {  buff.append(cmd.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    if(cmd.isEmpty())  {  buff.append(cmd.toString());  }	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
1554	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
1555	[BUG]  [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( ", ");  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(cmd.toString());  if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( ", ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(cmd.toString());    if(cmd!=  null)  {  buff.append(cmd.toString());  }  else  {  buff.append( ", ");  }	  	compilable	  [FE]  ComparisonFailure  	13	2	add
1556	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ".mv.required.options   ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options   ".toString());    buff.append( ".mv.required.options   ".toString());	  	compilable	  [FE]  ComparisonFailure  	15	2	add
1557	[BUG]  [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ".mv.required.options   ".toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options   ".toString());  buff.append( ".mv.required.options   ".toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options   ".toString());    buff.append( ".mv.required.options   ".toString());	  	compilable	  [FE]  ComparisonFailure  	15	2	add
1558	[BUG]  [BUGGY]  Helfer.handleMissingException( " ");  [CE]  cannot  find  symbol  Helfer  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Helfer.handleMissingException( " ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Helfer.handleMissingException( " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Helfer	227	None	replace
1559	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[null] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "[null] ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "null   ");    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
1560	[BUG]  [BUGGY]  buff.append( "[null] ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[null] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "[null] ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "null   ");    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
1561	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  {  null  }   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  {  null  }   ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "null   ");    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
1562	[BUG]  [BUGGY]  buff.append( "  {  null  }   ");  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  {  null  }   ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  {  null  }   ");	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(   "null   ");    }    	compilable	  [FE]  AssertionFailedError  	163	2	replace
1563	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "n   ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
1564	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  if(requiredOptions!=  null)  {  buff.append( "null ").append(buff.toString());  }	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
1565	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1566	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    if(requiredOptions!=  null)  {  buff.append(   "n     ").append(buff.toString());  }  if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    if(requiredOptions!=  null)  {  buff.append( "   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	61	2	add
1567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('[');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('[');	  buff.append('n');    	compilable	  [FE]  AssertionFailedError  	238	2	replace
1568	[BUG]  [BUGGY]  buff.append('[');  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('[');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('[');	  buff.append('n');    	compilable	  [FE]  AssertionFailedError  	238	2	replace
1569	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	50	2	add
1570	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    if(requiredOptions.size()  >  0)  {  buff.append( "  <   ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	50	2	add
1571	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append('  <   ").append(buff.toString());  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString());    buff.append(   "  <     ").append(buff.toString());  buff.append( "  <   ").append(buff.toString());  buff.append('  <   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString());        buff.append(   "    <       ").append(buff.toString());    buff.append( "  <   ").append(buff.toString());  buff.append('  <   ").append(buff.toString());	  	non-compiled	[CE]  unclosed  character  literal	50	None	add
1572	[BUG]  [BUGGY]  foundErrors(buff,  str.toString());  [CE]  cannot  find  symbol  str  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundErrors(buff,  str.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundErrors(buff,  str.toString());	  foundErrors(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  str	246	None	replace
1573	[BUG]  [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString());	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "Unexpected    exception:   "    +    buff.toString());    	non-compiled	[CE]  not  a  statement	259	None	replace
1574	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString(),  options);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()), "Unexpected  exception: "  +  buff.toString(),  options);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),   "Unexpected    exception:   "    +    buff.toString());    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	259	None	replace
1575	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  symbol.toString());  [CE]  cannot  find  symbol  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  symbol.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  symbol.toString());	  throw    new    MissingOptionException(buff,    str.toString());    	non-compiled	[CE]  cannot  find  symbol  symbol	241	None	replace
1576	[BUG]  [BUGGY]  foundOption(buff,  options.toString());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOption(buff,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOption(buff,  options.toString());	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(options.size()    >    0)    {    throw    new    MissingOptionException(options.toString());    }    	non-compiled	[CE]  cannot  find  symbol	157	None	replace
1577	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(options.toString());  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(options.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(options.toString());  }	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(options.size()    >    0)    {    throw    new    MissingOptionException(options.toString());    }    	non-compiled	[CE]  not  a  statement	157	None	replace
1578	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  condition);  [CE]  cannot  find  symbol  condition  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  condition);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  condition);	  throw    new    MissingOptionException(buff.toString(),    error);    	non-compiled	[CE]  cannot  find  symbol  condition	40	None	replace
1579	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  ComparisonFailure  	230	2	replace
1580	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException( " ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff!=    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  ComparisonFailure  	230	2	replace
1581	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1582	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "  =   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "  =   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1583	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  null. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =  null. ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1584	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  null. ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =  null. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =  null. ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	216	2	add
1585	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  if(!opts.isEmpty())  {  throw  new  MissingOptionException( " ");  }  [CE]  cannot  find  symbol  opts  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n  =   ").append(buff.toString());  buff.append( "n  =   ").append(buff.toString());  if(!opts.isEmpty())  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n    =   ").append(buff.toString());    buff.append( "n  =   ").append(buff.toString());  if(!opts.isEmpty())  {  throw  new  MissingOptionException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol  opts	216	None	add
1586	[BUG]  [BUGGY]  buff.append( "[ ").append(getName()).append( "] ");  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "[ ").append(getName()).append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "[ ").append(getName()).append( "] ");	  buff.append(buff.toString());    if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
1587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff  ==  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff  ==  null)  {  throw  new  MissingOptionException( " ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  AssertionFailedError  	229	2	replace
1588	[BUG]  [BUGGY]  if(buff  ==  null)  {  throw  new  MissingOptionException( " ");  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff  ==  null)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff  ==  null)  {  throw  new  MissingOptionException( " ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(buff    ==    null)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    	compilable	  [FE]  AssertionFailedError  	229	2	replace
1589	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ". ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ". ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	56	2	replace
1590	[BUG]  [BUGGY]  buff.append( ". ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ". ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ". ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	56	2	replace
1591	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.addoptions  fxmv.required.addoptions    [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ",mv.required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( ",mv.required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.addoptions  fxmv.required.addoptions    	180	2	add
1592	[BUG]  [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ",mv.required.addoptions   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.addoptions  fxmv.required.addoptions    [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ",mv.required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( ",mv.required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.addoptions  fxmv.required.addoptions    	180	2	add
1593	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ".mv.required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( ".mv.required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	180	2	add
1594	[BUG]  [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ".mv.required.addoptions   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.addoptions   ").append(buff.toString());  buff.append( ".mv.required.addoptions   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.addoptions   ").append(buff.toString());    buff.append( ".mv.required.addoptions   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	180	2	add
1595	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "required.options   ").append(buff.toString());    buff.append( ".required.options   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	178	2	add
1596	[BUG]  [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "required.options   ").append(buff.toString());  buff.append( ".required.options   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "required.options   ").append(buff.toString());    buff.append( ".required.options   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	178	2	add
1597	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
1598	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }	  	compilable	  [FE]  ComparisonFailure  	218	2	add
1599	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString()  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString()  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(buff.toString()	  	non-compiled	[CE]  ')'  expected	218	None	add
1600	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	88	2	add
1601	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	88	2	add
1602	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	88	2	add
1603	[BUG]  [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "    <         ").append(buff.toString()).append(     ">     ");    buff.append(   "  <     ").append(buff.toString()).append(   ">   ");  buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "        <               ").append(buff.toString()).append(       ">       ");        buff.append(   "    <       ").append(buff.toString()).append(   ">   ");    buff.append( "  <   ").append(buff.toString()).append( "> ");  buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	88	2	add
1604	[BUG]  [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  str.toString(),  buff);  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Throwables.throw  new  MissingOptionException(buff,  str.toString(),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Throwables.throw  new  MissingOptionException(buff,  str.toString(),  buff);	  Throwables.throw    new    MissingOptionException(buff.toString(),    buff);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
1605	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  Iterator    <    String>    iter    =    opts.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  not  a  statement	104	None	replace
1606	[BUG]  [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	suntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisuntetisunteti	  Iterator    <    String>    iter    =    opts.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  not  a  statement	104	None	replace
1607	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "null ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1608	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( "n   ");  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1609	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  {   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "  {   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	135	2	replace
1610	[BUG]  [BUGGY]  buff.append( "  {   ").append(buff.toString());  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  {   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  {   ").append(buff.toString());	          buff.append(       "    <           ").append(buff.toString());    buff.append(   ".append(   "    <       ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	135	2	replace
1611	[BUG]  [BUGGY]  buff.append( ", ").append(getMessage());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(getMessage());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(getMessage());	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
1612	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  offset);  [CE]  cannot  find  symbol  offset  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  offset);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  offset);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  cannot  find  symbol  offset	115	None	replace
1613	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  option);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  option);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(String.valueOf(buff.toString()),  buff,  option);	  throw    new    MissingOptionException(String.valueOf(buff.toString()),    buff);    	non-compiled	[CE]  cannot  find  symbol  option	115	None	replace
1614	[BUG]  [BUGGY]  Iterator  iter  =  buff.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  iter  =  buff.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  iter  =  buff.iterator();	  Iterator    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	24	None	replace
1615	[BUG]  [BUGGY]  new  MissingOptionException(String.valueOf(buff.toString()),  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  new  MissingOptionException(String.valueOf(buff.toString()),  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	new  MissingOptionException(String.valueOf(buff.toString()),  buff);	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    new    MissingOptionException(String.valueOf(buff.toString()));    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	231	None	replace
1616	[BUG]  [BUGGY]  buff.append( "required.options ").append(mad.toString());  [CE]  cannot  find  symbol  mad  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options ").append(mad.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "required.options ").append(mad.toString());	  buff.append(   "required.options   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  mad	179	None	replace
1617	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  buff.append( "  }   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    buff.append( "  }   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	111	2	add
1618	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  buff.append( "  }   ").append(cmd.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  buff.append( "  }   ").append(cmd.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    buff.append( "  }   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	111	2	add
1619	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  required);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(cmd.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  required);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(cmd.toString());    junit.framework.ComparisonFailure:  was:  <  [fx  >>  required);	  	non-compiled	[CE]  not  a  statement	111	None	add
1620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('-').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('-').append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1621	[BUG]  [BUGGY]  buff.append('-').append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('-').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('-').append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1622	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('[').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append('[').append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1623	[BUG]  [BUGGY]  buff.append('[').append(buff.toString());  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append('[').append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append('[').append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    buff.append('n').append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	215	2	replace
1624	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.options.null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.options.null ").append(buff.toString());	  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	122	2	replace
1625	[BUG]  [BUGGY]  buff.append( "msg.required.options.null ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.options.null ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.options.null ").append(buff.toString());	  buff.append(   "msg.bad.required.options.null   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	122	2	replace
1626	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(), "Unrequired  option: "));  [CE]  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(), "Unrequired  option: "));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(), "Unrequired  option: "));	  throw    new    MissingOptionException(buff.toString(),   "   "));    	non-compiled	[CE]  	224	None	replace
1627	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(), "Unrequired  options: "));  [CE]  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(), "Unrequired  options: "));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(), "Unrequired  options: "));	  throw    new    MissingOptionException(buff.toString(),   "   "));    	non-compiled	[CE]  	224	None	replace
1628	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(), "Unrequired  option: "  +  option);  [CE]  cannot  find  symbol  option  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(), "Unrequired  option: "  +  option);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(), "Unrequired  option: "  +  option);	  throw    new    MissingOptionException(buff.toString(),   "   "));    	non-compiled	[CE]  cannot  find  symbol  option	224	None	replace
1629	[BUG]  [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  buff.append( "  <   ").append(requiredOptions.toString()).append('>   ");  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "  <     ").append(requiredOptions.toString()).append(   ">   ");  buff.append( "  <   ").append(requiredOptions.toString()).append('>   ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "    <       ").append(requiredOptions.toString()).append(   ">   ");    buff.append( "  <   ").append(requiredOptions.toString()).append('>   ");	  	non-compiled	[CE]  unclosed  character  literal	92	None	add
1630	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.tokenList ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.tokenList ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
1631	[BUG]  [BUGGY]  buff.append( "msg.required.tokenList ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.tokenList ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.tokenList ");	          buff.append(   "n   ");    	compilable	  [FE]  AssertionFailedError  	43	2	replace
1632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required. ").append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1633	[BUG]  [BUGGY]  buff.append( "mv.required. ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required. ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required. ").append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    if(options!=    null)    {    buff.append(   "mv.required.options       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	4	2	replace
1634	[BUG]  [BUGGY]  throw  new  MissingOptionException(buffer,  buff.toString());  [CE]  cannot  find  symbol  buffer  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buffer,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buffer,  buff.toString());	  throw    new    MissingOptionException(msg,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  buffer	200	None	replace
1635	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  symbol: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	throw  new  MissingOptionException( "Missing  symbol: "  +  buff.toString());	  throw    new    MissingOptionException(msg,    buff.toString());    	compilable	  [FE]  ComparisonFailure  	200	2	replace
1636	[BUG]  [BUGGY]  throw  new  MissingOptionException( "Missing  symbol: "  +  buff.toString());  [FE]  ComparisonFailure  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException( "Missing  symbol: "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException( "Missing  symbol: "  +  buff.toString());	  throw    new    MissingOptionException(msg,    buff.toString());    	compilable	  [FE]  ComparisonFailure  	200	2	replace
1637	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ").append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required.options ").append('n');	  buff.append(   "mv.required.options   ".toString());    	compilable	  [FE]  AssertionFailedError  	16	2	replace
1638	[BUG]  [BUGGY]  buff.append( "mv.required.options ").append('n');  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required.options ").append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required.options ").append('n');	  buff.append(   "mv.required.options   ".toString());    	compilable	  [FE]  AssertionFailedError  	16	2	replace
1639	[BUG]  [BUGGY]  foundOption(buff,  false));  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOption(buff,  false));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOption(buff,  false));	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    If(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  ';'  expected	186	None	replace
1640	[BUG]  [BUGGY]  throw  new  MissingOptionException(buffer,  options.toString(),  options);  [CE]  cannot  find  symbol  buffer  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buffer,  options.toString(),  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buffer,  options.toString(),  options);	  throw    new    MissingOptionException(buff,    options.toString(),    options);    	non-compiled	[CE]  cannot  find  symbol  buffer	183	None	replace
1641	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	75	2	add
1642	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	75	2	add
1643	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	75	2	add
1644	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append( "> ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append( "> ");	  	compilable	  [FE]  ComparisonFailure  	75	2	add
1645	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	75	2	add
1646	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append('>');  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff.length()  ==  0)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff.length()    ==    0)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString()).append('>');	  	compilable	  [FE]  ComparisonFailure  	75	2	add
1647	[BUG]  [BUGGY]  foundOptions(buff,  null))  {  throw  new  MissingOptionException( " ");  }  [CE]  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  null))  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  null))  {  throw  new  MissingOptionException( " ");  }	  if(buff!=    null)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff    >=    null)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  	83	None	replace
1648	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	113	2	add
1649	[BUG]  [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()  >  0)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  if(buff.length()  >  1)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()    >    0)    {    throw    new    MissingOptionException(String.valueOf(buff.toString()));    }    if(buff.length()  >  1)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  }	  	compilable	  [FE]  ComparisonFailure  	113	2	add
1650	[BUG]  [BUGGY]  buff.append( ", ").append(requiredOptions.get(buff));  [CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(requiredOptions.get(buff));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(requiredOptions.get(buff));	  buff.append(buff.toString());    if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   ",   ");    }    	non-compiled	[CE]  method  get  in  interface  List<E>  cannot  be  applied  to  given  types;	211	None	replace
1651	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "null ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1652	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "null ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "null ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "null ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1653	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "no ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "no ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1654	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "no ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "no ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "no ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1655	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "n  = ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "n  = ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1656	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "n  = ");  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "n   ");  }  buff.append( "n  = ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "n   ");    }    buff.append( "n  = ");	  	compilable	  [FE]  ComparisonFailure  	164	2	add
1657	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  Option>  iter  =  this.options.iterator();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  Option>  iter  =  this.options.iterator();	  Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	25	None	replace
1658	[BUG]  [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.length()        >        0)        {        throw        new        MissingOptionException(buff.toString());        }        if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw  new  MissingOptionException(buff.toString());  }  if(buff.length()  >  0)  {  throw	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
1659	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "required.options ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
1660	[BUG]  [BUGGY]  buff.append( "required.options ");  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "required.options ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "required.options ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
1661	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required. ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "mv.required. ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
1662	[BUG]  [BUGGY]  buff.append( "mv.required. ");  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "mv.required. ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "mv.required. ");	          buff.append(   "mv.required.options   ");    	compilable	  [FE]  AssertionFailedError  	45	2	replace
1663	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  str.toString(),  requiredOptions);  [CE]  cannot  find  symbol  str  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  str.toString(),  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  str.toString(),  requiredOptions);	  throw    new    MissingOptionException(buff.toString(),    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  str	38	None	replace
1664	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  errors,  requiredOptions);  [CE]  cannot  find  symbol  errors  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  errors,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  errors,  requiredOptions);	  throw    new    MissingOptionException(buff.toString(),    requiredOptions);    	non-compiled	[CE]  cannot  find  symbol  errors	38	None	replace
1665	[BUG]  [BUGGY]  nisip.add(buff);  [CE]  cannot  find  symbol  nisip  [FE]          AssertionFailedError      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  nisip.add(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	nisip.add(buff);	  if(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  cannot  find  symbol  nisip	148	None	replace
1666	[BUG]  [BUGGY]  While(buff!=  null)  {  buff.append( ", ");  }  [CE]  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  buff.append( ", ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  buff.append( ", ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  	248	None	replace
1667	[BUG]  [BUGGY]  while(buff!=  null)  {  buff.append(iter.next());  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null)  {  buff.append(iter.next());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	while(buff!=  null)  {  buff.append(iter.next());	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  illegal  start  of  expression	248	None	replace
1668	[BUG]  [BUGGY]  While(buff!=  null)  {  buff.append(iter.next());  }  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  buff.append(iter.next());  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   ",   ");    }    	non-compiled	[CE]  ';'  expected	248	None	replace
1669	[BUG]  [BUGGY]  Iterator  <  String>  iter  =  neededOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Iterator  <  String>  iter  =  neededOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Iterator  <  String>  iter  =  neededOptions.iterator();  while(iter.hasNext())  {  buff.append(iter.next());  }	  Iterator    <    String>    iter    =    options.iterator();    while(iter.hasNext())    {    buff.append(iter.next());    }    	non-compiled	[CE]  variable  iter  is  already  defined  in  method  checkRequiredOptions()	103	None	replace
1670	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  buff,  options);  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option.toString(),  buff,  options);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option.toString(),  buff,  options);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  cannot  find  symbol  option	41	None	replace
1671	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  buf);  [CE]  cannot  find  symbol  buf  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff.toString(),  options,  buf);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff.toString(),  options,  buf);	  throw    new    MissingOptionException(buff.toString(),    buff,    options);    	non-compiled	[CE]  cannot  find  symbol  buf	41	None	replace
1672	[BUG]  [BUGGY]  foundOptions(buff,  buff.toString());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  buff.toString());	  foundOptions(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
1673	[BUG]  [BUGGY]  foundOptions(buff,  requiredOptions,  buff.toString());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundOptions(buff,  requiredOptions,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundOptions(buff,  requiredOptions,  buff.toString());	  foundOptions(buff,    requiredOptions.toString());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
1674	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.no.required ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.no.required ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	59	2	replace
1675	[BUG]  [BUGGY]  buff.append( "msg.no.required ").append(buff.toString());  [FE]  AssertionFailedError  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.no.required ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.no.required ").append(buff.toString());	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(buff.toString());    }    	compilable	  [FE]  AssertionFailedError  	59	2	replace
1676	[BUG]  [BUGGY]  <  String>  buff  =  iter.next();  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  <  String>  buff  =  iter.next();  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	<  String>  buff  =  iter.next();	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1677	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n ").append(buff.toString()).append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "n ").append(buff.toString()).append( "n ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	compilable	  [FE]  AssertionFailedError  	156	2	replace
1678	[BUG]  [BUGGY]  buff.append( "n ").append(buff.toString()).append( "n ");  [FE]  AssertionFailedError  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "n ").append(buff.toString()).append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "n ").append(buff.toString()).append( "n ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	compilable	  [FE]  AssertionFailedError  	156	2	replace
1679	[BUG]  [BUGGY]  [FE]  NoSuchElementException  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(iter.next()).append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( ", ").append(iter.next()).append( "n ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	compilable	  [FE]  NoSuchElementException  	156	2	replace
1680	[BUG]  [BUGGY]  buff.append( ", ").append(iter.next()).append( "n ");  [FE]  NoSuchElementException  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(iter.next()).append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(iter.next()).append( "n ");	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    Iterator    <    String>    iter    =    requiredOptions.iterator();    	compilable	  [FE]  NoSuchElementException  	156	2	replace
1681	[BUG]  [BUGGY]  buff.append( ",  expected: ").append(fx.toString());  [CE]  cannot  find  symbol  fx  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ",  expected: ").append(fx.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ",  expected: ").append(fx.toString());	  buff.append(   ",    expected:   ").append(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  fx	258	None	replace
1682	[BUG]  [BUGGY]  foundByNotNullOrUndefined(buff);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundByNotNullOrUndefined(buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundByNotNullOrUndefined(buff);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
1683	[BUG]  [BUGGY]  foundError(buff,  null);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  null);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  null);	  if(buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    if(buff.length()    >    1)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol	219	None	replace
1684	[BUG]  [BUGGY]  IllegalStateException.println(buff,  bruff.toString());  [CE]  cannot  find  symbol  bruff  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff,  bruff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff,  bruff.toString());	  IllegalStateException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  bruff	131	None	replace
1685	[BUG]  [BUGGY]  IllegalStateException.println(buff.toString(),  buff);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  IllegalStateException.println(buff.toString(),  buff);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	IllegalStateException.println(buff.toString(),  buff);	  IllegalStateException.println(buff.toString());    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1686	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ".mv.required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( ".mv.required.options.   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
1687	[BUG]  [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ".mv.required.options.   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(   "mv.required.options.   ").append(buff.toString());  buff.append( ".mv.required.options.   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(   "mv.required.options.   ").append(buff.toString());    buff.append( ".mv.required.options.   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	8	2	add
1688	[BUG]  [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buff,  iter.toString());  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  >  0)  {  throw  new  MissingOptionException(buff,  iter.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  >  0)  {  throw  new  MissingOptionException(buff,  iter.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  not  a  statement	168	None	replace
1689	[BUG]  [BUGGY]  buff.length()  <  =  0)  {  throw  new  MissingOptionException(buff.toString());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  <  =  0)  {  throw  new  MissingOptionException(buff.toString());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  <  =  0)  {  throw  new  MissingOptionException(buff.toString());  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(buff.toString());    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1690	[BUG]  [BUGGY]  throw  new  MissingOptionException(md,  options,  buff.toString());  [CE]  cannot  find  symbol  md  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(md,  options,  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(md,  options,  buff.toString());	  throw    new    MissingOptionException(options,    buff.toString());    	non-compiled	[CE]  cannot  find  symbol  md	126	None	replace
1691	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  options,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  options,  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	220	None	replace
1692	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  iter,  buff);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  iter,  buff);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  iter,  buff);	  throw    new    MissingOptionException(buff,    options.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	220	None	replace
1693	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  iter,  requiredOptions);  [CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  options.toString(),  iter,  requiredOptions);  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  options.toString(),  iter,  requiredOptions);	  throw    new    MissingOptionException(buff,    options.toString(),    buff);    	non-compiled	[CE]  constructor  MissingOptionException  in  class  MissingOptionException  cannot  be  applied  to  given  types;	220	None	replace
1694	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.buffer ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.buffer ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1695	[BUG]  [BUGGY]  buff.append( "msg.required.buffer ").append(buff.toString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.buffer ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.buffer ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1696	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.bad.toString ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append( "msg.required.bad.toString ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1697	[BUG]  [BUGGY]  buff.append( "msg.required.bad.toString ").append(buff.toString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "msg.required.bad.toString ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "msg.required.bad.toString ").append(buff.toString());	  buff.append(   "msg.required.toString   ").append(buff.toString());    	compilable	  [FE]  AssertionFailedError  	207	2	replace
1698	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	57	2	add
1699	[BUG]  [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     "n     ").append(buff.toString());    buff.append(   "n     ").append(buff.toString());  buff.append( "n   ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       "n       ").append(buff.toString());        buff.append(   "n       ").append(buff.toString());    buff.append( "n   ").append(buff.toString());  buff.append( "n  = ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	57	2	add
1700	[BUG]  [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  Throw  new  MissingOptionException( "Missing  options:   "  +  buff.toString());  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(   "Missing  options:   "  +  buff.toString());  Throw  new  MissingOptionException( "Missing  options:   "  +  buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(   "Missing    options:   "    +    buff.toString());    Throw  new  MissingOptionException( "Missing  options:   "  +  buff.toString());	  	non-compiled	[CE]  not  a  statement	67	None	add
1701	[BUG]  [BUGGY]  buff.append( "  <   ").append(BufferedBuffer.toString());  [CE]  cannot  find  symbol  BufferedBuffer  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(BufferedBuffer.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(BufferedBuffer.toString());	  buff.append(   "    <       ").append(buffer.toString());    	non-compiled	[CE]  cannot  find  symbol  BufferedBuffer	37	None	replace
1702	[BUG]  [BUGGY]  foundError(buff,  str.toString());  [CE]  cannot  find  symbol  str  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  foundError(buff,  str.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	foundError(buff,  str.toString());	  foundError(buff.toString());    	non-compiled	[CE]  cannot  find  symbol  str	245	None	replace
1703	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    Throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));	  	non-compiled	[CE]  not  a  statement	117	None	add
1704	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }  [CE]  unreachable  statement  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
1705	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    new  MissingOptionException(String.valueOf(buff.toString()  +  1));	  	non-compiled	[CE]  unreachable  statement	117	None	add
1706	[BUG]  [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }  else  {  buff.append( " ");  }  [CE]  unreachable  statement  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }  else  {  buff.append( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw    new    MissingOptionException(String.valueOf(buff.toString()    +    1));    if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()  +  1));  }  else  {  buff.append( " ");  }	  	non-compiled	[CE]  unreachable  statement	117	None	add
1707	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  org.apache.commons.cli.CommandLine@56a03d4f  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( ",n   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(   "n   ").append(cmd.toString());    buff.append( ",n   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  org.apache.commons.cli.CommandLine@56a03d4f  	48	2	add
1708	[BUG]  [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( ",n   ").append(cmd.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  org.apache.commons.cli.CommandLine@56a03d4f  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(   "n   ").append(cmd.toString());  buff.append( ",n   ").append(cmd.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(   "n   ").append(cmd.toString());    buff.append( ",n   ").append(cmd.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxn  org.apache.commons.cli.CommandLine@56a03d4f  	48	2	add
1709	[BUG]  [BUGGY]  buff.append(buffer.toString()).append( "no ");  [CE]  cannot  find  symbol  buffer  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buffer.toString()).append( "no ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buffer.toString()).append( "no ");	  bucket.append(buff.toString()).append(   "n   ");    	non-compiled	[CE]  cannot  find  symbol  buffer	125	None	replace
1710	[BUG]  [BUGGY]  buff.append( ", ").append(mv.required.options).append(buff.toString());  [CE]  package  mv  does  not  exist  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(mv.required.options).append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(mv.required.options).append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ",mv.required.options       ").append(buff.toString());    	non-compiled	[CE]  package  mv  does  not  exist	256	None	replace
1711	[BUG]  [BUGGY]  buff.append( ", ").append(fxmv.required.options).append(buff.toString());  [CE]  package  fxmv  does  not  exist  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxmv.required.options  fxmv.required.options      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(fxmv.required.options).append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(fxmv.required.options).append(buff.toString());	          buff.append(       "mv.required.options       ").append(buff.toString());    buff.append(   ",mv.required.options       ").append(buff.toString());    	non-compiled	[CE]  package  fxmv  does  not  exist	256	None	replace
1712	[BUG]  [BUGGY]  buff.append( "  <   ").append(buff.toString()).append('> ");  [CE]  unclosed  character  literal  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(buff.toString()).append('> ");  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(buff.toString()).append('> ");	          buff.append(       "    <           ").append(buff.toString()).append(       ">       ");    buff.append(   "    <       ").append(buff.toString()).append('>       ");    	non-compiled	[CE]  unclosed  character  literal	235	None	replace
1713	[BUG]  [BUGGY]  if(buff.toString()!=  null)  {  foundOptions  =  buff.toString();  }  [CE]  cannot  find  symbol  foundOptions  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.toString()!=  null)  {  foundOptions  =  buff.toString();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.toString()!=  null)  {  foundOptions  =  buff.toString();  }	  foundOptions    =    buff.toString();    	non-compiled	[CE]  cannot  find  symbol  foundOptions	151	None	replace
1714	[BUG]  [BUGGY]  if(buff.toString()  ==  null)  {  foundOptions  =  buff.toString();  }  [CE]  cannot  find  symbol  foundOptions  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff.toString()  ==  null)  {  foundOptions  =  buff.toString();  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff.toString()  ==  null)  {  foundOptions  =  buff.toString();  }	  foundOptions    =    buff.toString();    	non-compiled	[CE]  cannot  find  symbol  foundOptions	151	None	replace
1715	[BUG]  [BUGGY]  buff.append( ", ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ").append(iter  [CE]  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ").append(iter  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(buff.toString());  if(requiredOptions!=  null)  {  for(Iterator  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append( ", ").append(iter	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n       ").append(iter.next());    }    	non-compiled	[CE]  	60	None	replace
1716	[BUG]  [BUGGY]  buff.length()  <  =  0)  {  throw  new  MissingOptionException( " ");  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.length()  <  =  0)  {  throw  new  MissingOptionException( " ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.length()  <  =  0)  {  throw  new  MissingOptionException( " ");  }	  buff.length()    >    0)    {    throw    new    MissingOptionException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1717	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next());  }	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1718	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1719	[BUG]  [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next()  [CE]  ')'  expected  [FE]              ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next()  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	if(buff!=  null)  {  throw  new  MissingOptionException(String.valueOf(buff.toString()));  for(Iterator  <  String>  iter  =  requiredOptions.iterator();  iter.hasNext();)  {  buff.append(iter.next()	  throw    new    MissingOptionException(String.valueOf(buff.toString()));    if(requiredOptions!=    null)    {    for(Iterator    <    String>    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(iter.next());    }    	non-compiled	[CE]  ')'  expected	173	None	replace
1720	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    buff.append( "  }   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	109	2	add
1721	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  [FE]    junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  buff.append( "  }   ").append(buff.toString());  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    buff.append( "  }   ").append(buff.toString());	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx  	109	2	add
1722	[BUG]  [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  required);  [CE]  not  a  statement  [FE]      junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fx    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]          buff.append(     ",     ").append(buff.toString());    buff.append(   ",     ").append(buff.toString());  junit.framework.ComparisonFailure:  was:  <  [fx  >>  required);  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	                buff.append(       ",       ").append(buff.toString());        buff.append(   ",       ").append(buff.toString());    junit.framework.ComparisonFailure:  was:  <  [fx  >>  required);	  	non-compiled	[CE]  not  a  statement	109	None	add
1723	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    if(buff!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1724	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(buff!=  null)  {  buff.append( "null ");  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  if(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    if(buff!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1725	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ").append(buff.toString());  if(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "null ").append(buff.toString());  if(buff!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1726	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ").append(buff.toString());  if(buff!=  null)  {  buff.append( "null ");  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ").append(buff.toString());  if(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "null ").append(buff.toString());  if(buff!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1727	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ");  if(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "null ");  if(buff!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1728	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ");  if(buff!=  null)  {  buff.append( "null ");  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(   "null   ");  }  buff.append( "null ");  if(buff!=  null)  {  buff.append( "null ");  }  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(   "null   ");    }    buff.append( "null ");  if(buff!=  null)  {  buff.append( "null ");  }	  	compilable	  [FE]  ComparisonFailure  	162	2	add
1729	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	73	2	add
1730	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( ", ");  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( ", ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( ", ");	  	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<[Missing  required  options:  fx]>  but  was:<[fxfxfxfx  	73	2	add
1731	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	73	2	add
1732	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "n ");  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "n ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( "n ");	  	compilable	  [FE]  ComparisonFailure  	73	2	add
1733	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	73	2	add
1734	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(buff.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(buff.toString());	  	compilable	  [FE]  ComparisonFailure  	73	2	add
1735	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( "] ");	  	compilable	  [FE]  ComparisonFailure  	73	2	add
1736	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "] ");  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "] ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( "] ");	  	compilable	  [FE]  ComparisonFailure  	73	2	add
1737	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(getMessage());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  buff.append( "  <   ").append(getMessage());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    buff.append( "  <   ").append(getMessage());	  	non-compiled	[CE]  cannot  find  symbol	73	None	add
1738	[BUG]  [BUGGY]  buff.append( "  <   ").append(block.toString()).append('>');  [CE]  cannot  find  symbol  block  [FE]    AssertionFailedError    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( "  <   ").append(block.toString()).append('>');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( "  <   ").append(block.toString()).append('>');	  buff.append(   "    <       ").append(buff.toString()).append('>');    	non-compiled	[CE]  cannot  find  symbol  block	205	None	replace
1739	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "no ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "no ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
1740	[BUG]  [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "no ");  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(buff.toString());    if(buff!=  null)  {  buff.append(buff.toString());  }  else  {  buff.append(   "n   ");  }  buff.append( "no ");  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(buff.toString());        if(buff!=    null)    {    buff.append(buff.toString());    }    else    {    buff.append(   "n   ");    }    buff.append( "no ");	  	compilable	  [FE]  ComparisonFailure  	208	2	add
1741	[BUG]  [BUGGY]  While(buff!=  null)  {  buff.append( "n ");  }  [CE]  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  While(buff!=  null)  {  buff.append( "n ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	While(buff!=  null)  {  buff.append( "n ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	non-compiled	[CE]  	252	None	replace
1742	[BUG]  [BUGGY]  [FE]  OutOfMemoryError  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	compilable	  [FE]  OutOfMemoryError  	252	2	replace
1743	[BUG]  [BUGGY]  while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "null ");  }  [FE]  OutOfMemoryError  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "null ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "null ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	compilable	  [FE]  OutOfMemoryError  	252	2	replace
1744	[BUG]  [BUGGY]  timeout  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "n ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	add	while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "n ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	compilable	timeout	252	1	replace
1745	[BUG]  [BUGGY]  while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "n ");  }  timeout  [FE]                    ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "n ");  }  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	while(buff!=  null  &&  buff.length()  >  0)  {  buff.append( "n ");  }	  While(buff!=    null)    {    for(Iterator    iter    =    requiredOptions.iterator();    iter.hasNext();)    {    buff.append(   "n   ");    }    	compilable	timeout	252	1	replace
1746	[BUG]  [BUGGY]  buff.append( ", ").append(Buffered.toString(buff));  [CE]  cannot  find  symbol  Buffered  [FE]    ComparisonFailure    [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append( ", ").append(Buffered.toString(buff));  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append( ", ").append(Buffered.toString(buff));	          buff.append(       "n       ").append(buff.toString());    if(requiredOptions!=    null)    {    buff.append(   "n       ").append(buff.toString());    }    	non-compiled	[CE]  cannot  find  symbol  Buffered	62	None	replace
1747	[BUG]  [BUGGY]  Option  options  =  this.options.getOptions();  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  Option  options  =  this.options.getOptions();  [BUGGY]      throw  new  MissingOptionException(buff.toString());  }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	Option  options  =  this.options.getOptions();	  Option    options    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	132	None	replace
1748	[BUG]  [BUGGY]  buff.append(muff.toString()).append('n');  [CE]  cannot  find  symbol  muff  [FE]        ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  buff.append(muff.toString()).append('n');  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	buff.append(muff.toString()).append('n');	  bucket.append(buff.toString()).append('n');    	non-compiled	[CE]  cannot  find  symbol  muff	124	None	replace
1749	[BUG]  [BUGGY]  throw  new  MissingOptionException(buff,  option,  options.toString());  [CE]  cannot  find  symbol  option  [FE]                  ComparisonFailure      [CONTEXT]      Iterator  iter  =  requiredOptions.iterator();  StringBuffer  buff  =  new  StringBuffer();    while  (iter.hasNext())  {  buff.append(iter.next());  }      [BUGGY]  throw  new  MissingOptionException(buff,  option,  options.toString());  [BUGGY]      }  }  [CLASS]  Parser  [METHOD]  checkRequiredOptions  [RETURN_TYPE]  void  [VARIABLES]  Iterator  iter  Options  options  opts  CommandLine  cmd  List  requiredOptions  tokenList  StringBuffer  buff  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	307	307	2	replace	throw  new  MissingOptionException(buff,  option,  options.toString());	  throw    new    MissingOptionException(md,    buff,    options.toString());    	non-compiled	[CE]  cannot  find  symbol  option	222	None	replace
