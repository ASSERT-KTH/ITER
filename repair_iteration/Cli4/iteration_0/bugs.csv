bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
2	[BUG] [BUGGY] return parse(options, arguments, null, false); [FE] ComparisonFailure testMissingOptionsException [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] return parse(options, arguments, null, false); [BUGGY] } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	
3	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] public CommandLine parse(Options options, String[] arguments) throws ParseException { [BUGGY] [BUGGY] return parse(options, arguments, null, false); } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments [VARIABLES] Options options opts CommandLine cmd List requiredOptions String[] arguments boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	
4	[BUG] [BUGGY] this.options = options; [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  [BUGGY] this.options = options; [BUGGY]   for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	replace	
5	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  [BUGGY] [BUGGY] this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	135	135	2	add	
6	[BUG] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	138	138	2	replace	
7	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  [BUGGY] [BUGGY] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	138	138	2	add	
8	[BUG] [BUGGY] Option opt = (Option) it.next(); [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	139	139	2	replace	
9	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { [BUGGY] [BUGGY] Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	139	139	2	add	
10	[BUG] [BUGGY] opt.clearValues(); [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] opt.clearValues(); [BUGGY] } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	140	140	2	replace	
11	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); [BUGGY] [BUGGY] opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	140	140	2	add	
12	[BUG] [BUGGY] } [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] } [BUGGY]  requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	141	141	2	replace	
13	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); [BUGGY] [BUGGY] } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	141	141	2	add	
14	[BUG] [BUGGY] requiredOptions = options.getRequiredOptions(); [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } [BUGGY] requiredOptions = options.getRequiredOptions(); [BUGGY] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	
15	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] {  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } [BUGGY] [BUGGY] requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	add	
16	[BUG] [BUGGY] cmd = new CommandLine(); [FE] ComparisonFailure testMissingOptionsException [CONTEXT]  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); [BUGGY] cmd = new CommandLine(); [BUGGY]  boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	144	144	2	replace	
17	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT]  this.options = options;  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); [BUGGY] [BUGGY] cmd = new CommandLine(); boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, arguments, [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	144	144	2	add	
18	[BUG] [BUGGY] boolean eatTheRest = false; [FE] ComparisonFailure testMissingOptionsException [CONTEXT]  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); [BUGGY] boolean eatTheRest = false; [BUGGY]  if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	146	146	2	replace	
19	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT]  for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); [BUGGY] [BUGGY] boolean eatTheRest = false; if (arguments == null) { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, arguments, stopAtNonOption));  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	146	146	2	add	
20	[BUG] [BUGGY] if (arguments == null) { [FE] ComparisonFailure testMissingOptionsException [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] if (arguments == null)  { [BUGGY] { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	148	149	2	replace	
21	[BUG] [BUGGY] [FE] ComparisonFailure testMissingOptionsException [CONTEXT] for (Iterator it = options.helpOptions().iterator(); it.hasNext();) { Option opt = (Option) it.next(); opt.clearValues(); } requiredOptions = options.getRequiredOptions(); cmd = new CommandLine(); boolean eatTheRest = false; [BUGGY] [BUGGY] if (arguments == null)  { { arguments = new String[0]; } List tokenList = Arrays.asList(flatten(this.options, arguments, stopAtNonOption)); ListIterator iterator = tokenList.listIterator();  [CLASS] Parser [METHOD] parse [RETURN_TYPE] CommandLine  Options options String[] arguments Properties properties boolean stopAtNonOption [VARIABLES] Options options opts CommandLine cmd boolean eatTheRest stopAtNonOption Iterator it List requiredOptions tokenList Option opt String[] arguments String str t Properties properties ListIterator iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	148	149	2	add	
