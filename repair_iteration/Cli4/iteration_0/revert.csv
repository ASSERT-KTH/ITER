projects/Cli4/src/java/org/apache/commons/cli/Parser.java141}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){requiredOptions=options.getRequiredOptions();if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArgs()){requiredOptions=options.getRequiredOptions();if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){requiredOptions=options.getRequiredOptions();if(arguments==null){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){requiredOptions=options.getRequiredOptions();if(stopAtNonOption){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146Arrays.asList(flatten(this.options,arguments,stopAtNonOption));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146Arrays.asList(this.options,arguments,stopAtNonOption));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146Arrays.asList(flatten(this.options,arguments,stopAtNonOption));requiredOptions.addAll(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146Arrays.asList(flatten(this.options,arguments,stopAtNonOption));requiredOptions.add(opt);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146Arrays.asList(flatten(this.options,arguments,stopAtNonOption));requiredOptions.add(cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144if(stopAtNonOption){requiredOptions=options.getRequiredOptions();if(arguments==null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144if(stopAtNonOption){requiredOptions=options.getRequiredOptions();}if(arguments==null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144if(stopAtNonOption){requiredOptions=options.getRequiredOptions();if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144if(stopAtNonOption){requiredOptions.remove(0);}if(arguments==null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144if(stopAtNonOption){requiredOptions=options.getRequiredOptions();}if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138if(stopAtNonOption){requiredOptions=options.getRequiredOptions();if(arguments==null){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138if(stopAtNonOption){requiredOptions=options.getRequiredOptions();if(arguments==null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138if(stopAtNonOption){requiredOptions=options.getRequiredOptions();if(arguments==null||arguments.length>0){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138if(stopAtNonOption){requiredOptions=options.getRequiredOptions();if(arguments==null){cmd.addValue(true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138if(stopAtNonOption){requiredOptions=options.getRequiredOptions();if(arguments==null||arguments.length>0){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135this.options=options;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135this.options=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135this.options=options.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135this.options=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148Arrays.asList(flatten(this.options,arguments,stopAtNonOption));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148booleanstopAtNonOption=it.hasNext();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148Arrays.asList(flatten(this.options,arguments,stopAtNonOption));requiredOptions=options.getRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148Stringstr=(String)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148Arrays.asList(flatten(this.options,arguments,stopAtNonOption));requiredOptions.addAll(opt);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143requiredOptions=options.getRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143requiredOptions=this.options.getRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143requiredOptions=options.getDefaultOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143requiredOptions=options.getDeclaredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Optionopt=(Option)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Optionopt=(Option)iterator.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Opt=(Option)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Stringstr=(String)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Stringstrt=(String)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Stringstr=(String)it.next();it.hasNext();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Stringstr=(String[])it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Stringstr=(String)iterator.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143Stringstr=(String)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143Stringstr=(String)it.next();if(str==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143Stringstr=(String)it.next();if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143Stringstr=(String)iterator.next();if(str==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143Stringstr=(String)iterator.next();if(str!=null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144cmd=newCommandLine();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144cmd=newCommandLine(this.options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144cmd=newCommandLine(this.options,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144cmd=newCommandLine(opt.getValues());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){cmd=newCommandLine();if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){cmd=newCommandLine();if(arguments==null){str=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141while(opt.hasNext()){cmd.addArg(t);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){cmd=newCommandLine();if(arguments==null){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){cmd=newCommandLine();if(arguments==null){thrownewIllegalStateException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71cmd.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71cmd.parse(options,arguments);requiredOptions.remove(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71cmd.parse(options,arguments);requiredOptions.clear();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71requiredOptions.remove(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71cmd.parse(options);requiredOptions.remove(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.clearValues();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.addValue(value);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.addValue(true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.addValue(false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.addValue(String[0]);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138for(Iteratorit=options.helpOptions().iterator();it.hasNext();){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138for(Iteratorit=options.iterator();it.hasNext();){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138for(Iteratorit=options.getOptions().iterator();it.hasNext();){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138for(Iteratorit=options.next().iterator();it.hasNext();){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.hasArg()){requiredOptions=options.getRequiredOptions();if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.hasArgs()){requiredOptions=options.getRequiredOptions();if(arguments==null){arguments=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.hasArg()){requiredOptions=options.getRequiredOptions();if(arguments==null){str=newString[0];}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.hasArg()){requiredOptions=options.getRequiredOptions();if(arguments==null){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.hasArg()){requiredOptions=options.getRequiredOptions();arguments[0]=null;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146booleaneatTheRest=false;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146booleaneatTheRest=true;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146booleaneatTheRest=stopAtNonOption;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146booleaneattheRest=true;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparseOptions(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparseOptions(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135cmd.addArg(t);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135cmd.addArg(String[]);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135cmd.addArg(str);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135cmd.addArg(String[]));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135cmd.addArg(String[]t);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148if(arguments==null){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148if(arguments==null||eatTheRest){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148if(arguments==null||arguments.length>0){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148if(arguments==null||!arguments.isEmpty()){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135this.options=Options.WRITE_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135this.options=Options.WRITE_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPT
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135this.options=Options.WRITE_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPTIONAL_OPT
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,this,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141while(opt.hasArg()){cmd.addArg(t);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){returnnull;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141it.remove();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){cmd.addArg(t);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java141if(opt.hasArg()){thrownewRuntimeException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146finalbooleaneatTheRest=true;
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135Arrays.sort(this.arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135booleanstopAtNonOption=options.hasArg();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java135booleanstopAtNonOption=option.hasArg();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138cmd.addArg(t);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138Arrays.sort(this.arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138Arrays.sort(this.options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138Arrays.sort(this.args);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138Arrays.sort(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144cmd=newCommandLine(this.opt);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144cmd=newCommandLineAttributes();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143Arrays.sort(opt.getKey());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143cmd.addArg(t);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143cmd.addArg(opt.getKey());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143cmd.addArg(opt);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143arguments=opt.getArguments();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Optopt=(Option)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139Optionsopt=(Option)it.next();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.getKey()==null){Stringstr=opt.getValue();if(st.length()==0){cmd.addArg(str);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.getKey()==null){Stringstr=opt.getValue();if(st.length()==0){continue;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.getKey()==null){Stringstr=opt.getValue();if(st.startsWith("-")){cmd.addArg(t);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140if(opt.getKey()==null){Stringstr=opt.getValue();if(st.endsWith("-")){cmd.addArg(t);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144booleanstopAtNonOption=options.hasArg();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144booleanstopAtNonOption=it.hasNext();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144Arrays.sort(this.options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144booleanstopAtNonOption=option.hasArg();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java144booleanstopAtNonOption=options.hasArgs();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71requiredOptions.remove(options.getKey());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71requiredOptions.remove(options.getRequiredOptions());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71requiredOptions.remove(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71requiredOptions.clear();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146cmd.addArg(t);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146booleanstopAtNonOption=cmd.hasArg();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146Arrays.sort(this.options,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146Arrays.sort(this.options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java146booleanstopAtNonOption=it.hasNext();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138for(Iteratorit=options.nextOptions().iterator();it.hasNext();){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java138for(Iteratorit=options.hasOptions().iterator();it.hasNext();){
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143requiredOptions=options.getAllRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java143requiredOptions=opt.getRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139if(it.hasNext()){Stringstr=(String)it.next();if(str.length()==0){it.remove();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139if(it.hasNext()){Stringstr=(String)it.next();if(str.length()==0){thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139if(it.hasNext()){Stringstr=(String)it.next();if(str.length()==0){returnnull;}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java139if(it.hasNext()){Stringstr=(String)it.next();if(str.length()==0){cmd.addArg(str);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.addValue(Util.stripLeadingAndTrailingQuotes(opt));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.addValue(Util.stripLeadingAndTrailingQuotes(opt).trim());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java140opt.addValue(Util.stripLeadingAndTrailingQuotes(opt.getKey()));
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148booleanstopAtNonOption=options.hasArg();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java148Arrays.sort(this.options,null);
