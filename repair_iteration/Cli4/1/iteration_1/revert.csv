projects/Cli4/src/java/org/apache/commons/cli/Parser.java71
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=cmd.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){for(Stringargument:options.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){for(Stringargument:options.keySet()){cmd.addArg(arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]arguments=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Context.checkState(options.length==0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,argument);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);Parsercmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,Arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,argument,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,argument,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);Parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,this,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,cmd,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,options,arguments,cmd,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,options,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(cmd,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=opts.parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=option.parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,true,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]requiredOptions=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}else{requiredOptions=newArrayList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}else{requiredOptions=newLinkedList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);CommandLineparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);Parserparser=getParser();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);Parserparser=newParser(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);Parserparser=newParser(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);Parserparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,argument,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);Parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=opts.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,true);}else{requiredOptions=newArrayList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,true);}else{requiredOptions.add(options);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse").keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);ParseExceptionparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);Parserparser=newParser(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);if(options==null){if(arguments.length==0){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);if(options==null){if(!options.isEmpty()){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);CommandLinecmd=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);if(options==null){if(!options.contains(arguments)){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);Commandlinecmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,false,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);ParseException.parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:options.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:cmd.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:paths.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:parameters.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);ParseException.parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.addArg(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.add(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionsopts=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){cmd.append('n');}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments[i]);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=option.parse(options,arguments);
