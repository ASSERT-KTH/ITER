projects/Cli4/src/java/org/apache/commons/cli/Parser.java71
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=cmd.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){for(Stringargument:options.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){for(Stringargument:options.keySet()){cmd.addArg(arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]arguments=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Context.checkState(options.length==0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,argument);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);Parsercmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);CommandLinecmd=parse(options,Arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,argument,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,argument,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);Parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,this,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,cmd,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,options,arguments,cmd,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,options,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(cmd,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=opts.parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=option.parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,true,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]requiredOptions=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}else{requiredOptions=newArrayList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}else{requiredOptions=newLinkedList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);CommandLineparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);Parserparser=getParser();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);Parserparser=newParser(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);Parserparser=newParser(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);Parserparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,argument,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);Parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse");
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=opts.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,true);}else{requiredOptions=newArrayList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,true);}else{requiredOptions.add(options);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse").keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);ParseExceptionparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);Parserparser=newParser(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);if(options==null){if(arguments.length==0){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);if(options==null){if(!options.isEmpty()){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);CommandLinecmd=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true);if(options==null){if(!options.contains(arguments)){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments);Commandlinecmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,false,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);ParseException.parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:options.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:cmd.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:paths.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:parameters.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);ParseException.parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.addArg(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.add(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionsopts=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){cmd.append('n');}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments[i]);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=option.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.addArg(arguments,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.addArg(arguments,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.addArg(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,null,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,null,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,null,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parser=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=getParser();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,null,0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,0,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parser<?>parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parser<Object>parser=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,options,arguments,cmd,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Context.checkState(arguments.length==0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Context.checkState(options.length!=0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Context.checkState(args.length==0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length!=0){for(Stringargument:paths.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,options,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);if(options==null){if(!options.contains(arguments)){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true,false,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true,false,0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){parse(options,arguments);}else{thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){parse(options,arguments);}else{thrownewParseException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);parse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);Parse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);parse(options,arguments,null,false);parse(options,argument,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}if(options!=null){parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}if(options==null){parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}if(options!=null){parse(options,arguments);if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}parse(options,arguments);if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length!=0){for(Stringargument:options.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,argument);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}parse(options,arguments);if(options!=null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}parse(options,arguments);if(options==null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}parse(options,arguments);if(options==null){parse(options,arguments);}else{cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}parse(options,arguments);if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}if(options==null){parse(options,arguments);if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}if(options!=null){parse(options,arguments);if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}if(options==null){parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,null,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,null,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.add(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.add(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.add(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,true,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,false,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,options,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,parameters,cmd,requiredOptions,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,null,false,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,options,arguments,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,options,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,this,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options==null){parse(options,arguments);}else{cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options!=null){cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLineparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){returnparse(options,arguments,null,true);}else{CommandLineparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){returnparse(options,arguments,null,true);}else{CommandLineparse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false,null,requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false,null,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,true,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,options,arguments,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,true,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,options,arguments,cmd,requiredOptions,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,parameters,cmd,requiredOptions,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,false,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);Parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71ParseExceptionparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71ParseExceptionparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,options,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,cmd,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,arguments,cmd,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,commandLine,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parser<String>parser=parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);parse(options,arguments);parse(options,arguments);parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);parse(options,arguments);parse(options,arguments);parse(options,argument);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);parse(options,arguments);parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);parse(options,arguments);parse(options,arguments);parse(options,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parser<?>parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parser<Object>parser=getParser();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(arguments,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=requiredOptions.parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(opts,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,true,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,false,options.toString(),requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,null,false,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71ParseException.parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);ParseException.parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);Parserparse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,false,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,options.length+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Commandlinecmd=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Commandline=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Commandlinecmd=parse(options,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,this,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,options,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(arguments,option);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,this,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,this,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null&&arguments.length==0){for(Stringargument:parameters.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null&&arguments.length==0){for(Stringargument:cmd.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length!=0){for(Stringargument:cmd.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:cmd.values()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]requiredOptions=options.getRequiredOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]requiredOptions=options.getOptions(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]requiredOptions=options.getRawOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parser<?>parser=newParser(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,options,requiredOptions,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,options,requiredOptions,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,arguments,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent.parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);Parse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,argument,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,arguments,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);Parserparser=newParser(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments);}else{thrownewParseException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments);}else{thrownewIllegalArgumentException("");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=cmd.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=opts.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=options.getOptions(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,argument,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,options,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]arguments=options.getArguments();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]arguments=options.getOptions(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]arguments=options.parseOptions(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,options,arguments,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,arguments,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,true,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,true);parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,argument,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=requiredOptions.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(arguments,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(arguments,opts);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionsopts=options.getOptions(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionsopts=options.getOptions(),arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionopts=options.getOptions(arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(arguments.length==0){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,this,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,cmd,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,options,arguments,this,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71ParseException.parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=_parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",arguments).keySet();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse".keySet());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,options,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,Arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);Parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,options,this,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=newParser(options,options,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:options.values()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.clear();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,false);}else{parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==2){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]requiredOptions=options.getArguments();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71this.requiredOptions.addArg(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments);}else{cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options!=null){parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options!=null){parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options!=null){parse(options,arguments);if(options!=null){parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}parse(options,arguments);if(options!=null){parse(options,arguments);if(options!=null){parse(options,
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,false);ParseExceptionparse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,false);}else{ParseExceptionparse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,commandLine,requiredOptions,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=opts.parse(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,options,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71IllegalArgumentExceptione=parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(arguments,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);ParseExceptionparse(options,arguments,null,false);parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}if(options!=null){parse(options,arguments);if(options!=null){returnparse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,options,null,true);}else{requiredOptions=newArrayList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parserparser=parse(options,arguments);CommandLinecmd=parse(options,cmd);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=options.requireOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=options.cloneOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]arguments=options.requireOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]arguments=options.requiresOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}parse(options,arguments);if(options!=null){parse(options,arguments);if(options!=null){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}if(cmd==null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);ParseExceptionparse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments[i]);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<options.length;++i){parse(options,arguments[i]);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,options[i]);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){returnparse(options,arguments,null,true);}else{CommandLinecmd=parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){returnparse(options,arguments,null,true);}else{CommandLinecmd=parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<arguments.length;++i){cmd.append('n');}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<options.length;++i){cmd.append('n');}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,options,arguments,null,false,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<options.length;++i){parse(options,arguments);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,options);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<options.length;++i){parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){for(inti=0;i<arguments.length;++i){parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parser=newParser(options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,options,neededOptions,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,false);}else{parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,false);parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options!=null){parse(options,arguments);}else{cmd.addArg("null");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true,false,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionopts=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=options.parse(options,argument);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,options,arguments,cmd,requiredOptions,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){returnparse(options,arguments,null,true);}else{parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){returnparse(options,arguments,null,true);}else{parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments);}else{requiredOptions.add(options);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null){parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);ParseExceptionparse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parse(options,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){parse(options,arguments,null,false);}else{parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments);}else{requiredOptions=newLinkedList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments);}else{requiredOptions=newArrayList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options==null){parse(options,arguments);}if(options==null){parse(options,arguments);if(options==null){parse(options,arguments);}}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);parse(options,arguments);parse(options,arguments);Parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:options.getValues()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=cmd.parse(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=options.requiresOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]options=options.parseOptions(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,null,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(arguments==null){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Option[]requiredOptions=options.opts.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){parse(options,arguments,null,true);}else{parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,true);}else{parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,false);parse(options,arguments,null,false);Parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=neededOptions.parse(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71CommandLinecmd=parseOptions(options,arguments);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,null,true,false,options.toString());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,options,null,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,false);parse(options,arguments,null,true);ParseException.parse(options,arguments,null,false);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent.parse(options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,false,true,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}parse(options,arguments);if(options!=null){parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd=newCommandLine();}if(cmd!=null){cmd=newCommandLine();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.isEmpty()){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,true,options.toString(),requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,options,arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options==null){parse(options,arguments,null,false);}else{requiredOptions=newArrayList<String>();}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,requiredOptions,true,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,true,false,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,option,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.contains(arguments)){returnparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Parsercmd=parse(options,options);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,options[0].length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,options,null,true);ParseException.parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,true,false,null,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}if(options!=null){parse(options,arguments);if(options!=null){parse(options,arguments);}else{cmd.addArg("n");}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,arguments,cmd,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,true,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){parse(options,arguments,null,false);}else{parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Context.checkState(parameters.length==0);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parse(options,arguments,null,true);parse(options,arguments,null,true);parse(options,argument,null,true);parse(options,arguments,null,true);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,null,false,null);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71returnparse(options,arguments,cmd,false,null,options.length);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:paths.values()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length==0){for(Stringargument:path.keySet()){cmd.addArg(argument);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoptions=options.getOptions();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71Optionoption=options.getOption("parse",arguments,null,false);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){returnparse(options,arguments,null,true);}else{parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){returnparse(options,arguments,null,true);}else{parse(options,arguments,null,false);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){parse(options,arguments,null,true);Parserparse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71if(options.length==0){parse(options,arguments,null,true);parse(options,arguments,null,true);}
projects/Cli4/src/java/org/apache/commons/cli/Parser.java71parent==null||arguments.length!=0){for(Stringargument:parameters.keySet()){cmd.addArg(argument);}
