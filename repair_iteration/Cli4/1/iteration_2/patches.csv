bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.requiredOptions.addArg(arguments,  arguments);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.addArg(arguments,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.addArg(arguments,  arguments);	  this.requiredOptions.addArg(arguments);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
2	[BUG]  [BUGGY]  this.requiredOptions.addArg(arguments,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.addArg(arguments,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.addArg(arguments,  options);	  this.requiredOptions.addArg(arguments);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
3	[BUG]  [BUGGY]  this.requiredOptions.addArg(options);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.addArg(options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.addArg(options);	  this.requiredOptions.addArg(arguments);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
4	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,<null>)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  true,  false,  null);	  return    parse(options,    arguments,    true,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,<null>)	40	None	replace
5	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  null,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>,<null>)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  null,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  null,  null);	  return    parse(options,    arguments,    true,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>,<null>)	40	None	replace
6	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  null,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,<null>,<null>)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  false,  null,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  null,  null);	  return    parse(options,    arguments,    true,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,<null>,<null>)	40	None	replace
7	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  null,  options);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>,Options)  [FE]                        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  null,  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  null,  options);	  return    parse(options,    arguments,    true,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>,Options)	40	None	replace
8	[BUG]  [BUGGY]  parser  =  parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  parser  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parser  =  parse(options,  arguments,  null,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parser  =  parse(options,  arguments,  null,  true);	  return    parse(options,    arguments,    null,    true);    Parser    parser    =    getParser();    	non-compiled	[CE]  cannot  find  symbol  parser	55	None	replace
9	[BUG]  [BUGGY]  Parser  parser  =  getParser();  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  getParser();  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  getParser();	  return    parse(options,    arguments,    null,    true);    Parser    parser    =    getParser();    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
10	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  0);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,int)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  0);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  null,  0);	  Parser    cmd    =    parse(options,    arguments,    0);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,int)	61	None	replace
11	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  0,  options.length);  [CE]  cannot  find  symbol  length  [FE]                        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  0,  options.length);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  0,  options.length);	  Parser    cmd    =    parse(options,    arguments,    0);    	non-compiled	[CE]  cannot  find  symbol  length	61	None	replace
12	[BUG]  [BUGGY]  Parser  <?>  parse(options,  arguments,  null,  true);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  <?>  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  <?>  parse(options,  arguments,  null,  true);	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  ';'  expected	70	None	replace
13	[BUG]  [BUGGY]  Parser  <  Object>  parser  =  parse(options,  arguments,  null,  true);  [CE]  type  Parser  does  not  take  parameters  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  <  Object>  parser  =  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  <  Object>  parser  =  parse(options,  arguments,  null,  true);	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  type  Parser  does  not  take  parameters	70	None	replace
14	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  null,  true);  [CE]  missing  return  statement  [FE]        StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  arguments,  null,  true);	  CommandLine    cmd    =    parse(options,    arguments,    null);    	non-compiled	[CE]  missing  return  statement	1	None	replace
15	[BUG]  [BUGGY]  return  parse(options,  options,  arguments,  cmd,  false);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  options,  arguments,  cmd,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  options,  arguments,  cmd,  false);	  return    parse(options,    options,    arguments,    cmd,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,boolean)	26	None	replace
16	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  requiredOptions);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,List)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  true,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  requiredOptions);	  return    parse(options,    options,    arguments,    cmd,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,List)	26	None	replace
17	[BUG]  [BUGGY]  Context.checkState(arguments.length  ==  0);  [CE]  cannot  find  symbol  Context  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Context.checkState(arguments.length  ==  0);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Context.checkState(arguments.length  ==  0);	  Context.checkState(options.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  Context	9	None	replace
18	[BUG]  [BUGGY]  Context.checkState(options.length!=  0);  [CE]  cannot  find  symbol  length  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Context.checkState(options.length!=  0);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Context.checkState(options.length!=  0);	  Context.checkState(options.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  length	9	None	replace
19	[BUG]  [BUGGY]  Context.checkState(args.length  ==  0);  [CE]  cannot  find  symbol  args  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Context.checkState(args.length  ==  0);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Context.checkState(args.length  ==  0);	  Context.checkState(options.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  args	9	None	replace
20	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  paths.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  paths.keySet())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  paths.keySet())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    paths.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	94	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments,  false);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ",  arguments,  false);	  Option    option    =    options.getOption(   "parse   ",    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	68	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments,  null);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ",  arguments,  null);	  Option    option    =    options.getOption(   "parse   ",    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	68	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments,  true);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ",  arguments,  true);	  Option    option    =    options.getOption(   "parse   ",    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	68	None	replace
24	[BUG]  [BUGGY]  parse(options,  options,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  options,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  options,  null,  false);	  parse(options,    argument,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)	15	None	replace
25	[BUG]  [BUGGY]  Parser  parser  =  parse(options,  arguments,  null,  true);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  parse(options,  arguments,  null,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  parse(options,  arguments,  null,  true);	  return    parse(options,    arguments,    null,    true);    CommandLine    cmd    =    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  incompatible  types	86	None	replace
26	[BUG]  [BUGGY]  if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(!options.contains(arguments))    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  missing  return  statement	87	None	replace
27	[BUG]  [BUGGY]  parse(options,  arguments,  null,  false);  if(options  ==  null)  {  if(!options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  null,  false);  if(options  ==  null)  {  if(!options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  null,  false);  if(options  ==  null)  {  if(!options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(!options.contains(arguments))    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
28	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  false,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  null,  false,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  false,  true);	  return    parse(options,    arguments,    null,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean)	80	None	replace
29	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  true,  false);	  return    parse(options,    arguments,    null,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,boolean)	80	None	replace
30	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  options.length);  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  true,  false,  options.length);	  return    parse(options,    arguments,    null,    true,    false);    	non-compiled	[CE]  cannot  find  symbol  length	80	None	replace
31	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  0);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,int)  [FE]                        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  0);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  true,  false,  0);	  return    parse(options,    arguments,    null,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,int)	80	None	replace
32	[BUG]  [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  [CE]  missing  return  statement  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  parse(options,  arguments);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments[i]);    }    	non-compiled	[CE]  missing  return  statement	103	None	replace
33	[BUG]  [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  parse(options,  arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments[i]);    }    	non-compiled	[CE]  missing  return  statement	103	None	replace
34	[BUG]  [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  throw  new  ParseException( " ");  }  [CE]  missing  return  statement  [FE]                StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  throw  new  ParseException( " ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  parse(options,  arguments);  }  else  {  throw  new  ParseException( " ");  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments[i]);    }    	non-compiled	[CE]  missing  return  statement	103	None	replace
35	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  cmd);  [CE]  no  suitable  method  found  for  parse(Options,CommandLine)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  cmd);	  CommandLine    cmd    =    option.parse(options,    cmd);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,CommandLine)	33	None	replace
36	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	18	2	add
37	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	18	2	add
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	18	2	add
39	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	18	2	add
40	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    Parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
41	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  true);  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol  argument	18	None	add
42	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	50	2	add
43	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	50	2	add
44	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
45	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    if(options  ==  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
46	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    if(options!=  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
47	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	50	2	add
48	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	50	2	add
49	[BUG]  [BUGGY]  Parse(options,  arguments,  null,  false);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parse(options,  arguments,  null,  false);	          parse(options,    arguments,    null,    false);    Parse(options,    arguments,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
50	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  options.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  options.keySet())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  options.keySet())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
51	[BUG]  [BUGGY]  Parser  parser  =  parse(options,  arguments);  [CE]  incompatible  types  [FE]                StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  parse(options,  arguments);	          CommandLine    cmd    =    parse(options,    arguments);    CommandLine    cmd    =    parse(options,    Arguments);    	non-compiled	[CE]  incompatible  types	14	None	replace
52	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  options);  [CE]  no  suitable  method  found  for  parse(Options,Options)  [FE]                  StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  options);	          CommandLine    cmd    =    parse(options,    arguments);    CommandLine    cmd    =    parse(options,    Arguments);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options)	14	None	replace
53	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  argument);  [CE]  cannot  find  symbol  argument  [FE]          StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  argument);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  argument);	          CommandLine    cmd    =    parse(options,    arguments);    CommandLine    cmd    =    parse(options,    argument);    	non-compiled	[CE]  cannot  find  symbol  argument	11	None	replace
54	[BUG]  [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	          parse(options,    arguments);    if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  missing  return  statement	77	None	replace
55	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
56	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  cmd  =  new  CommandLine();  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
57	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
58	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
59	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
60	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
61	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options  ==  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options  ==  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
62	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options  ==  null)  {  cmd  =  new  CommandLine();  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options  ==  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options  ==  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
63	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
64	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
65	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	48	2	add
66	[BUG]  [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	48	2	add
67	[BUG]  [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
68	[BUG]  [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    if(options!=  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
69	[BUG]  [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    if(options  ==  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
70	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	48	2	add
71	[BUG]  [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]            StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	48	2	add
72	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  false);  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  null,  false);	  Parser    cmd    =    parse(options,    arguments,    null);    	non-compiled	[CE]  incompatible  types	58	None	replace
73	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  true);  [CE]  incompatible  types  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  null,  true);	  Parser    cmd    =    parse(options,    arguments,    null);    	non-compiled	[CE]  incompatible  types	58	None	replace
74	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,<null>)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  null,  null);	  Parser    cmd    =    parse(options,    arguments,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,<null>)	58	None	replace
75	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  requiredOptions);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,List)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null,  requiredOptions);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  null,  requiredOptions);	  Parser    cmd    =    parse(options,    arguments,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,List)	58	None	replace
76	[BUG]  [BUGGY]  this.requiredOptions.add(options,  arguments);  [CE]  no  suitable  method  found  for  add(Options,String[])  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.add(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.add(options,  arguments);	  this.requiredOptions.add(options);    	non-compiled	[CE]  no  suitable  method  found  for  add(Options,String[])	99	None	replace
77	[BUG]  [BUGGY]  this.requiredOptions.add(arguments);  [CE]  missing  return  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.add(arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.add(arguments);	  this.requiredOptions.add(options);    	non-compiled	[CE]  missing  return  statement	99	None	replace
78	[BUG]  [BUGGY]  this.requiredOptions.add(options,  options);  [CE]  no  suitable  method  found  for  add(Options,Options)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.add(options,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.add(options,  options);	  this.requiredOptions.add(options);    	non-compiled	[CE]  no  suitable  method  found  for  add(Options,Options)	99	None	replace
79	[BUG]  [BUGGY]  parse(options,  arguments,  false,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)  [FE]          StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  false,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  false,  true);	  parse(options,    arguments,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)	6	None	replace
80	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  false,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  false,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  false,  true);	  return    parse(options,    arguments,    true,    true,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)	42	None	replace
81	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  true,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)  [FE]                        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  true,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  true,  true);	  return    parse(options,    arguments,    true,    true,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)	42	None	replace
82	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  false,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)  [FE]                          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  false,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  false,  false);	  return    parse(options,    arguments,    true,    true,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)	42	None	replace
83	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)  [FE]                            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  false,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  true);	  return    parse(options,    arguments,    true,    true,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)	42	None	replace
84	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  options,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)  [FE]          StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  options,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  options,  null,  false);	  CommandLine    cmd    =    parse(options,    arguments,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)	2	None	replace
85	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  null,  true);	  return    parse(options,    arguments,    cmd,    requiredOptions,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean)	28	None	replace
86	[BUG]  [BUGGY]  return  parse(options,  parameters,  cmd,  requiredOptions,  null,  false);  [CE]  cannot  find  symbol  parameters  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  parameters,  cmd,  requiredOptions,  null,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  parameters,  cmd,  requiredOptions,  null,  false);	  return    parse(options,    arguments,    cmd,    requiredOptions,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  parameters	28	None	replace
87	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false,  options);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean,Options)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false,  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false,  options);	  return    parse(options,    arguments,    cmd,    requiredOptions,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean,Options)	28	None	replace
88	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  options);  [CE]  no  suitable  method  found  for  parse(Options,String[],Options)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  options);	  Parser    cmd    =    parse(options,    options,    arguments);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Options)	73	None	replace
89	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  null);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],<null>)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  options,  arguments,  null);	  Parser    cmd    =    parse(options,    options,    arguments);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],<null>)	73	None	replace
90	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  options,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,<null>,boolean)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  options,  null,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  options,  null,  true);	  return    parse(options,    arguments,    cmd,    null,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,<null>,boolean)	27	None	replace
91	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  this,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,<null>,boolean)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  this,  null,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  this,  null,  true);	  return    parse(options,    arguments,    cmd,    null,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,<null>,boolean)	27	None	replace
92	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
93	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
94	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
95	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
96	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
97	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
98	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  cmd.addArg( "n   ");  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
99	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  cmd.addArg( "n   ");  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  cmd.addArg( "n   ");  }	  	compilable	  [FE]  StackOverflowError  	78	2	add
100	[BUG]  [BUGGY]  CommandLine  parse(options,  arguments,  null,  false);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  parse(options,  arguments,  null,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  parse(options,  arguments,  null,  false);	  return    parse(options,    arguments,    null,    true);    CommandLine    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  ';'  expected	54	None	replace
101	[BUG]  [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  parse(options,  arguments,  null,  true);  }  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    CommandLine    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  ';'  expected	54	None	replace
102	[BUG]  [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  parse(options,  arguments,  null,  false);  }  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  parse(options,  arguments,  null,  false);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  parse(options,  arguments,  null,  false);  }	  return    parse(options,    arguments,    null,    true);    CommandLine    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  ';'  expected	54	None	replace
103	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  true,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  null);	  return    parse(options,    arguments,    cmd,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>)	75	None	replace
104	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,<null>)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  null,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  null);	  return    parse(options,    arguments,    cmd,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,<null>)	75	None	replace
105	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null,  requiredOptions);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>,List)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null,  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  false,  null,  requiredOptions);	  return    parse(options,    arguments,    cmd,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>,List)	75	None	replace
106	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>,<null>)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  false,  null,  null);	  return    parse(options,    arguments,    cmd,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>,<null>)	75	None	replace
107	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options);	          parse(options,    arguments,    null,    false);    Parser    parser    =    new    Parser(options);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	83	None	replace
108	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  true);	  return    parse(options,    arguments,    false,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)	39	None	replace
109	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  true,  options.length);  [CE]  cannot  find  symbol  length  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  true,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  true,  options.length);	  return    parse(options,    arguments,    false,    true);    	non-compiled	[CE]  cannot  find  symbol  length	39	None	replace
110	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  true);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  options,  arguments,  true);	  Parser    cmd    =    parse(options,    arguments,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],boolean)	59	None	replace
111	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  true,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  true,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  true,  null);	  Parser    cmd    =    parse(options,    arguments,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)	59	None	replace
112	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  true);	  return    parse(options,    arguments,    cmd,    requiredOptions,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean)	29	None	replace
113	[BUG]  [BUGGY]  return  parse(options,  options,  arguments,  cmd,  requiredOptions,  false);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,List,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  options,  arguments,  cmd,  requiredOptions,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  options,  arguments,  cmd,  requiredOptions,  false);	  return    parse(options,    arguments,    cmd,    requiredOptions,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,List,boolean)	29	None	replace
114	[BUG]  [BUGGY]  return  parse(options,  parameters,  cmd,  requiredOptions,  false);  [CE]  cannot  find  symbol  parameters  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  parameters,  cmd,  requiredOptions,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  parameters,  cmd,  requiredOptions,  false);	  return    parse(options,    arguments,    cmd,    requiredOptions,    false);    	non-compiled	[CE]  cannot  find  symbol  parameters	29	None	replace
115	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  false,  options);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean,Options)  [FE]                        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  false,  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  false,  options);	  return    parse(options,    arguments,    cmd,    requiredOptions,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean,Options)	29	None	replace
116	[BUG]  [BUGGY]  parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  true);	          parse(options,    arguments,    null,    true);    Parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
117	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  null);	  return    parse(options,    arguments,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)	41	None	replace
118	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,<null>)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  null,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  null);	  return    parse(options,    arguments,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,<null>)	41	None	replace
119	[BUG]  [BUGGY]  ParseException  parse(options,  arguments,  null,  true);  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  ParseException  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	ParseException  parse(options,  arguments,  null,  true);	          parse(options,    arguments,    null,    false);    ParseException    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  ';'  expected	82	None	replace
120	[BUG]  [BUGGY]  ParseException  parse(options,  arguments,  null,  false);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  ParseException  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	ParseException  parse(options,  arguments,  null,  false);	          parse(options,    arguments,    null,    false);    ParseException    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  ';'  expected	82	None	replace
121	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  options,  false);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  options,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  options,  false);	  Parser    parser    =    new    Parser(options,    arguments,    false);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	38	None	replace
122	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  false,  true);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  false,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  false,  true);	  Parser    parser    =    new    Parser(options,    arguments,    false);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	38	None	replace
123	[BUG]  [BUGGY]  return  parse(options,  arguments,  options,  cmd,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],Options,CommandLine,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  options,  cmd,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  options,  cmd,  true);	  return    parse(options,    arguments,    options,    cmd,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Options,CommandLine,boolean)	25	None	replace
124	[BUG]  [BUGGY]  return  parse(options,  arguments,  arguments,  cmd,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],String[],CommandLine,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  arguments,  cmd,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  arguments,  cmd,  true);	  return    parse(options,    arguments,    options,    cmd,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],String[],CommandLine,boolean)	25	None	replace
125	[BUG]  [BUGGY]  return  parse(options,  arguments,  options,  commandLine,  false);  [CE]  cannot  find  symbol  commandLine  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  options,  commandLine,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  options,  commandLine,  false);	  return    parse(options,    arguments,    options,    cmd,    false);    	non-compiled	[CE]  cannot  find  symbol  commandLine	25	None	replace
126	[BUG]  [BUGGY]  Parser  <  String>  parser  =  parse(options,  arguments,  null,  true);  [CE]  type  Parser  does  not  take  parameters  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  <  String>  parser  =  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  <  String>  parser  =  parse(options,  arguments,  null,  true);	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    else    {    requiredOptions    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  type  Parser  does  not  take  parameters	71	None	replace
127	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);	  	compilable	  [FE]  StackOverflowError  	45	2	add
128	[BUG]  [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  arguments);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);	  	compilable	  [FE]  StackOverflowError  	45	2	add
129	[BUG]  [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  argument);  [CE]  cannot  find  symbol  argument  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  argument);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);  parse(options,  argument);	  	non-compiled	[CE]  cannot  find  symbol  argument	45	None	add
130	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);	  	compilable	  [FE]  StackOverflowError  	45	2	add
131	[BUG]  [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);	  	compilable	  [FE]  StackOverflowError  	45	2	add
132	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);  parse(options,  null,  false);	  	compilable	  [FE]  StackOverflowError  	45	2	add
133	[BUG]  [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  null,  false);  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  parse(options,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);  parse(options,  null,  false);	  	compilable	  [FE]  StackOverflowError  	45	2	add
134	[BUG]  [BUGGY]  Parser  <?>  parse(options,  arguments);  [CE]  ';'  expected  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  <?>  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  <?>  parse(options,  arguments);	          parse(options,    arguments);    if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    	non-compiled	[CE]  ';'  expected	79	None	replace
135	[BUG]  [BUGGY]  Parser  <  Object>  parser  =  getParser();  [CE]  type  Parser  does  not  take  parameters  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  <  Object>  parser  =  getParser();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  <  Object>  parser  =  getParser();	          parse(options,    arguments);    if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    	non-compiled	[CE]  type  Parser  does  not  take  parameters	79	None	replace
136	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(options,  arguments);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(options,  arguments);	  CommandLine    cmd    =    options.parse(cmd,    arguments);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
137	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  cmd);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(arguments,  cmd);	  CommandLine    cmd    =    options.parse(cmd,    arguments);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
138	[BUG]  [BUGGY]  CommandLine  cmd  =  requiredOptions.parse(options,  cmd);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  requiredOptions.parse(options,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  requiredOptions.parse(options,  cmd);	  CommandLine    cmd    =    opts.parse(options,    cmd);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
139	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(opts,  cmd);  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(opts,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(opts,  cmd);	  CommandLine    cmd    =    opts.parse(options,    cmd);    	non-compiled	[CE]  cannot  find  symbol  opts	32	None	replace
140	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  options.toString());  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  options.toString());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  true,  options.toString());	  return    parse(options,    arguments,    cmd,    null,    false,    options.toString());    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String)	89	None	replace
141	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  false,  options.toString(),  requiredOptions);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String,List)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  null,  false,  options.toString(),  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  false,  options.toString(),  requiredOptions);	  return    parse(options,    arguments,    cmd,    null,    false,    options.toString());    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String,List)	89	None	replace
142	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false,  options.toString());  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean,String)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false,  options.toString());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false,  options.toString());	  return    parse(options,    arguments,    cmd,    null,    false,    options.toString());    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean,String)	89	None	replace
143	[BUG]  [BUGGY]  ParseException.parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  ParseException.parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	ParseException.parse(options,  arguments,  null,  true);	          parse(options,    arguments,    null,    true);    ParseException.parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
144	[BUG]  [BUGGY]  parse(options,  arguments,  null,  false);  ParseException.parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  null,  false);  ParseException.parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  null,  false);  ParseException.parse(options,  arguments,  null,  true);	          parse(options,    arguments,    null,    true);    ParseException.parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
145	[BUG]  [BUGGY]  Parser  parse(options,  arguments,  null,  false);  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parse(options,  arguments,  null,  false);	          parse(options,    arguments,    null,    true);    Parser    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  ';'  expected	64	None	replace
146	[BUG]  [BUGGY]  parse(options,  arguments,  null,  false);  Parser  parse(options,  arguments,  null,  true);  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  null,  false);  Parser  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  null,  false);  Parser  parse(options,  arguments,  null,  true);	          parse(options,    arguments,    null,    true);    Parser    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  ';'  expected	64	None	replace
147	[BUG]  [BUGGY]  Parser  parser  =  new  Parser();  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser();	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments);    }    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	104	None	replace
148	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  false,  options.length);  [CE]  cannot  find  symbol  length  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  false,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  false,  options.length);	  return    parse(options,    arguments,    true,    false,    options.length);    	non-compiled	[CE]  cannot  find  symbol  length	81	None	replace
149	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  options.length  +  1);  [CE]  cannot  find  symbol  length  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  false,  options.length  +  1);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  options.length  +  1);	  return    parse(options,    arguments,    true,    false,    options.length);    	non-compiled	[CE]  cannot  find  symbol  length	81	None	replace
150	[BUG]  [BUGGY]  Command  line  cmd  =  parse(options,  arguments);  [CE]  ';'  expected  [FE]        StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Command  line  cmd  =  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Command  line  cmd  =  parse(options,  arguments);	          CommandLine    cmd    =    parse(options,    arguments);    Command    line    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  ';'  expected	88	None	replace
151	[BUG]  [BUGGY]  Command  line  =  parse(options,  arguments);  [CE]  cannot  find  symbol  [FE]          StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Command  line  =  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Command  line  =  parse(options,  arguments);	          CommandLine    cmd    =    parse(options,    arguments);    Command    line    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
152	[BUG]  [BUGGY]  Command  line  cmd  =  parse(options,  null);  [CE]  ';'  expected  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Command  line  cmd  =  parse(options,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Command  line  cmd  =  parse(options,  null);	          CommandLine    cmd    =    parse(options,    arguments);    Command    line    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  ';'  expected	88	None	replace
153	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  this,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,boolean)  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  this,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  this,  true);	  return    parse(options,    arguments,    this,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,boolean)	22	None	replace
154	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  options,  true);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  options,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  options,  true);	  Parser    parser    =    new    Parser(options,    arguments,    true);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	37	None	replace
155	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  true,  false);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  true,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  true,  false);	  Parser    parser    =    new    Parser(options,    arguments,    true);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	37	None	replace
156	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  null,  true);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  null,  true);	  Parser    parser    =    new    Parser(options,    arguments,    true);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	37	None	replace
157	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments);  }	          parse(options,    arguments);    if(options    ==    null)    {    parse(options,    arguments);    }    	non-compiled	[CE]  missing  return  statement	49	None	replace
158	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  option);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  option);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(arguments,  option);	  CommandLine    cmd    =    option.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  option	105	None	replace
159	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  this,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,<null>,boolean)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  this,  null,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  this,  null,  false);	  return    parse(options,    arguments,    cmd,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,<null>,boolean)	23	None	replace
160	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  this,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,boolean,<null>)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  this,  false,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  this,  false,  null);	  return    parse(options,    arguments,    cmd,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,boolean,<null>)	23	None	replace
161	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  cmd);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  cmd);	  Parser    parser    =    new    Parser(options,    options);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	36	None	replace
162	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  options,  cmd);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  options,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  options,  cmd);	  Parser    parser    =    new    Parser(options,    options);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	36	None	replace
163	[BUG]  [BUGGY]  parent  ==  null  &&  arguments.length  ==  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  &&  arguments.length  ==  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  &&  arguments.length  ==  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    parameters.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	95	None	replace
164	[BUG]  [BUGGY]  parent  ==  null  &&  arguments.length  ==  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  &&  arguments.length  ==  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  &&  arguments.length  ==  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    cmd.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	93	None	replace
165	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    cmd.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	93	None	replace
166	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  cmd.values())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  cmd.values())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  cmd.values())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    cmd.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	93	None	replace
167	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  [CE]  incompatible  types  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  requiredOptions  =  options.getRequiredOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  requiredOptions  =  options.getRequiredOptions();	  Option[]    requiredOptions    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	44	None	replace
168	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getOptions(arguments);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  requiredOptions  =  options.getOptions(arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  requiredOptions  =  options.getOptions(arguments);	  Option[]    requiredOptions    =    options.getOptions();    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	44	None	replace
169	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getRawOptions();  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  requiredOptions  =  options.getRawOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  requiredOptions  =  options.getRawOptions();	  Option[]    requiredOptions    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
170	[BUG]  [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  length  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(!options.isEmpty())    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  cannot  find  symbol  length	85	None	replace
171	[BUG]  [BUGGY]  Parser  <?>  parser  =  new  Parser(options,  arguments);  [CE]  type  Parser  does  not  take  parameters  [FE]        StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  <?>  parser  =  new  Parser(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  <?>  parser  =  new  Parser(options,  arguments);	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments,    null,    false);    }    	non-compiled	[CE]  type  Parser  does  not  take  parameters	101	None	replace
172	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  null);  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  null);	          CommandLine    cmd    =    parse(options,    arguments);    CommandLine    cmd    =    parse(options,    options);    	non-compiled	[CE]  missing  return  statement	13	None	replace
173	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  options,  requiredOptions,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,List,<null>,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  options,  requiredOptions,  null,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  options,  requiredOptions,  null,  false);	  return    parse(options,    arguments,    cmd,    options,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,List,<null>,boolean)	30	None	replace
174	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  options,  requiredOptions,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,List,boolean)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  options,  requiredOptions,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  options,  requiredOptions,  false);	  return    parse(options,    arguments,    cmd,    options,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,List,boolean)	30	None	replace
175	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  true,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  arguments,  true,  false);	  CommandLine    cmd    =    parse(options,    arguments,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)	3	None	replace
176	[BUG]  [BUGGY]  parse(options,  arguments,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  true,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  true,  false);	  parse(options,    arguments,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)	7	None	replace
177	[BUG]  [BUGGY]  parent.parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  parent  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent.parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent.parse(options,  arguments,  null,  true);	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    else    {    requiredOptions.add(options);    }    	non-compiled	[CE]  cannot  find  symbol  parent	72	None	replace
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	62	2	add
179	[BUG]  [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	62	2	add
180	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	62	2	add
181	[BUG]  [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	62	2	add
182	[BUG]  [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    Parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol	62	None	add
183	[BUG]  [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  argument,  null,  true);  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  parse(options,  argument,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  argument,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol  argument	62	None	add
184	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  null,  false);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  null,  false);	  Parser    parser    =    new    Parser(options,    arguments,    null);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	35	None	replace
185	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  cmd);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  cmd);	  Parser    parser    =    new    Parser(options,    arguments,    null);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	35	None	replace
186	[BUG]  [BUGGY]  parse(options,  arguments,  null,  false);  Parser  parser  =  new  Parser(options,  arguments);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  null,  false);  Parser  parser  =  new  Parser(options,  arguments);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  null,  false);  Parser  parser  =  new  Parser(options,  arguments);	  return    parse(options,    arguments,    null,    true);    Parser    parser    =    new    Parser(options,    arguments);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	56	None	replace
187	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  throw  new  ParseException( " ");  }  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  throw  new  ParseException( " ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments);  }  else  {  throw  new  ParseException( " ");  }	          parse(options,    arguments);    parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	46	None	replace
188	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  missing  return  statement  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments);  }  else  {  throw  new  IllegalArgumentException( " ");  }	          parse(options,    arguments);    parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	46	None	replace
189	[BUG]  [BUGGY]  Option[]  options  =  cmd.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  options  =  cmd.getOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  cmd.getOptions();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	43	None	replace
190	[BUG]  [BUGGY]  Option[]  options  =  opts.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  options  =  opts.getOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  opts.getOptions();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	43	None	replace
191	[BUG]  [BUGGY]  Option[]  options  =  options.getOptions(arguments);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  options  =  options.getOptions(arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  options.getOptions(arguments);	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	43	None	replace
192	[BUG]  [BUGGY]  parse(options,  argument,  null,  true);  [CE]  cannot  find  symbol  argument  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  argument,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  argument,  null,  true);	          parse(options,    arguments,    null,    true);    parse(options,    argument,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  argument	65	None	replace
193	[BUG]  [BUGGY]  parse(options,  options,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  options,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  options,  null,  true);	          parse(options,    arguments,    null,    true);    parse(options,    argument,    null,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)	65	None	replace
194	[BUG]  [BUGGY]  Option[]  arguments  =  options.getArguments();  [CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  arguments  =  options.getArguments();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  arguments  =  options.getArguments();	  Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])	8	None	replace
195	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptions(arguments);  [CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  arguments  =  options.getOptions(arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  arguments  =  options.getOptions(arguments);	  Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])	8	None	replace
196	[BUG]  [BUGGY]  Option[]  arguments  =  options.parseOptions(options,  arguments);  [CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  arguments  =  options.parseOptions(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  arguments  =  options.parseOptions(options,  arguments);	  Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])	8	None	replace
197	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  false);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  options,  arguments,  false);	  Parser    cmd    =    parse(options,    arguments,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],boolean)	60	None	replace
198	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  arguments,  false,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  false,  null);	  Parser    cmd    =    parse(options,    arguments,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)	60	None	replace
199	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  false,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  false,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  false,  true);	  return    parse(options,    arguments,    cmd,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean)	90	None	replace
200	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  true,  true,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  true,  false);	  return    parse(options,    arguments,    cmd,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean,boolean)	90	None	replace
201	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  true,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean,boolean)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  true,  true,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  true,  true);	  return    parse(options,    arguments,    cmd,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean,boolean)	90	None	replace
202	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean,<null>)  [FE]                        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  true,  false,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  false,  null);	  return    parse(options,    arguments,    cmd,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean,<null>)	90	None	replace
203	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
204	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
205	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
206	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
207	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
208	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
209	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  false);  [CE]  cannot  find  symbol  argument  [FE]          ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  false);	  	non-compiled	[CE]  cannot  find  symbol  argument	16	None	add
210	[BUG]  [BUGGY]  CommandLine  cmd  =  requiredOptions.parse(options,  arguments);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  requiredOptions.parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  requiredOptions.parse(options,  arguments);	  CommandLine    cmd    =    opts.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
211	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  arguments);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(arguments,  arguments);	  CommandLine    cmd    =    opts.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
212	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  opts);  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  opts);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(arguments,  opts);	  CommandLine    cmd    =    opts.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  opts	69	None	replace
213	[BUG]  [BUGGY]  Options  opts  =  options.getOptions(arguments);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Options  opts  =  options.getOptions(arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Options  opts  =  options.getOptions(arguments);	  Options    opts    =    options.getOptions();    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	100	None	replace
214	[BUG]  [BUGGY]  Options  opts  =  options.getOptions(),  arguments);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Options  opts  =  options.getOptions(),  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Options  opts  =  options.getOptions(),  arguments);	  Options    opts    =    options.getOptions();    	non-compiled	[CE]  ';'  expected	100	None	replace
215	[BUG]  [BUGGY]  Option  opts  =  options.getOptions(arguments);  [CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  opts  =  options.getOptions(arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  opts  =  options.getOptions(arguments);	  Options    opts    =    options.getOptions();    	non-compiled	[CE]  method  getOptions  in  class  Options  cannot  be  applied  to  given  types;	100	None	replace
216	[BUG]  [BUGGY]  if(arguments.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(arguments.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(arguments.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(arguments.length    ==    0)    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  missing  return  statement	84	None	replace
217	[BUG]  [BUGGY]  return  parse(options,  arguments,  options,  this,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],Options,Parser,boolean)  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  options,  this,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  options,  this,  true);	  return    parse(options,    arguments,    options,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Options,Parser,boolean)	96	None	replace
218	[BUG]  [BUGGY]  return  parse(options,  arguments,  options,  cmd,  this,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],Options,CommandLine,Parser,boolean)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  options,  cmd,  this,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  options,  cmd,  this,  false);	  return    parse(options,    arguments,    options,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Options,CommandLine,Parser,boolean)	96	None	replace
219	[BUG]  [BUGGY]  return  parse(options,  options,  arguments,  this,  true);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],Parser,boolean)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  options,  arguments,  this,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  options,  arguments,  this,  true);	  return    parse(options,    arguments,    options,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],Parser,boolean)	96	None	replace
220	[BUG]  [BUGGY]  ParseException.parse(options,  arguments,  null,  false);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  ParseException.parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	ParseException.parse(options,  arguments,  null,  false);	          parse(options,    arguments,    null,    false);    ParseException.parse(options,    arguments,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
221	[BUG]  [BUGGY]  CommandLine  cmd  =  _parse(options,  cmd);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  _parse(options,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  _parse(options,  cmd);	  CommandLine    cmd    =    options.parse(options,    cmd);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
222	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments).keySet();  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments).keySet();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ",  arguments).keySet();	  Option    option    =    options.getOption(   "parse   ").keySet();    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	74	None	replace
223	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ".keySet());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  option  =  options.getOption( "parse ".keySet());  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ".keySet());	  Option    option    =    options.getOption(   "parse   ").keySet();    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
224	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  options,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  options,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  options,  null,  true);	  CommandLine    cmd    =    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)	4	None	replace
225	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  true,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  true);	  return    parse(options,    arguments,    cmd,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean)	90	None	replace
226	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  Arguments);  [CE]  cannot  find  symbol  Arguments  [FE]                StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  Arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  Arguments);	          CommandLine    cmd    =    parse(options,    arguments);    CommandLine    cmd    =    parse(options,    Arguments);    	non-compiled	[CE]  cannot  find  symbol  Arguments	14	None	replace
227	[BUG]  [BUGGY]  parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  false);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  false);	          parse(options,    arguments,    null,    false);    Parse(options,    arguments,    null,    false);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
228	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  options,  this,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,Parser,boolean)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  options,  this,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  options,  this,  false);	  return    parse(options,    arguments,    cmd,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,Parser,boolean)	23	None	replace
229	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  options,  null);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  new  Parser(options,  options,  null);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  options,  null);	  Parser    parser    =    new    Parser(options,    arguments,    null);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	35	None	replace
230	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.values())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.values())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.values())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
231	[BUG]  [BUGGY]  this.requiredOptions.clear();  [CE]  missing  return  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.clear();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.clear();	  this.requiredOptions.add(options);    	non-compiled	[CE]  missing  return  statement	99	None	replace
232	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  false);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments,    null,    false);    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  missing  return  statement	17	None	replace
233	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments,    null,    false);    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  missing  return  statement	17	None	replace
234	[BUG]  [BUGGY]  if(options.length  ==  2)  {  return  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  length  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  2)  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  2)  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(!options.contains(arguments))    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  cannot  find  symbol  length	87	None	replace
235	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getArguments();  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  requiredOptions  =  options.getArguments();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  requiredOptions  =  options.getArguments();	  Option[]    requiredOptions    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
236	[BUG]  [BUGGY]  if(options!=  null)  {  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  parse(options,  arguments,  null,  true);  }	          parse(options,    arguments,    null,    true);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	63	None	replace
237	[BUG]  [BUGGY]  this.requiredOptions.addArg(options,  arguments);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  this.requiredOptions.addArg(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.addArg(options,  arguments);	  this.requiredOptions.addArg(arguments);    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
238	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	          parse(options,    arguments);    if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  missing  return  statement	77	None	replace
239	[BUG]  [BUGGY]  parse(options,  cmd);  [CE]  no  suitable  method  found  for  parse(Options,CommandLine)  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  cmd);	          parse(options,    arguments);    if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,CommandLine)	77	None	replace
240	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
241	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
242	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
243	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
244	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  false,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  false);	  return    parse(options,    arguments,    true,    true,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)	42	None	replace
245	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  ParseException  parse(options,  arguments,  null,  false);  }  [CE]  ';'  expected  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  ParseException  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  false);  ParseException  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments,    null,    false);    ParseException    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  ';'  expected	82	None	replace
246	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  ParseException  parse(options,  arguments,  null,  false);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  ParseException  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  ParseException  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments,    null,    false);    ParseException    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  ';'  expected	82	None	replace
247	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  commandLine,  requiredOptions,  false);  [CE]  cannot  find  symbol  commandLine  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  commandLine,  requiredOptions,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  commandLine,  requiredOptions,  false);	  return    parse(options,    arguments,    cmd,    requiredOptions,    false);    	non-compiled	[CE]  cannot  find  symbol  commandLine	29	None	replace
248	[BUG]  [BUGGY]  CommandLine  cmd  =  opts.parse(options,  options);  [CE]  cannot  find  symbol  opts  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  opts.parse(options,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  opts.parse(options,  options);	  CommandLine    cmd    =    options.parse(options,    cmd);    	non-compiled	[CE]  cannot  find  symbol  opts	34	None	replace
249	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  options,  true);  [CE]  no  suitable  method  found  for  parse(Options,Options,boolean)  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  options,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  options,  true);	  CommandLine    cmd    =    parse(options,    arguments,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,boolean)	3	None	replace
250	[BUG]  [BUGGY]  IllegalArgumentException  e  =  parse(options,  arguments);  [CE]  incompatible  types  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  IllegalArgumentException  e  =  parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	IllegalArgumentException  e  =  parse(options,  arguments);	          CommandLine    cmd    =    parse(options,    arguments);    Parser    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  incompatible  types	12	None	replace
251	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  options);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(arguments,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(arguments,  options);	  CommandLine    cmd    =    opts.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
252	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  ParseException  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  ParseException  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    ParseException  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);	  	non-compiled	[CE]  ';'  expected	16	None	add
253	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
254	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	16	2	add
255	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  return  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  return  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  return  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
256	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  options,  null,  true);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  options,  null,  true);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  options,  null,  true);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    else    {    requiredOptions    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)	71	None	replace
257	[BUG]  [BUGGY]  Parser  parser  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  cmd);  [CE]  incompatible  types  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  parser  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  cmd);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  cmd);	          CommandLine    cmd    =    parse(options,    arguments);    CommandLine    cmd    =    parse(options,    options);    	non-compiled	[CE]  incompatible  types	13	None	replace
258	[BUG]  [BUGGY]  Option[]  options  =  options.requireOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  options  =  options.requireOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  options.requireOptions();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	43	None	replace
259	[BUG]  [BUGGY]  Option[]  options  =  options.cloneOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  options  =  options.cloneOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  options.cloneOptions();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	43	None	replace
260	[BUG]  [BUGGY]  Option[]  arguments  =  options.requireOptions();  [CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  arguments  =  options.requireOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  arguments  =  options.requireOptions();	  Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])	8	None	replace
261	[BUG]  [BUGGY]  Option[]  arguments  =  options.requiresOptions();  [CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  arguments  =  options.requiresOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  arguments  =  options.requiresOptions();	  Option[]    arguments    =    options.getOptions();    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])	8	None	replace
262	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
263	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
264	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    if(cmd  ==  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
265	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  ParseException  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  ParseException  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    ParseException  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  ';'  expected	18	None	add
266	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	18	2	add
267	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	18	2	add
268	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments[i]);  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments[i]);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments[i]);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
269	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments[i]);  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments[i]);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments[i]);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
270	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  options[i]);  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  options[i]);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  options[i]);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
271	[BUG]  [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  cmd  =  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  length  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  cmd  =  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  cmd  =  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    CommandLine    cmd    =    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
272	[BUG]  [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  cmd  =  parse(options,  arguments,  null,  false);  }  [CE]  cannot  find  symbol  length  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  cmd  =  parse(options,  arguments,  null,  false);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  CommandLine  cmd  =  parse(options,  arguments,  null,  false);  }	  return    parse(options,    arguments,    null,    true);    CommandLine    cmd    =    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	86	None	replace
273	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ",  options,  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  option  =  options.getOption( "parse ",  options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ",  options,  arguments);	  Option    option    =    options.getOption(   "parse   ",    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	68	None	replace
274	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  cmd.append('n');  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  cmd.append('n');  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  cmd.append('n');  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    cmd.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
275	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  cmd.append('n');  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  cmd.append('n');  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  cmd.append('n');  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    cmd.append('n');    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
276	[BUG]  [BUGGY]  return  parse(options,  options,  arguments,  null,  false,  options.toString());  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],<null>,boolean,String)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  options,  arguments,  null,  false,  options.toString());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  options,  arguments,  null,  false,  options.toString());	  return    parse(options,    arguments,    cmd,    null,    false,    options.toString());    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],<null>,boolean,String)	89	None	replace
277	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  false);	  return    parse(options,    arguments,    false,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)	39	None	replace
278	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
279	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]                StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
280	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  options);  }  [CE]  illegal  start  of  expression  [FE]                  StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  options);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  options);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
281	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  false);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments,    null,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
282	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments,  null,  false);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  options.length;  ++i)  {  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments,    null,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
283	[BUG]  [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  true);  }  [CE]  illegal  start  of  expression  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  true);  }	          parse(options,    arguments);    if(options!=    null)    {    for(int    i    =    0;    i    <    arguments.length;    ++i)    {    parse(options,    arguments,    null,    false);    }    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
284	[BUG]  [BUGGY]  parser  =  new  Parser(options);  [CE]  cannot  find  symbol  parser  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parser  =  new  Parser(options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parser  =  new  Parser(options);	          parse(options,    arguments,    null,    false);    Parser    parser    =    new    Parser(options);    	non-compiled	[CE]  cannot  find  symbol  parser	83	None	replace
285	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  options,  neededOptions,  null,  false);  [CE]  cannot  find  symbol  neededOptions  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  options,  neededOptions,  null,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  options,  neededOptions,  null,  false);	  return    parse(options,    arguments,    cmd,    options,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  neededOptions	30	None	replace
286	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  true);  }	          parse(options,    arguments,    null,    false);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	19	None	replace
287	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  }	          parse(options,    arguments,    null,    false);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	19	None	replace
288	[BUG]  [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }	          parse(options,    arguments);    if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    	non-compiled	[CE]  missing  return  statement	79	None	replace
289	[BUG]  [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "null ");  }  [CE]  missing  return  statement  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "null ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "null ");  }	          parse(options,    arguments);    if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    	non-compiled	[CE]  missing  return  statement	79	None	replace
290	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  options);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,Options)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  options);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  true,  false,  options);	  return    parse(options,    arguments,    null,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,Options)	80	None	replace
291	[BUG]  [BUGGY]  Option  opts  =  options.getOptions();  [CE]  incompatible  types  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  opts  =  options.getOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  opts  =  options.getOptions();	  Options    opts    =    options.getOptions();    	non-compiled	[CE]  incompatible  types	100	None	replace
292	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(options,  argument);  [CE]  cannot  find  symbol  argument  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  options.parse(options,  argument);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(options,  argument);	  CommandLine    cmd    =    option.parse(options,    cmd);    	non-compiled	[CE]  cannot  find  symbol  argument	33	None	replace
293	[BUG]  [BUGGY]  return  parse(options,  options,  arguments,  cmd,  requiredOptions,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,List,<null>,boolean)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  options,  arguments,  cmd,  requiredOptions,  null,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  options,  arguments,  cmd,  requiredOptions,  null,  false);	  return    parse(options,    arguments,    cmd,    requiredOptions,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,List,<null>,boolean)	28	None	replace
294	[BUG]  [BUGGY]  if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	53	None	replace
295	[BUG]  [BUGGY]  if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [CE]  missing  return  statement  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }	  return    parse(options,    arguments,    null,    true);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	53	None	replace
296	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions.add(options);  }  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions.add(options);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions.add(options);  }	          parse(options,    arguments);    if(options    ==    null)    {    parse(options,    arguments);    }    	non-compiled	[CE]  missing  return  statement	49	None	replace
297	[BUG]  [BUGGY]  Parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parse(options,  arguments,  null,  true);	          parse(options,    arguments,    null,    true);    Parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
298	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  null,  true);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  null,  true);	  return    parse(options,    arguments,    true,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>,boolean)	40	None	replace
299	[BUG]  [BUGGY]  parent  ==  null)  {  parse(options,  arguments,  null,  true);  }  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null)  {  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null)  {  parse(options,  arguments,  null,  true);  }	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  not  a  statement	70	None	replace
300	[BUG]  [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  ParseException  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  ParseException  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    ParseException  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  ';'  expected	62	None	add
301	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	62	2	add
302	[BUG]  [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	62	2	add
303	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  null,  false);  [CE]  missing  return  statement  [FE]              StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parse(options,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  null,  false);	          CommandLine    cmd    =    parse(options,    arguments);    CommandLine    cmd    =    parse(options,    options);    	non-compiled	[CE]  missing  return  statement	13	None	replace
304	[BUG]  [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  false);  }  [CE]  cannot  find  symbol  length  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments,    null,    false);    parse(options,    arguments,    null,    false);    	non-compiled	[CE]  cannot  find  symbol  length	17	None	replace
305	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  LinkedList  <  String>();  }  [CE]  cannot  find  symbol  [FE]                StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  LinkedList  <  String>();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  LinkedList  <  String>();  }	          parse(options,    arguments);    if(options    ==    null)    {    parse(options,    arguments);    }    else    {    requiredOptions    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
306	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]                  StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }	          parse(options,    arguments);    if(options    ==    null)    {    parse(options,    arguments);    }    else    {    requiredOptions    =    new    LinkedList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
307	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  }	  	compilable	  [FE]  StackOverflowError  	48	2	add
308	[BUG]  [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options    ==    null)    {    parse(options,    arguments);    }    if(options  ==  null)  {  parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  }	  	compilable	  [FE]  StackOverflowError  	48	2	add
309	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)  [FE]                      ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  true,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  true,  false);	  return    parse(options,    arguments,    true,    true,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)	42	None	replace
310	[BUG]  [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  Parse(options,  arguments);  [CE]  cannot  find  symbol  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    parse(options,  arguments);  parse(options,  arguments);  Parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        parse(options,    arguments);    parse(options,  arguments);  Parse(options,  arguments);	  	non-compiled	[CE]  cannot  find  symbol	45	None	add
311	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean,<null>)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  false,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  false,  null);	  return    parse(options,    arguments,    cmd,    requiredOptions,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean,<null>)	29	None	replace
312	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.getValues())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.getValues())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.getValues())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	92	None	replace
313	[BUG]  [BUGGY]  CommandLine  cmd  =  cmd.parse(options,  options);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  cmd.parse(options,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  cmd.parse(options,  options);	  CommandLine    cmd    =    options.parse(options,    cmd);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
314	[BUG]  [BUGGY]  Option[]  options  =  options.requiresOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  options  =  options.requiresOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  options.requiresOptions();	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	43	None	replace
315	[BUG]  [BUGGY]  Option[]  options  =  options.parseOptions(options,  arguments);  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  options  =  options.parseOptions(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  options.parseOptions(options,  arguments);	  Option[]    options    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	43	None	replace
316	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  null,  options.length);  [CE]  cannot  find  symbol  length  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  null,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  null,  options.length);	  return    parse(options,    arguments,    false,    null);    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
317	[BUG]  [BUGGY]  if(arguments  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(arguments  ==  null)  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(arguments  ==  null)  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(arguments.length    ==    0)    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  missing  return  statement	84	None	replace
318	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.opts.getOptions();  [CE]  cannot  find  symbol  opts  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option[]  requiredOptions  =  options.opts.getOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  requiredOptions  =  options.opts.getOptions();	  Option[]    requiredOptions    =    options.getOptions();    	non-compiled	[CE]  cannot  find  symbol  opts	44	None	replace
319	[BUG]  [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [CE]  cannot  find  symbol  length  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments,    null,    true);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	63	None	replace
320	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [CE]  missing  return  statement  [FE]      ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }	          parse(options,    arguments,    null,    true);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	63	None	replace
321	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  false);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  false);	  	non-compiled	[CE]  cannot  find  symbol	16	None	add
322	[BUG]  [BUGGY]  CommandLine  cmd  =  neededOptions.parse(options,  arguments);  [CE]  cannot  find  symbol  neededOptions  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  neededOptions.parse(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  neededOptions.parse(options,  arguments);	  CommandLine    cmd    =    opts.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  neededOptions	69	None	replace
323	[BUG]  [BUGGY]  CommandLine  cmd  =  parseOptions(options,  arguments);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  CommandLine  cmd  =  parseOptions(options,  arguments);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parseOptions(options,  arguments);	  CommandLine    cmd    =    opts.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
324	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  options.toString());  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,String)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  null,  true,  false,  options.toString());  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  true,  false,  options.toString());	  return    parse(options,    arguments,    null,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean,String)	80	None	replace
325	[BUG]  [BUGGY]  return  parse(options,  arguments,  options,  null,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],Options,<null>,boolean,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  options,  null,  true,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  options,  null,  true,  false);	  return    parse(options,    arguments,    null,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Options,<null>,boolean,boolean)	80	None	replace
326	[BUG]  [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  ParseException.parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);  ParseException.parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        false);        parse(options,    arguments,    null,    true);    ParseException.parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol	18	None	add
327	[BUG]  [BUGGY]  parent.parse(options,  arguments,  null,  false);  [CE]  cannot  find  symbol  parent  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent.parse(options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent.parse(options,  arguments,  null,  false);	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    else    {    requiredOptions.add(options);    }    	non-compiled	[CE]  cannot  find  symbol  parent	72	None	replace
328	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  true,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,<null>)  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  false,  true,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  true,  null);	  return    parse(options,    arguments,    false,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,<null>)	39	None	replace
329	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
330	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  if(cmd!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    if(cmd!=  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
331	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  if(cmd!=  null)  {  cmd  =  new  CommandLine();  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  if(cmd!=  null)  {  cmd  =  new  CommandLine();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd    =    new    CommandLine();    }    if(cmd!=  null)  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	76	2	add
332	[BUG]  [BUGGY]  if(options.isEmpty())  {  return  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.isEmpty())  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.isEmpty())  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(!options.isEmpty())    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
333	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  options.toString(),  requiredOptions);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String,List)  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  options.toString(),  requiredOptions);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  true,  options.toString(),  requiredOptions);	  return    parse(options,    arguments,    cmd,    null,    false,    options.toString());    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String,List)	89	None	replace
334	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],<null>,boolean)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  options,  arguments,  null,  false);	  Parser    cmd    =    parse(options,    arguments,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],<null>,boolean)	58	None	replace
335	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  false);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }	  if(options    ==    null)    {    parse(options,    arguments,    null,    true);    }    else    {    requiredOptions    =    new    ArrayList    <    String>();    }    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
336	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean,boolean)  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  true,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  true,  false);	  return    parse(options,    arguments,    cmd,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean,boolean)	90	None	replace
337	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  false,  options.length);  [CE]  cannot  find  symbol  length  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  true,  false,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  false,  options.length);	  return    parse(options,    arguments,    cmd,    true,    false);    	non-compiled	[CE]  cannot  find  symbol  length	90	None	replace
338	[BUG]  [BUGGY]  parse(options,  option,  null,  true);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  option,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  option,  null,  true);	          parse(options,    arguments,    null,    true);    parse(options,    argument,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  option	65	None	replace
339	[BUG]  [BUGGY]  if(options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    if(options    ==    null)    {    if(!options.contains(arguments))    {    return    parse(options,    arguments,    null,    true);    }    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
340	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  options);  [CE]  no  suitable  method  found  for  parse(Options,Options)  [FE]            StackOverflowError      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Parser  cmd  =  parse(options,  options);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  options);	          CommandLine    cmd    =    parse(options,    arguments);    Parser    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options)	12	None	replace
341	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  options[0].length);  [CE]  array  required,  but  Options  found  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  false,  options[0].length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  options[0].length);	  return    parse(options,    arguments,    true,    false,    options.length);    	non-compiled	[CE]  array  required,  but  Options  found	81	None	replace
342	[BUG]  [BUGGY]  parse(options,  options,  null,  true);  ParseException.parse(options,  arguments,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parse(options,  options,  null,  true);  ParseException.parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  options,  null,  true);  ParseException.parse(options,  arguments,  null,  true);	          parse(options,    arguments,    null,    true);    ParseException.parse(options,    arguments,    null,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,<null>,boolean)	97	None	replace
343	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  null,  options.length);  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  true,  false,  null,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  null,  options.length);	  return    parse(options,    arguments,    true,    false,    null);    	non-compiled	[CE]  cannot  find  symbol  length	40	None	replace
344	[BUG]  [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg(   "n   ");  }  if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments);        if(options!=    null)    {    parse(options,    arguments);    }    else    {    cmd.addArg(   "n   ");    }    if(options!=  null)  {  parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	78	None	add
345	[BUG]  [BUGGY]  return  parse(options,  arguments,  arguments,  cmd,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],String[],CommandLine,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  arguments,  cmd,  false);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  arguments,  cmd,  false);	  return    parse(options,    options,    arguments,    cmd,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],String[],CommandLine,boolean)	26	None	replace
346	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  options.length);  [CE]  cannot  find  symbol  length  [FE]              ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  true,  options.length);	  return    parse(options,    arguments,    cmd,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	27	None	replace
347	[BUG]  [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  length  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  parse(options,  arguments,  null,  false);  }  else  {  parse(options,  arguments,  null,  true);  }	          parse(options,    arguments,    null,    false);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
348	[BUG]  [BUGGY]  Context.checkState(parameters.length  ==  0);  [CE]  cannot  find  symbol  parameters  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Context.checkState(parameters.length  ==  0);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Context.checkState(parameters.length  ==  0);	  Context.checkState(options.length    ==    0);    	non-compiled	[CE]  cannot  find  symbol  parameters	9	None	replace
349	[BUG]  [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  argument,  null,  true);  parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  argument  [FE]    ComparisonFailure    [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]          parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);  parse(options,  argument,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	                parse(options,        arguments,        null,        true);        parse(options,    arguments,    null,    true);    parse(options,  argument,  null,  true);  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol  argument	62	None	add
350	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,<null>)  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  null,  false,  null);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  false,  null);	  return    parse(options,    arguments,    cmd,    false,    null);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,<null>)	75	None	replace
351	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null,  options.length);  [CE]  cannot  find  symbol  length  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null,  options.length);  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  false,  null,  options.length);	  return    parse(options,    arguments,    cmd,    false,    null);    	non-compiled	[CE]  cannot  find  symbol  length	75	None	replace
352	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  paths.values())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                  ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  paths.values())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  paths.values())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    paths.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	94	None	replace
353	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  path.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  path.keySet())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  path.keySet())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    paths.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	94	None	replace
354	[BUG]  [BUGGY]  Option  options  =  options.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  options  =  options.getOptions();  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  options  =  options.getOptions();	  Options    opts    =    options.getOptions();    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	100	None	replace
355	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse   ",  arguments,  null,  false);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]                ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  Option  option  =  options.getOption( "parse   ",  arguments,  null,  false);  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse   ",  arguments,  null,  false);	  Option    option    =    options.getOption(   "parse   ",    arguments);    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	68	None	replace
356	[BUG]  [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  length  [FE]        ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  true);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  true);  }	  return    parse(options,    arguments,    null,    true);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
357	[BUG]  [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [CE]  cannot  find  symbol  length  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }  [BUGGY]      }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  else  {  parse(options,  arguments,  null,  false);  }	  return    parse(options,    arguments,    null,    true);    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
358	[BUG]  [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  Parser  parse(options,  arguments,  null,  true);  }  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  Parser  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  Parser  parse(options,  arguments,  null,  true);  }	          parse(options,    arguments,    null,    true);    Parser    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  ';'  expected	64	None	replace
359	[BUG]  [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  }  [CE]  cannot  find  symbol  length  [FE]            ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options.length  ==  0)  {  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  }	          parse(options,    arguments,    null,    true);    Parser    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  length	64	None	replace
360	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                    ComparisonFailure      [CONTEXT]      public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {      [BUGGY]  parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }  [BUGGY]      return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length!=  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }	  parent    ==    null    ||    arguments.length    ==    0)    {    for(String    argument    :    parameters.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	95	None	replace
