bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  null);  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  null);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  arguments,  null);	      CommandLine    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	7	None	replace
2	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  false);  [CE]  missing  return  statement  [FE]      StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  arguments,  false);	      CommandLine    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	7	None	replace
3	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  true);  [CE]  missing  return  statement  [FE]        StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  arguments,  true);	      CommandLine    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	7	None	replace
4	[BUG]  [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  null,  false);  [CE]  missing  return  statement  [FE]          StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  parse(options,  arguments,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  parse(options,  arguments,  null,  false);	      CommandLine    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	7	None	replace
5	[BUG]  [BUGGY]  parse(options,  arguments,  null);  [CE]  missing  return  statement  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parse(options,  arguments,  null);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  null);	      parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	9	None	replace
6	[BUG]  [BUGGY]  parse(options,  arguments,  false);  [CE]  missing  return  statement  [FE]      StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parse(options,  arguments,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  false);	      parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	9	None	replace
7	[BUG]  [BUGGY]  parse(options,  arguments,  true);  [CE]  missing  return  statement  [FE]        StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parse(options,  arguments,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  arguments,  true);	      parse(options,    arguments);    	non-compiled	[CE]  missing  return  statement	9	None	replace
8	[BUG]  [BUGGY]  Option[]  arguments  =  options.getOptions();  [CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Option[]  arguments  =  options.getOptions();  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  arguments  =  options.getOptions();	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(arguments);    }    	non-compiled	[CE]  variable  arguments  is  already  defined  in  method  parse(Options,String[])	19	None	replace
9	[BUG]  [BUGGY]  Context.checkState(options.length  ==  0);  [CE]  cannot  find  symbol  length  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Context.checkState(options.length  ==  0);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Context.checkState(options.length  ==  0);	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(arguments);    }    	non-compiled	[CE]  cannot  find  symbol  length	19	None	replace
10	[BUG]  [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  arguments);  [CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        CommandLine    cmd    =    parse(options,    arguments);    CommandLine  cmd  =  parse(options,  arguments);	  	non-compiled	[CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])	6	None	add
11	[BUG]  [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  argument);  [CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])  [FE]      StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  argument);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        CommandLine    cmd    =    parse(options,    arguments);    CommandLine  cmd  =  parse(options,  argument);	  	non-compiled	[CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])	6	None	add
12	[BUG]  [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  Parser  cmd  =  parse(options,  arguments);  [CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])  [FE]        StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  Parser  cmd  =  parse(options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        CommandLine    cmd    =    parse(options,    arguments);    Parser  cmd  =  parse(options,  arguments);	  	non-compiled	[CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])	6	None	add
13	[BUG]  [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  options);  [CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])  [FE]          StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  options);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        CommandLine    cmd    =    parse(options,    arguments);    CommandLine  cmd  =  parse(options,  options);	  	non-compiled	[CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])	6	None	add
14	[BUG]  [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  Arguments);  [CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])  [FE]            StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  CommandLine  cmd  =  parse(options,  Arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        CommandLine    cmd    =    parse(options,    arguments);    CommandLine  cmd  =  parse(options,  Arguments);	  	non-compiled	[CE]  variable  cmd  is  already  defined  in  method  parse(Options,String[])	6	None	add
15	[BUG]  [BUGGY]  parse(options,  argument,  null,  false);  [CE]  cannot  find  symbol  argument  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parse(options,  argument,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parse(options,  argument,  null,  false);	      parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol  argument	4	None	replace
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
17	[BUG]  [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  false);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
18	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
19	[BUG]  [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  arguments,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    false);    parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	1	2	add
20	[BUG]  [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  false);  [CE]  cannot  find  symbol  argument  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  parse(options,  argument,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    false);    parse(options,  argument,  null,  false);	  	non-compiled	[CE]  cannot  find  symbol  argument	1	None	add
21	[BUG]  [BUGGY]      parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  false);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  Parse(options,  arguments,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    false);    Parse(options,  arguments,  null,  false);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
22	[BUG]  [BUGGY]  return  parse(options,  arguments,  this,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],Parser,boolean)  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  this,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  this,  true);	  return    parse(options,    arguments,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Parser,boolean)	16	None	replace
23	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  this,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,boolean)  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  this,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  this,  false);	  return    parse(options,    arguments,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Parser,boolean)	16	None	replace
24	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean)  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true);	  return    parse(options,    arguments,    cmd,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean)	13	None	replace
25	[BUG]  [BUGGY]  return  parse(options,  arguments,  options,  cmd,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],Options,CommandLine,boolean)  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  options,  cmd,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  options,  cmd,  false);	  return    parse(options,    arguments,    cmd,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Options,CommandLine,boolean)	13	None	replace
26	[BUG]  [BUGGY]  return  parse(options,  options,  arguments,  cmd,  true);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,boolean)  [FE]                ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  options,  arguments,  cmd,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  options,  arguments,  cmd,  true);	  return    parse(options,    arguments,    cmd,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[],CommandLine,boolean)	13	None	replace
27	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean)  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  null,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  true);	  return    parse(options,    arguments,    cmd,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean)	12	None	replace
28	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean)  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  null,  false);	  return    parse(options,    arguments,    cmd,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,<null>,boolean)	12	None	replace
29	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean)  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  requiredOptions,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  requiredOptions,  false);	  return    parse(options,    arguments,    cmd,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,List,boolean)	12	None	replace
30	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  options,  null,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,<null>,boolean)  [FE]                ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  options,  null,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  options,  null,  false);	  return    parse(options,    arguments,    cmd,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,Options,<null>,boolean)	12	None	replace
31	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(cmd,  arguments);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  options.parse(cmd,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(cmd,  arguments);	      CommandLine    cmd    =    cmd.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
32	[BUG]  [BUGGY]  CommandLine  cmd  =  opts.parse(options,  cmd);  [CE]  cannot  find  symbol  opts  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  opts.parse(options,  cmd);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  opts.parse(options,  cmd);	      CommandLine    cmd    =    cmd.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  opts	17	None	replace
33	[BUG]  [BUGGY]  CommandLine  cmd  =  option.parse(options,  cmd);  [CE]  cannot  find  symbol  option  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  option.parse(options,  cmd);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  option.parse(options,  cmd);	      CommandLine    cmd    =    cmd.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  option	17	None	replace
34	[BUG]  [BUGGY]  CommandLine  cmd  =  options.parse(options,  cmd);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  options.parse(options,  cmd);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  options.parse(options,  cmd);	      CommandLine    cmd    =    cmd.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
35	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  null);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  null);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  null);	      Parser    parser    =    new    Parser(options,    arguments);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	15	None	replace
36	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  options);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  parser  =  new  Parser(options,  options);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  options);	      Parser    parser    =    new    Parser(options,    arguments);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	15	None	replace
37	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  true);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  true);	      Parser    parser    =    new    Parser(options,    arguments);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	15	None	replace
38	[BUG]  [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  false);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  parser  =  new  Parser(options,  arguments,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  parser  =  new  Parser(options,  arguments,  false);	      Parser    parser    =    new    Parser(options,    arguments);    	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	15	None	replace
39	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  false,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  true);	  return    parse(options,    arguments,    null,    true);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean)	11	None	replace
40	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,<null>)  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  true,  false,  null);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  null);	  return    parse(options,    arguments,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,<null>)	14	None	replace
41	[BUG]  [BUGGY]  return  parse(options,  arguments,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)  [FE]                ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  false,  null);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  false,  null);	  return    parse(options,    arguments,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,<null>)	14	None	replace
42	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  true,  true);  [CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)  [FE]                  ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  true,  true,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  true,  true);	  return    parse(options,    arguments,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],boolean,boolean,boolean)	14	None	replace
43	[BUG]  [BUGGY]  Option[]  options  =  options.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[])  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Option[]  options  =  options.getOptions();  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  options  =  options.getOptions();	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[])	18	None	replace
44	[BUG]  [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Option[]  requiredOptions  =  options.getOptions();  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option[]  requiredOptions  =  options.getOptions();	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  incompatible  types	18	None	replace
45	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  parse(options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments);    parse(options,  arguments);	  	compilable	  [FE]  StackOverflowError  	8	2	add
46	[BUG]  [BUGGY]      parse(options,  arguments);  parse(options,  arguments);  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  parse(options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    parse(options,  arguments);	  	compilable	  [FE]  StackOverflowError  	8	2	add
47	[BUG]  [BUGGY]      parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]      StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
48	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
49	[BUG]  [BUGGY]      parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]        StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
50	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
51	[BUG]  [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [FE]  StackOverflowError  [FE]          StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
52	[BUG]  [BUGGY]      parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  LinkedList  <  String>();  }  [CE]  cannot  find  symbol  [FE]            StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  LinkedList  <  String>();  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options  ==  null)  {  parse(options,  arguments);  }  else  {  requiredOptions  =  new  LinkedList  <  String>();  }	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
53	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [CE]  unreachable  statement  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  unreachable  statement	10	None	add
54	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  CommandLine  parse(options,  arguments,  null,  true);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  CommandLine  parse(options,  arguments,  null,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    CommandLine  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  ';'  expected	10	None	add
55	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  Parser  parser  =  getParser();  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  Parser  parser  =  getParser();  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    Parser  parser  =  getParser();	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
56	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  Parser  parser  =  new  Parser(options,  arguments);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  Parser  parser  =  new  Parser(options,  arguments);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    Parser  parser  =  new  Parser(options,  arguments);	  	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	10	None	add
57	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  Parser  parser  =  new  Parser(options);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  Parser  parser  =  new  Parser(options);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    Parser  parser  =  new  Parser(options);	  	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	10	None	add
58	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null);  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  cmd  =  parse(options,  arguments,  null);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  null);	      Parser    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  incompatible  types	5	None	replace
59	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  true);  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  cmd  =  parse(options,  arguments,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  true);	      Parser    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  incompatible  types	5	None	replace
60	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  false);  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  cmd  =  parse(options,  arguments,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  false);	      Parser    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  incompatible  types	5	None	replace
61	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  arguments,  0);  [CE]  no  suitable  method  found  for  parse(Options,String[],int)  [FE]                  ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  cmd  =  parse(options,  arguments,  0);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  arguments,  0);	      Parser    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],int)	5	None	replace
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	3	2	add
63	[BUG]  [BUGGY]      parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  true);  parse(options,  arguments,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    true);    parse(options,  arguments,  null,  true);	  	compilable	  [FE]  ComparisonFailure  	3	2	add
64	[BUG]  [BUGGY]      parse(options,  arguments,  null,  true);  Parser  parse(options,  arguments,  null,  true);  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  true);  Parser  parse(options,  arguments,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    true);    Parser  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  ';'  expected	3	None	add
65	[BUG]  [BUGGY]      parse(options,  arguments,  null,  true);  parse(options,  argument,  null,  true);  [CE]  cannot  find  symbol  argument  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  true);  parse(options,  argument,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    true);    parse(options,  argument,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol  argument	3	None	add
66	[BUG]  [BUGGY]      parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  true);  Parse(options,  arguments,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    true);    Parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
67	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ");  [CE]  missing  return  statement  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Option  option  =  options.getOption( "parse ");  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ");	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  missing  return  statement	18	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments);  [CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Option  option  =  options.getOption( "parse ",  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ",  arguments);	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  method  getOption  in  class  Options  cannot  be  applied  to  given  types;	18	None	replace
69	[BUG]  [BUGGY]  CommandLine  cmd  =  opts.parse(options,  arguments);  [CE]  cannot  find  symbol  opts  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  opts.parse(options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  opts.parse(options,  arguments);	      CommandLine    cmd    =    cmd.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  opts	17	None	replace
70	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  [CE]  missing  return  statement  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }	      parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	4	None	replace
71	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  requiredOptions  =  new  ArrayList  <  String>();  }	      parse(options,    arguments,    null,    true);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
72	[BUG]  [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  requiredOptions.add(options);  }  [CE]  missing  return  statement  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  requiredOptions.add(options);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	if(options  ==  null)  {  parse(options,  arguments,  null,  true);  }  else  {  requiredOptions.add(options);  }	      parse(options,    arguments,    null,    true);    	non-compiled	[CE]  missing  return  statement	4	None	replace
73	[BUG]  [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments);  [CE]  no  suitable  method  found  for  parse(Options,Options,String[])  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Parser  cmd  =  parse(options,  options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Parser  cmd  =  parse(options,  options,  arguments);	      Parser    cmd    =    parse(options,    arguments);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,Options,String[])	5	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption( "parse ").keySet();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Option  option  =  options.getOption( "parse ").keySet();  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Option  option  =  options.getOption( "parse ").keySet();	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(arguments);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
75	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>)  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  false,  null);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  false,  null);	  return    parse(options,    arguments,    cmd,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,<null>)	13	None	replace
76	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
77	[BUG]  [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [FE]  StackOverflowError  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd  =  new  CommandLine();  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
78	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n ");  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	add	        parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n ");  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
79	[BUG]  [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n ");  }  [FE]  StackOverflowError  [FE]      StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n ");  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options!=  null)  {  parse(options,  arguments);  }  else  {  cmd.addArg( "n ");  }	  	compilable	  [FE]  StackOverflowError  	8	2	add
80	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean)  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  null,  true,  false);	  return    parse(options,    arguments,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],<null>,boolean,boolean)	14	None	replace
81	[BUG]  [BUGGY]  return  parse(options,  arguments,  true,  false,  options.length);  [CE]  cannot  find  symbol  length  [FE]                ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  true,  false,  options.length);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  true,  false,  options.length);	  return    parse(options,    arguments,    true,    false);    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
82	[BUG]  [BUGGY]      parse(options,  arguments,  null,  false);  ParseException  parse(options,  arguments,  null,  false);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  ParseException  parse(options,  arguments,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    false);    ParseException  parse(options,  arguments,  null,  false);	  	non-compiled	[CE]  ';'  expected	1	None	add
83	[BUG]  [BUGGY]      parse(options,  arguments,  null,  false);  Parser  parser  =  new  Parser(options);  [CE]  Parser  is  abstract;  cannot  be  instantiated  [FE]      ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  Parser  parser  =  new  Parser(options);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    false);    Parser  parser  =  new  Parser(options);	  	non-compiled	[CE]  Parser  is  abstract;  cannot  be  instantiated	1	None	add
84	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  if(options  ==  null)  {  if(arguments.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  if(options  ==  null)  {  if(arguments.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    if(options  ==  null)  {  if(arguments.length  ==  0)  {  return  parse(options,  arguments,  null,  true);  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
85	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  if(options  ==  null)  {  if(!options.isEmpty())  {  return  parse(options,  arguments,  null,  true);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  if(options  ==  null)  {  if(!options.isEmpty())  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    if(options  ==  null)  {  if(!options.isEmpty())  {  return  parse(options,  arguments,  null,  true);  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
86	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  CommandLine  cmd  =  parse(options,  arguments,  null,  true);  [CE]  unreachable  statement  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  CommandLine  cmd  =  parse(options,  arguments,  null,  true);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    CommandLine  cmd  =  parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  unreachable  statement	10	None	add
87	[BUG]  [BUGGY]  return  parse(options,  arguments,  null,  true);  if(options  ==  null)  {  if(!options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  null,  true);  if(options  ==  null)  {  if(!options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return    parse(options,    arguments,    null,    true);    if(options  ==  null)  {  if(!options.contains(arguments))  {  return  parse(options,  arguments,  null,  true);  }	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
88	[BUG]  [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  Command  line  cmd  =  parse(options,  arguments);  [CE]  ';'  expected  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      CommandLine  cmd  =  parse(options,  arguments);  Command  line  cmd  =  parse(options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        CommandLine    cmd    =    parse(options,    arguments);    Command  line  cmd  =  parse(options,  arguments);	  	non-compiled	[CE]  ';'  expected	6	None	add
89	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  null,  false,  options.toString());  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String)  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  null,  false,  options.toString());  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  null,  false,  options.toString());	  return    parse(options,    arguments,    cmd,    null,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,<null>,boolean,String)	12	None	replace
90	[BUG]  [BUGGY]  return  parse(options,  arguments,  cmd,  true,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean)  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  cmd,  true,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  cmd,  true,  false);	  return    parse(options,    arguments,    true,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],CommandLine,boolean,boolean)	14	None	replace
91	[BUG]  [BUGGY]      parse(options,  arguments,  null,  false);  ParseException.parse(options,  arguments,  null,  false);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  false);  ParseException.parse(options,  arguments,  null,  false);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    false);    ParseException.parse(options,  arguments,  null,  false);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
92	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]          ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.keySet())  {  cmd.addArg(argument);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  options.keySet())  {  cmd.addArg(argument);  }	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
93	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  cmd.keySet())  {  cmd.addArg(argument);  }	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
94	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  paths.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  paths.keySet())  {  cmd.addArg(argument);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  paths.keySet())  {  cmd.addArg(argument);  }	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
95	[BUG]  [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }  [CE]  not  a  statement  [FE]                ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	parent  ==  null  ||  arguments.length  ==  0)  {  for(String  argument  :  parameters.keySet())  {  cmd.addArg(argument);  }	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(argument);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
96	[BUG]  [BUGGY]  return  parse(options,  arguments,  options,  this,  false);  [CE]  no  suitable  method  found  for  parse(Options,String[],Options,Parser,boolean)  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  return  parse(options,  arguments,  options,  this,  false);  [BUGGY]    }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	return  parse(options,  arguments,  options,  this,  false);	  return    parse(options,    arguments,    this,    false);    	non-compiled	[CE]  no  suitable  method  found  for  parse(Options,String[],Options,Parser,boolean)	16	None	replace
97	[BUG]  [BUGGY]      parse(options,  arguments,  null,  true);  ParseException.parse(options,  arguments,  null,  true);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments,  null,  true);  ParseException.parse(options,  arguments,  null,  true);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments,    null,    true);    ParseException.parse(options,  arguments,  null,  true);	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
98	[BUG]  [BUGGY]  this.requiredOptions.addArg(arguments);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  this.requiredOptions.addArg(arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.addArg(arguments);	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(arguments);    }    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
99	[BUG]  [BUGGY]  this.requiredOptions.add(options);  [CE]  missing  return  statement  [FE]              ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  this.requiredOptions.add(options);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	this.requiredOptions.add(options);	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(arguments);    }    	non-compiled	[CE]  missing  return  statement	19	None	replace
100	[BUG]  [BUGGY]  Options  opts  =  options.getOptions();  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  Options  opts  =  options.getOptions();  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	Options  opts  =  options.getOptions();	      if(options    ==    null)    {    for(String    argument    :    options.keySet())    {    cmd.addArg(arguments);    }    	non-compiled	[CE]  incompatible  types	19	None	replace
101	[BUG]  [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  false);  }  [CE]  illegal  start  of  expression  [FE]    StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  false);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments,  null,  false);  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
102	[BUG]  [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  cmd.append('n');  }  [CE]  illegal  start  of  expression  [FE]      StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  cmd.append('n');  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  cmd.append('n');  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
103	[BUG]  [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments[i]);  }  [CE]  illegal  start  of  expression  [FE]        StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments[i]);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments[i]);  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
104	[BUG]  [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments);  }  [CE]  illegal  start  of  expression  [FE]          StackOverflowError    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]      parse(options,  arguments);  if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments);  }  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	        parse(options,    arguments);    if(options!=  null)  {  for(int  i  =  0;  i  <  arguments.length;  ++i)  {  parse(options,  arguments);  }	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
105	[BUG]  [BUGGY]  CommandLine  cmd  =  option.parse(options,  arguments);  [CE]  cannot  find  symbol  option  [FE]        ComparisonFailure    [CONTEXT]    public  CommandLine  parse(Options  options,  String[]  arguments)  throws  ParseException  {    [BUGGY]  CommandLine  cmd  =  option.parse(options,  arguments);  [BUGGY]    return  parse(options,  arguments,  null,  false);  }  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  [VARIABLES]  Options  options  opts  CommandLine  cmd  List  requiredOptions  String[]  arguments  boolean  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	71	71	2	replace	CommandLine  cmd  =  option.parse(options,  arguments);	      CommandLine    cmd    =    cmd.parse(options,    arguments);    	non-compiled	[CE]  cannot  find  symbol  option	17	None	replace
