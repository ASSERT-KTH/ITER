bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  RequiredOptions  cmd  =  options.getRequiredOptions();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]  RequiredOptions  cmd  =  options.getRequiredOptions();  [BUGGY]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	RequiredOptions  cmd  =  options.getRequiredOptions();	requiredOptions  =  options.getRequiredOptions();  	non-compiled	[CE]  cannot  find  symbol	14	None	replace
2	[BUG]  [BUGGY]  requiredOptions  =  opt.getRequiredOptions();  [CE]  cannot  find  symbol  opt  [FE]      ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]  requiredOptions  =  opt.getRequiredOptions();  [BUGGY]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	requiredOptions  =  opt.getRequiredOptions();	requiredOptions  =  options.getRequiredOptions();  	non-compiled	[CE]  cannot  find  symbol  opt	14	None	replace
3	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    [BUGGY]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	add	  	requiredOptions  =  options.getRequiredOptions();  	compilable	  [FE]  NullPointerException  	14	2	replace
4	[BUG]  [BUGGY]    [FE]  NullPointerException  [FE]        ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    [BUGGY]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	  	requiredOptions  =  options.getRequiredOptions();  	compilable	  [FE]  NullPointerException  	14	2	replace
5	[BUG]  [BUGGY]    Option[]  options  =  opt.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]    ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option[]  options  =  opt.getOptions();  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option[]  options  =  opt.getOptions();		non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	15	None	add
6	[BUG]  [BUGGY]    Option  options  =  opt.getOptions();  [CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)  [FE]      ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option  options  =  opt.getOptions();  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option  options  =  opt.getOptions();		non-compiled	[CE]  variable  options  is  already  defined  in  method  parse(Options,String[],Properties,boolean)	15	None	add
7	[BUG]  [BUGGY]    Option  option  =  opt.getOption(t);  [CE]  cannot  find  symbol  t  [FE]        ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option  option  =  opt.getOption(t);  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option  option  =  opt.getOption(t);		non-compiled	[CE]  cannot  find  symbol  t	15	None	add
8	[BUG]  [BUGGY]    Option  option  =  opt.getOption();  [CE]  cannot  find  symbol  opt  [FE]          ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option  option  =  opt.getOption();  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option  option  =  opt.getOption();		non-compiled	[CE]  cannot  find  symbol  opt	15	None	add
9	[BUG]  [BUGGY]    Option  option  =  options.getOption(t);  [CE]  cannot  find  symbol  t  [FE]            ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option  option  =  options.getOption(t);  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option  option  =  options.getOption(t);		non-compiled	[CE]  cannot  find  symbol  t	15	None	add
10	[BUG]  [BUGGY]    Option  option  =  options.getOption(opt);  [CE]  cannot  find  symbol  opt  [FE]    ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option  option  =  options.getOption(opt);  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option  option  =  options.getOption(opt);		non-compiled	[CE]  cannot  find  symbol  opt	15	None	add
11	[BUG]  [BUGGY]    Option  option  =  opt.getOption(this.options);  [CE]  cannot  find  symbol  opt  [FE]      ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option  option  =  opt.getOption(this.options);  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option  option  =  opt.getOption(this.options);		non-compiled	[CE]  cannot  find  symbol  opt	15	None	add
12	[BUG]  [BUGGY]  requiredOptions  =  options.getRequiredOptions(opt);  [CE]  cannot  find  symbol  opt  [FE]    ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]  requiredOptions  =  options.getRequiredOptions(opt);  [BUGGY]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	requiredOptions  =  options.getRequiredOptions(opt);	requiredOptions  =  options.getRequiredOptions();  	non-compiled	[CE]  cannot  find  symbol  opt	14	None	replace
13	[BUG]  [BUGGY]    Option  cmd  =  options.getCmd();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]    Option  cmd  =  options.getCmd();  [BUGGY]  requiredOptions  =  options.getRequiredOptions();  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	    Option  cmd  =  options.getCmd();		non-compiled	[CE]  cannot  find  symbol	15	None	add
14	[BUG]  [BUGGY]  RequiredOptions  options  =  options.getRequiredOptions();  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  {  this.options  =  options;  for  (Iterator  it  =  options.helpOptions().iterator();  it.hasNext();)  {  Option  opt  =  (Option)  it.next();  opt.clearValues();  }  [BUGGY]  RequiredOptions  options  =  options.getRequiredOptions();  [BUGGY]  cmd  =  new  CommandLine();  boolean  eatTheRest  =  false;  if  (arguments  ==  null)  {  arguments  =  new  String[0];  }  List  tokenList  =  Arrays.asList(flatten(this.options,  [CLASS]  Parser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  opts  CommandLine  cmd  boolean  eatTheRest  stopAtNonOption  Iterator  it  List  requiredOptions  tokenList  Option  opt  String[]  arguments  String  str  t  Properties  properties  ListIterator  iterator  	projects/Cli4/src/java/org/apache/commons/cli/Parser.java	1.0	143	143	2	replace	RequiredOptions  options  =  options.getRequiredOptions();	requiredOptions  =  options.getRequiredOptions();  	non-compiled	[CE]  cannot  find  symbol	14	None	replace
