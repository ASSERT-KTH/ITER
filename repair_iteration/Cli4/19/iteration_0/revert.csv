projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iteratoriter=requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iteratoriter=this.requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iteratoriter=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iteratoriter=cmd.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297List<String>requiredOptions=newArrayList<String>(requiredOptions.size());
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iterator<String>requiredOptions=requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297List<String>requiredOptions=newArrayList<String>(requiredOptions.size()+1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297List<String>requiredOptions=newArrayList<String>();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iterator<String>requiredOptions=options.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iteratoriter=selectedOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Collections.sort(requiredOptions);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297List<String>requiredOptions=options.get(requiredOptions.size()-1);
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iteratoriter=neededOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iteratoriter=parameters.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297Iterator<String>iter=requiredOptions.iterator();
projects/Cli4/src/java/org/apache/commons/cli/Parser.java297if(requiredOptions.size()>0){requiredOptions.clear();}
