bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getDelimiter(),  value,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  value,  offset  +  len);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  out.append(format.getName(),  value);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getName(),  value);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getName(),  value);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  value,  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getDelimiter(),  value,  offset);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  value,  offset);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  out.append(format.getRecord(),  value);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecord(),  value);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  value);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getDelimiter(),  value);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  value);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  out.append(format.getRecordType(),  value);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordType(),  value);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  value);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  format);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getDelimiter(),  format);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  format);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  out.append(value.getRecordValue());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getRecordValue());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordValue());	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  out.append(object.getRecordValue());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getRecordValue());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordValue());	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordValue(),  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  len);	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  out.append(format.getRecordValue()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordValue()  +  1);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  +  1);	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  value);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordValue(),  value);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  value);	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
13	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value,  offset,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset,  offset  +  len);	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
14	[BUG]  [BUGGY]  out.append(object,  offset  +  len);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset  +  len);	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
15	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object,  offset,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  offset  +  len);	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset  +  len);  }	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  value,  offset,  len);  }  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  value,  offset,  len);  }	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  out.append(value.getRecord());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getRecord());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecord());	  out.append(format.getRecord());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  out.append(object.getRecord());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getRecord());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecord());	  out.append(format.getRecord());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
22	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecord(),  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  len);	  out.append(format.getRecord());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
23	[BUG]  [BUGGY]  out.append(this.format.getRecord());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(this.format.getRecord());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecord());	  out.append(format.getRecord());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
24	[BUG]  [BUGGY]  out.append(format.getRecord()).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecord()).append('n');  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()).append('n');	  out.append(format.getRecord());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
25	[BUG]  [BUGGY]  out.append(object.getName());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getName());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getName());	  out.append(format.getName());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  out.append(value.getName());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getName());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getName());	  out.append(format.getName());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  out.append(this.format.getName());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(this.format.getName());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getName());	  out.append(format.getName());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  out.append(object.getClass());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getClass());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass());	  out.append(format.getName());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
29	[BUG]  [BUGGY]  out.append(object.toString());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.toString());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString());	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  out.append(value.toString(),  offset  +  len);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.toString(),  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  offset  +  len);	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  out.append(value.toString()).append('n');  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.toString()).append('n');  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append('n');	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
32	[BUG]  [BUGGY]  out.append(value.toString(),  value.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.toString(),  value.toCharArray());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  value.toCharArray());	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  out.append(value.toString()).append( "n ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.toString()).append( "n ");  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append( "n ");	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
34	[BUG]  [BUGGY]  print(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  print(object,  value,  offset,  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset,  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  printAndQuote(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndQuote(object,  value,  offset,  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  value,  offset,  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  printAndRecord(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndRecord(object,  value,  offset,  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  value,  offset,  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndEscape(object,  offset,  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  printAndRecord(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndRecord(object,  offset,  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  printAndQuote(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndQuote(object,  offset,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  offset  +  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndQuote(object,  offset,  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  out.append(value.getValue());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getValue());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getValue());	  out.append(value.getDelimiter());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  out.append(value.getText());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getText());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getText());	  out.append(value.getDelimiter());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  out.append(object.getValue());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getValue());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getValue());	  out.append(object.getDelimiter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
44	[BUG]  [BUGGY]  out.append(object.getClass().getName());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getClass().getName());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getName());	  out.append(object.getDelimiter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  out.append(value.getRecordType());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getRecordType());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordType());	  out.append(format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
46	[BUG]  [BUGGY]  out.append(object.getRecordType());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getRecordType());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordType());	  out.append(format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordType(),  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset  +  len);	  out.append(format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  out.append(format.getRecordType()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordType()  +  1);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  +  1);	  out.append(format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
49	[BUG]  [BUGGY]  out.append(this.format.getRecordType());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(this.format.getRecordType());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecordType());	  out.append(format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset  +  len);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.getDelimiter(),  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset  +  len);	  out.append(value.getDelimiter());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
51	[BUG]  [BUGGY]  out.append(format.toString());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.toString());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.toString());	  out.append(format.getName());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
53	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  out.append(format.getRecord()  +  offset);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecord()  +  offset);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()  +  offset);	  out.append(format.getRecord());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  out.append(format.getIndex(),  value);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getIndex(),  value);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getIndex(),  value);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  out.append(format.getRecordType()  +  offset);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordType()  +  offset);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  +  offset);	  out.append(format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  out.append(format.getRecordName());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordName());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordName());	  out.append(format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  print(object,  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  print(object,  value,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset  +  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.length);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndQuote(object,  offset,  len,  value.length);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.length);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  out.append(format.getRecordValue()  +  offset);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordValue()  +  offset);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  +  offset);	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  out.append(format.getRecordValue()  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getRecordValue()  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  +  len);	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  out.append(value,  offset+ln);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value,  offset+ln);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset+ln);	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
63	[BUG]  [BUGGY]  out.append(value.toString()  +  offset);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value.toString()  +  offset);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()  +  offset);	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
64	[BUG]  [BUGGY]  out.append(value);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value);	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
65	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getDelimiter(),  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset  +  len);	  out.append(object.getDelimiter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
66	[BUG]  [BUGGY]  out.append(object.getText());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object.getText());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getText());	  out.append(object.getDelimiter());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
67	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  object);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(format.getDelimiter(),  object);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  object);	  out.append(format.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndEscape(object,  offset,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  printAndRecord(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndRecord(object,  offset,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  offset  +  len);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.toString());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
71	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.intValue());	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
72	[BUG]  [BUGGY]  appendable.append(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  appendable.append(object,  offset,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.append(object,  offset,  offset  +  len);	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
73	[BUG]  [BUGGY]  out.append(object);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object);	  out.append(value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
74	[BUG]  [BUGGY]  out.append(object,  value.toString());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(object,  value.toString());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.toString());	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
75	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object),  offset,  offset  +  len);	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
76	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len);  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object),  offset,  len);	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
77	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(value,  offset,  len));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(ObjectUtilities.toString(value,  offset,  len));  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(value,  offset,  len));	  out.append(value.toString());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
78	[BUG]  [BUGGY]  out.append(value,  format.getRecordValue());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {    [BUGGY]  out.append(value,  format.getRecordValue());  [BUGGY]    }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.getRecordValue());	  out.append(format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
