bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset  +  len);  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  out.append(value,  offset,  offset  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  offset,  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset,  offset  +  1);	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset,  len);  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
6	[BUG]  [BUGGY]  out.append(value.toString()).append( ", ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append( ", ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append( ", ");	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
7	[BUG]  [BUGGY]  out.append(object.toString()).append( "null ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString()).append( "null ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString()).append( "null ");	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
8	[BUG]  [BUGGY]  out.append(value.toString()).append( "   ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append( "   ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append( "   ");	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
9	[BUG]  [BUGGY]  out.append(value.toString()).append( ",  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append( ",  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append( ",  newRecord);	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
10	[BUG]  [BUGGY]  out.append(value.toString()).append( "  - ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append( "  - ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append( "  - ");	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
11	[BUG]  [BUGGY]  out.append(format.getName(),  object);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getName(),  object);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getName(),  object);	  out.append(format.getDelimiter(),    object);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
12	[BUG]  [BUGGY]  out.append(format.getRecord(),  object);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  object);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  object);	  out.append(format.getDelimiter(),    object);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
13	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  object,  offset);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getDelimiter(),  object,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  object,  offset);	  out.append(format.getDelimiter(),    object);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
14	[BUG]  [BUGGY]  out.append(format.getRecordType(),  object);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  object);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  object);	  out.append(format.getDelimiter(),    object);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
15	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  object);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  object);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  object);	  out.append(format.getDelimiter(),    object);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
16	[BUG]  [BUGGY]  out.append(format.getInput(),  object);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getInput(),  object);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getInput(),  object);	  out.append(format.getDelimiter(),    object);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
17	[BUG]  [BUGGY]  out.append(object.toString()).append('n');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString()).append('n');	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
18	[BUG]  [BUGGY]  out.append(value.toString()).append('n',  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append('n',  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append('n',  len);	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
19	[BUG]  [BUGGY]  out.append(value.getClass()).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getClass()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getClass()).append('n');	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
20	[BUG]  [BUGGY]  out.append(value.toString()).append('N');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append('N');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append('N');	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
21	[BUG]  [BUGGY]  out.append(value.toString()).append('n',  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append('n',  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append('n',  offset  +  len);	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
22	[BUG]  [BUGGY]  print(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  offset,  len);	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
23	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len,  value);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len,  value);	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
24	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len,  newRecord);	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
25	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len,  value.toString());  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len,  value.toString());	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
26	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len,  value.intValue());	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
27	[BUG]  [BUGGY]  printAndEscape(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  value,  offset,  len);	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
28	[BUG]  [BUGGY]  appendable.append(object,  offset,  offset  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  appendable.append(object,  offset,  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.append(object,  offset,  offset  +  1);	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
29	[BUG]  [BUGGY]  appendable.append(object,  offset,  offset  +  len  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  appendable.append(object,  offset,  offset  +  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.append(object,  offset,  offset  +  len  -  1);	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
30	[BUG]  [BUGGY]  Appendable  out.append(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out.append(object,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out.append(object,  offset,  offset  +  len);	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
31	[BUG]  [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
32	[BUG]  [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(value,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(value,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(value,  offset,  len);  }	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
33	[BUG]  [BUGGY]  appendable.append(object,  offset,  offset  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  appendable.append(object,  offset,  offset  +  2);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.append(object,  offset,  offset  +  2);	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
34	[BUG]  [BUGGY]  out.append(object.getClass().getSimpleName());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass().getSimpleName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getSimpleName());	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
35	[BUG]  [BUGGY]  out.append(object.getClass().getName(),  value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass().getName(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getName(),  value);	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
36	[BUG]  [BUGGY]  out.append(object.getClass().getName()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass().getName()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getName()  +  1);	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
37	[BUG]  [BUGGY]  out.append(object.getClass().getName(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass().getName(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getName(),  offset  +  len);	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
38	[BUG]  [BUGGY]  out.append(object.getClass().getName()  + ",  newRecord ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass().getName()  + ",  newRecord ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getName()  + ",  newRecord ");	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
39	[BUG]  [BUGGY]  out.append(value.getClass().getName());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getClass().getName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getClass().getName());	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
40	[BUG]  [BUGGY]  out.append(this.format.getRecordType(),  value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecordType(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecordType(),  value);	  out.append(this.format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
41	[BUG]  [BUGGY]  out.append(this.format.getRecordType()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecordType()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecordType()  +  1);	  out.append(this.format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
42	[BUG]  [BUGGY]  out.append(this.format.getRecordValue());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecordValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecordValue());	  out.append(this.format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
43	[BUG]  [BUGGY]  out.append(object.getName(),  value);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getName(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getName(),  value);	  out.append(object.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  value,  offset  +  len);	  out.append(object.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  value,  offset);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  value,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  value,  offset);	  out.append(object.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  out.append(object.getRecord(),  value);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecord(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecord(),  value);	  out.append(object.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset,  len);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset,  len);	  out.append(object.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  out.append(value.getName(),  offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getName(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getName(),  offset  +  len);	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
49	[BUG]  [BUGGY]  out.append(value.getRecord(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecord(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecord(),  offset  +  len);	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
50	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset  +  len,  newRecord);	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
51	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset  +  len,  value.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  offset  +  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset  +  len,  value.length);	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
52	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset  +  1);	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
53	[BUG]  [BUGGY]  printAndRecord(object,  offset,  len,  value);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  len,  value);	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
54	[BUG]  [BUGGY]  printAndRecord(object,  offset,  value.length);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  value.length);	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
55	[BUG]  [BUGGY]  printAndRecord(object,  offset,  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  len,  value.intValue());	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
56	[BUG]  [BUGGY]  printAndRecord(object,  offset,  len,  value.toString());  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  len,  value.toString());	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
57	[BUG]  [BUGGY]  printAndRecord(object,  offset,  value);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  value);	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
58	[BUG]  [BUGGY]  out.append(format.getRecordValue()  /  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  /  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  /  1);	  out.append(format.getRecordValue()    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  out.append(format.getRecordValue()).append('n');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()).append('n');	  out.append(format.getRecordValue()    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  print(object,  offset,  len,  value.length);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  offset,  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  offset,  len,  value.length);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
61	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.length  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.length  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.length  -  1);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
62	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.length  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.length  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.length  +  1);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
63	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len,  value.length);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len,  value.length);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
64	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.length,  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.length,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.length,  newRecord);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
65	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.length,  format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.length,  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.length,  format);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
66	[BUG]  [BUGGY]  out.append(object.getRecordType(),  value);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordType(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordType(),  value);	  out.append(format.getRecordType(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
67	[BUG]  [BUGGY]  out.append(format.getRecordType(),  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  value,  offset  +  len);	  out.append(format.getRecordType(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
68	[BUG]  [BUGGY]  out.append(format.getRecordType(),  value,  offset);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  value,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  value,  offset);	  out.append(format.getRecordType(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
69	[BUG]  [BUGGY]  out.append(value.getRecordType(),  format);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordType(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordType(),  format);	  out.append(format.getRecordType(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
70	[BUG]  [BUGGY]  out.append(object.getIndex(),  value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getIndex(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getIndex(),  value);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
71	[BUG]  [BUGGY]  out.append(format.getIndex(),  value,  offset);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getIndex(),  value,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getIndex(),  value,  offset);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
72	[BUG]  [BUGGY]  out.append(format.getIndex(),  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getIndex(),  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getIndex(),  value,  offset  +  len);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
73	[BUG]  [BUGGY]  out.append(value.getIndex(),  value);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getIndex(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getIndex(),  value);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
74	[BUG]  [BUGGY]  out.append(object.getIndex(),  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getIndex(),  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getIndex(),  len);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
75	[BUG]  [BUGGY]  out.append(format.getIndex(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getIndex(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getIndex(),  offset  +  len);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
76	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset,  offset  +  len);	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
77	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  len,  value);	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
78	[BUG]  [BUGGY]  out.append(value.getRecordValue(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordValue(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordValue(),  offset  +  len);	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
79	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  1);	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
80	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value.length);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  len,  value.length);	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
81	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  1,  len);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset  +  1,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  1,  len);	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
82	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  len,  newRecord);	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
83	[BUG]  [BUGGY]  out.append(object.getValue(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getValue(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getValue(),  offset  +  len);	  out.append(object.getValue());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
84	[BUG]  [BUGGY]  out.append(object.getValue()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getValue()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getValue()  +  1);	  out.append(object.getValue());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
85	[BUG]  [BUGGY]  out.append(value.getRecordName());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordName());	  out.append(format.getRecordName());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
86	[BUG]  [BUGGY]  out.append(object.getRecordName());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordName());	  out.append(format.getRecordName());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
87	[BUG]  [BUGGY]  out.append(format.getRecordName(),  value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordName(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordName(),  value);	  out.append(format.getRecordName());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
88	[BUG]  [BUGGY]  out.append(format.getRecordName()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordName()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordName()  +  1);	  out.append(format.getRecordName());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
89	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.format.clone();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)this.format.clone();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)this.format.clone();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
90	[BUG]  [BUGGY]  Appendable  out  =(Appendable)newRecord.clone();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)newRecord.clone();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)newRecord.clone();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
91	[BUG]  [BUGGY]  Appendable  out  =(Appendable)object.clone();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)object.clone();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)object.clone();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
92	[BUG]  [BUGGY]  Appendable  out  =(Appendable)super.print(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)super.print(object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)super.print(object,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
93	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.format.getObject();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)this.format.getObject();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)this.format.getObject();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
94	[BUG]  [BUGGY]  Appendable  out  =(Appendable)super.print(object,  offset,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)super.print(object,  offset,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)super.print(object,  offset,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
95	[BUG]  [BUGGY]  Appendable  out  =(Appendable)value.clone();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)value.clone();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)value.clone();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
96	[BUG]  [BUGGY]  out.append(value.getText(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getText(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getText(),  offset  +  len);	  out.append(value.getText());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
97	[BUG]  [BUGGY]  out.append(value.getText()  +  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getText()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getText()  +  offset);	  out.append(value.getText());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
98	[BUG]  [BUGGY]  out.append(value.getText(),  offset);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getText(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getText(),  offset);	  out.append(value.getText());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
99	[BUG]  [BUGGY]  out.append(value.getText()).append('n');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getText()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getText()).append('n');	  out.append(value.getText());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
100	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object),  offset,  offset  +  len,  newRecord);	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
101	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object,  offset,  offset  +  len);	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
102	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object),  offset,  offset  +  len,  value);	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
103	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object),  value,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object),  value,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object),  value,  offset,  offset  +  len);	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
104	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object),  offset,  offset  +  1);	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
105	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object,  offset,  offset  +  len));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object,  offset,  offset  +  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object,  offset,  offset  +  len));	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
106	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object,  offset,  len));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(object,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object,  offset,  len));	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
107	[BUG]  [BUGGY]  append(ObjectUtilities.toString(object,  offset,  len));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  append(ObjectUtilities.toString(object,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	append(ObjectUtilities.toString(object,  offset,  len));	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
108	[BUG]  [BUGGY]  if(!newRecord)  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(!newRecord)  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(!newRecord)  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
109	[BUG]  [BUGGY]  if(newRecord)  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
110	[BUG]  [BUGGY]  if(format.isEscaping())  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(format.isEscaping())  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(format.isEscaping())  {  out.append(ObjectUtilities.toString(value,  offset,  len));  }	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
111	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(value,  offset,  len),  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(value,  offset,  len),  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(value,  offset,  len),  newRecord);	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
112	[BUG]  [BUGGY]  out.append(object,  offset,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  len);	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
113	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  printAndEscape(object,  offset  +  len,  value.length);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  printAndEscape(object,  offset  +  len,  value.length);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  printAndEscape(object,  offset  +  len,  value.length);  }	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
114	[BUG]  [BUGGY]  out.append(object,  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset  +  len,  value);	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
115	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
116	[BUG]  [BUGGY]  out.append(object.toString(),  offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString(),  offset  +  len);	  out.append(object.toString());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
117	[BUG]  [BUGGY]  out.append(object.toString(),  value);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString(),  value);	  out.append(object.toString());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
118	[BUG]  [BUGGY]  print(object,  value,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset,  len,  newRecord);	  print(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
119	[BUG]  [BUGGY]  print(object,  value,  offset,  len,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset,  len,  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset,  len,  format);	  print(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
120	[BUG]  [BUGGY]  print(object,  value,  offset,  len  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset,  len  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset,  len  +  1);	  print(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
121	[BUG]  [BUGGY]  print(object,  value,  offset,  len,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset,  len,  false);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset,  len,  false);	  print(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
122	[BUG]  [BUGGY]  print(object,  value,  offset,  len  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset,  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset,  len  -  1);	  print(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
123	[BUG]  [BUGGY]  print(object,  value,  offset,  len,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset,  len,  0);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset,  len,  0);	  print(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
124	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value);	  printAndQuote(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
125	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.toString());  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.toString());	  printAndQuote(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
126	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.intValue());	  printAndQuote(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
127	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  newRecord);	  printAndQuote(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
128	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getDelimiter(),  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  value,  offset,  len);	  out.append(format.getDelimiter(),    value,    offset);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
129	[BUG]  [BUGGY]  out.append(format.getName(),  value,  offset);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getName(),  value,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getName(),  value,  offset);	  out.append(format.getDelimiter(),    value,    offset);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
130	[BUG]  [BUGGY]  out.append(format.getRecord(),  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value,  offset,  len);	  out.append(format.getDelimiter(),    value,    offset);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
131	[BUG]  [BUGGY]  out.append(format.getRecord(),  value,  offset);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  value,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value,  offset);	  out.append(format.getDelimiter(),    value,    offset);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
132	[BUG]  [BUGGY]  out.append(format.getName(),  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getName(),  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getName(),  value,  offset,  len);	  out.append(format.getDelimiter(),    value,    offset);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
133	[BUG]  [BUGGY]  out.append(object.getText(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getText(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getText(),  offset  +  len);	  out.append(object.getText());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
134	[BUG]  [BUGGY]  out.append(object.getText(),  value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getText(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getText(),  value);	  out.append(object.getText());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
135	[BUG]  [BUGGY]  out.append(object.getText()  +  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getText()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getText()  +  offset);	  out.append(object.getText());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
136	[BUG]  [BUGGY]  out.append(object.getName(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getName(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getName(),  offset  +  len);	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
137	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset  +  len,  value);	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
138	[BUG]  [BUGGY]  out.append(object.getRecord(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecord(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecord(),  offset  +  len);	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
139	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value.length);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset  +  len,  value.length);	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
140	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset  +  1,  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  offset  +  1,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset  +  1,  len);	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
141	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset  +  1);	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
142	[BUG]  [BUGGY]  out.append(value.getClass());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getClass());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getClass());	  out.append(object.getClass());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
143	[BUG]  [BUGGY]  out.append(object.getRawClass());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRawClass());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRawClass());	  out.append(object.getClass());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
144	[BUG]  [BUGGY]  out.append(object.getSimpleName());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getSimpleName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getSimpleName());	  out.append(object.getClass());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
145	[BUG]  [BUGGY]  out.append(format.getRecordType()  +  offset,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()  +  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  +  offset,  len);	  out.append(format.getRecordType()    +    offset);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
146	[BUG]  [BUGGY]  out.append(format.getRecordType()  /  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()  /  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  /  offset);	  out.append(format.getRecordType()    +    offset);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
147	[BUG]  [BUGGY]  out.append(format.getRecordType()  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  +  len);	  out.append(format.getRecordType()    +    offset);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
148	[BUG]  [BUGGY]  out.append(format.getRecordType()  -  offset);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()  -  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  -  offset);	  out.append(format.getRecordType()    +    offset);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
149	[BUG]  [BUGGY]  out.append(value.getRecordType()  +  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordType()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordType()  +  offset);	  out.append(format.getRecordType()    +    offset);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
150	[BUG]  [BUGGY]  out.append(object.getRecordType()  +  offset);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordType()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordType()  +  offset);	  out.append(format.getRecordType()    +    offset);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
151	[BUG]  [BUGGY]  append(value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  append(value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	append(value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
152	[BUG]  [BUGGY]  out.append(value.getRecord()).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecord()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecord()).append('n');	  out.append(format.getRecord()).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
153	[BUG]  [BUGGY]  out.append(format.getRecord()).append('N');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()).append('N');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()).append('N');	  out.append(format.getRecord()).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
154	[BUG]  [BUGGY]  out.append(format.getRecord()).append('n',  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()).append('n',  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()).append('n',  len);	  out.append(format.getRecord()).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
155	[BUG]  [BUGGY]  out.append(object.getRecord()).append('n');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecord()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecord()).append('n');	  out.append(format.getRecord()).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
156	[BUG]  [BUGGY]  out.append(this.format.getRecord(),  value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecord(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecord(),  value);	  out.append(this.format.getRecord());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
157	[BUG]  [BUGGY]  if(this.format!=  null)  {  out.append(this.format.getRecord());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(this.format!=  null)  {  out.append(this.format.getRecord());  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(this.format!=  null)  {  out.append(this.format.getRecord());  }	  out.append(this.format.getRecord());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
158	[BUG]  [BUGGY]  if(this.format!=  null)  {  out.append(this.format.getRecord());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(this.format!=  null)  {  out.append(this.format.getRecord());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(this.format!=  null)  {  out.append(this.format.getRecord());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(this.format.getRecord());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
159	[BUG]  [BUGGY]  if(this.format!=  null)  {  out.append(this.format.getRecord());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(this.format!=  null)  {  out.append(this.format.getRecord());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(this.format!=  null)  {  out.append(this.format.getRecord());  }  else  {  throw  new  IllegalStateException( " ");  }	  out.append(this.format.getRecord());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
160	[BUG]  [BUGGY]  out.append(object.getRecordType(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordType(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordType(),  offset  +  len);	  out.append(object.getRecordType());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
161	[BUG]  [BUGGY]  out.append(object.getRecordType()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordType()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordType()  +  1);	  out.append(object.getRecordType());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
162	[BUG]  [BUGGY]  out.append(format.getRecordValue()  /  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  /  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  /  len);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
163	[BUG]  [BUGGY]  out.append(value.getRecordValue()  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordValue()  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordValue()  +  len);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
164	[BUG]  [BUGGY]  out.append(format.getRecordValue()  +  offset,  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  +  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  +  offset,  len);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
165	[BUG]  [BUGGY]  out.append(format.getRecordValue()  *  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  *  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  *  len);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
166	[BUG]  [BUGGY]  out.append(object.getRecordValue()  +  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordValue()  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordValue()  +  len);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
167	[BUG]  [BUGGY]  out.append(format.getRecordValue()  -  len);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  -  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  -  len);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
168	[BUG]  [BUGGY]  append(object,  format.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  append(object,  format.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	append(object,  format.toString());	  out.append(format.toString());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
169	[BUG]  [BUGGY]  append(object.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  append(object.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	append(object.toString());	  out.append(format.toString());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
170	[BUG]  [BUGGY]  out.append(format.toString(),  value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.toString(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.toString(),  value);	  out.append(format.toString());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
171	[BUG]  [BUGGY]  print(object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  offset,  offset  +  len);	  printAndEscape(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
172	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value);	  printAndEscape(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
173	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  newRecord);	  printAndEscape(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
174	[BUG]  [BUGGY]  printAndEscape(object,  offset,  value.length  +  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  value.length  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  value.length  +  len);	  printAndEscape(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
175	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  format);	  printAndEscape(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
176	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset,  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  offset  +  1);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
177	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(value,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(value,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(value,  offset,  len);  }	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
178	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
179	[BUG]  [BUGGY]  out.append(object,  offset,  offset  +  len  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset,  offset  +  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  offset  +  len  -  1);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
180	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  System.arraycopy(value,  offset,  value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  System.arraycopy(value,  offset,  value,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  System.arraycopy(value,  offset,  value,  offset  +  len);  }	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
181	[BUG]  [BUGGY]  out.append(object.toString(),  value.toCharArray());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString(),  value.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString(),  value.toCharArray());	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
182	[BUG]  [BUGGY]  out.append(value.toString(),  value.toCharArray()  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  value.toCharArray()  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  value.toCharArray()  +  len);	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
183	[BUG]  [BUGGY]  out.append(value.toString(),  value.toCharArray()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  value.toCharArray()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  value.toCharArray()  +  1);	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
184	[BUG]  [BUGGY]  out.append(value.toCharArray(),  value.toCharArray());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toCharArray(),  value.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toCharArray(),  value.toCharArray());	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
185	[BUG]  [BUGGY]  append(value.toString(),  value.toCharArray());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  append(value.toString(),  value.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	append(value.toString(),  value.toCharArray());	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
186	[BUG]  [BUGGY]  out.append(value.getClass().getName(),  value.toCharArray());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getClass().getName(),  value.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getClass().getName(),  value.toCharArray());	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
187	[BUG]  [BUGGY]  out.append(value,  object.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  object.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  object.toString());	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
188	[BUG]  [BUGGY]  out.append(object,  value.toString(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.toString(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.toString(),  offset  +  len);	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
189	[BUG]  [BUGGY]  out.append(object,  value.toString(),  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.toString(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.toString(),  offset);	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
190	[BUG]  [BUGGY]  out.append(object,  value.toString(),  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.toString(),  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.toString(),  len);	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
191	[BUG]  [BUGGY]  out.append(object,  value.toString()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.toString()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.toString()  +  1);	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
192	[BUG]  [BUGGY]  out.append(object,  value.toString()  +  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.toString()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.toString()  +  offset);	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
193	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append('n');	  out.append(object);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
194	[BUG]  [BUGGY]  out.append( "n ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append( "n ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append( "n ");	  out.append(object);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
195	[BUG]  [BUGGY]  out.append(object,  0,  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  0,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  0,  len);	  out.append(object);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
196	[BUG]  [BUGGY]  out.append( ", ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append( ", ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append( ", ");	  out.append(object);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
197	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object),  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(object),  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object),  value,  offset,  len);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
198	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(value),  offset,  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(value),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(value),  offset,  len);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
199	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len,  value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object),  offset,  len,  value);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
200	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object),  offset,  len  +  1);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
201	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object),  offset,  offset  +  len);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
202	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object),  offset,  len,  newRecord);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
203	[BUG]  [BUGGY]  print(object,  offset,  offset  +  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  offset,  offset  +  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  offset,  offset  +  len,  value.intValue());	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
204	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  format.intValue());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  format.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  format.intValue());	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
205	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  true);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  true);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  true);	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
206	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  format);	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
207	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  false);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  false);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  false);	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
208	[BUG]  [BUGGY]  out.append(this.format.getRecordName());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecordName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecordName());	  out.append(this.format.getName());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
209	[BUG]  [BUGGY]  out.append(this.format.getName(),  value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getName(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getName(),  value);	  out.append(this.format.getName());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
210	[BUG]  [BUGGY]  out.append(this.format.getSimpleName());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getSimpleName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getSimpleName());	  out.append(this.format.getName());    	non-compiled	[CE]  <identifier>  expected	27	None	replace
211	[BUG]  [BUGGY]  print(object,  value,  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset  +  len,  newRecord);	  print(object,    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
212	[BUG]  [BUGGY]  print(object,  value,  offset  +  len,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset  +  len,  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset  +  len,  format);	  print(object,    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
213	[BUG]  [BUGGY]  print(object,  offset,  value.length  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  offset,  value.length  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  offset,  value.length  +  len);	  print(object,    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
214	[BUG]  [BUGGY]  print(object,  value,  offset  +  len,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset  +  len,  false);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset  +  len,  false);	  print(object,    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
215	[BUG]  [BUGGY]  print(object,  offset,  value  +  len);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  offset,  value  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  offset,  value  +  len);	  print(object,    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
216	[BUG]  [BUGGY]  Appendable  out  =(Appendable)newRecord;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)newRecord;  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)newRecord;	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
217	[BUG]  [BUGGY]  out.append(value.toString(),  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  offset  +  len,  newRecord);	  out.append(value.toString(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
218	[BUG]  [BUGGY]  out.append(value.toString(),  offset  +  len,  value.toCharArray());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  offset  +  len,  value.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  offset  +  len,  value.toCharArray());	  out.append(value.toString(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
219	[BUG]  [BUGGY]  out.append(value.toString(),  offset  +  1,  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  offset  +  1,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  offset  +  1,  len);	  out.append(value.toString(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
220	[BUG]  [BUGGY]  out.append(value.toString(),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  offset,  offset  +  len);	  out.append(value.toString(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
221	[BUG]  [BUGGY]  out.append(value.toString(),  offset  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  offset  +  1);	  out.append(value.toString(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
222	[BUG]  [BUGGY]  print(object,  offset,  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  offset,  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  offset,  offset  +  len,  value.toString());	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
223	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  format.toString());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  format.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  format.toString());	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
224	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.toString(),  newRecord);	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
225	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.toString(),  format);	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
226	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  true);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  true);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.toString(),  true);	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
227	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  false);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toString(),  false);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.toString(),  false);	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
228	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.value.clone();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)this.value.clone();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)this.value.clone();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
229	[BUG]  [BUGGY]  Appendable  out  =  value.append(newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =  value.append(newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =  value.append(newRecord);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
230	[BUG]  [BUGGY]  out.append(value.getValue(),  offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getValue(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getValue(),  offset  +  len);	  out.append(value.getValue());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
231	[BUG]  [BUGGY]  out.append(value.getValue()  +  offset);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getValue()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getValue()  +  offset);	  out.append(value.getValue());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
232	[BUG]  [BUGGY]  out.append(value.getValue()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getValue()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getValue()  +  1);	  out.append(value.getValue());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
233	[BUG]  [BUGGY]  out.append(value.getRecordValue()  +  offset);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordValue()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordValue()  +  offset);	  out.append(value.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
234	[BUG]  [BUGGY]  out.append(value.getRecordValue()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordValue()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordValue()  +  1);	  out.append(value.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	8	None	replace
235	[BUG]  [BUGGY]  out.append(value.toString()  +  offset,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()  +  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()  +  offset,  len);	  out.append(value.toString()    +    offset);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
236	[BUG]  [BUGGY]  out.append(value.toString()  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()  +  len);	  out.append(value.toString()    +    offset);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
237	[BUG]  [BUGGY]  out.append(value.toString()  /  offset);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()  /  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()  /  offset);	  out.append(value.toString()    +    offset);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
238	[BUG]  [BUGGY]  out.append(object.toString()  +  offset);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString()  +  offset);	  out.append(value.toString()    +    offset);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
239	[BUG]  [BUGGY]  out.append(value.toString()).append(offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append(offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append(offset);	  out.append(value.toString()    +    offset);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
240	[BUG]  [BUGGY]  out.append(value.getRecordType(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordType(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordType(),  offset  +  len);	  out.append(value.getRecordType());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
241	[BUG]  [BUGGY]  out.append(value.getRecordType(),  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordType(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordType(),  offset);	  out.append(value.getRecordType());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
242	[BUG]  [BUGGY]  out.append(value.getRecordType()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordType()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordType()  +  1);	  out.append(value.getRecordType());    	non-compiled	[CE]  <identifier>  expected	45	None	replace
243	[BUG]  [BUGGY]  out.append(format.getRecordValue()  /  offset);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  /  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  /  offset);	  out.append(format.getRecordValue()    +    offset);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
244	[BUG]  [BUGGY]  out.append(format.getRecordValue()  *  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  *  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  *  offset);	  out.append(format.getRecordValue()    +    offset);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
245	[BUG]  [BUGGY]  out.append(object.getRecordValue()  +  offset);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordValue()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordValue()  +  offset);	  out.append(format.getRecordValue()    +    offset);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
246	[BUG]  [BUGGY]  out.append(value.getSimpleName());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getSimpleName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getSimpleName());	  out.append(value.getName());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
247	[BUG]  [BUGGY]  AllRecords.add(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  AllRecords.add(newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	AllRecords.add(newRecord);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
248	[BUG]  [BUGGY]  sweepAndThrow(out,  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  sweepAndThrow(out,  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	sweepAndThrow(out,  value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
249	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  [Delete]  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	[Delete]	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
250	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
251	[BUG]  [BUGGY]  AllRecordes.add(value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  AllRecordes.add(value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	AllRecordes.add(value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
252	[BUG]  [BUGGY]  AllRecordes.add(newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  AllRecordes.add(newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	AllRecordes.add(newRecord);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
253	[BUG]  [BUGGY]  sweepAndThrow(value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  sweepAndThrow(value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	sweepAndThrow(value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
254	[BUG]  [BUGGY]  out.append(object.getRecordValue(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordValue(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordValue(),  offset  +  len);	  out.append(object.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
255	[BUG]  [BUGGY]  out.append(object.getRecordValue()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordValue()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordValue()  +  1);	  out.append(object.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
256	[BUG]  [BUGGY]  out.append(format.getRecordType()  /  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()  /  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  /  1);	  out.append(format.getRecordType()    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
257	[BUG]  [BUGGY]  out.append(format.getRecordType()).append('n');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()).append('n');	  out.append(format.getRecordType()    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
258	[BUG]  [BUGGY]  out.append(format.getRecordType()).append(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()).append(newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()).append(newRecord);	  out.append(format.getRecordType()    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
259	[BUG]  [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  try  {  [Delete]  catch(IOException  ioe)  {  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	try  {  [Delete]  catch(IOException  ioe)  {	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
260	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.format.newInstance();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)this.format.newInstance();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)this.format.newInstance();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
261	[BUG]  [BUGGY]  out.append(format.getName(),  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getName(),  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getName(),  value,  offset  +  len);	  out.append(format.getName(),    value);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
262	[BUG]  [BUGGY]  out.append(value.getName(),  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getName(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getName(),  format);	  out.append(format.getName(),    value);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
263	[BUG]  [BUGGY]  out.append(value.getName(),  value);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getName(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getName(),  value);	  out.append(format.getName(),    value);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
264	[BUG]  [BUGGY]  out.append(value.getName(),  offset);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getName(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getName(),  offset);	  out.append(format.getName(),    value);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
265	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  value,  offset  +  len);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
266	[BUG]  [BUGGY]  out.append(object.getRecordValue(),  value);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecordValue(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecordValue(),  value);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
267	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  value,  offset);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  value,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  value,  offset);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
268	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset,  len);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset,  len);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
269	[BUG]  [BUGGY]  out.append(value.getRecordValue(),  offset);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordValue(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordValue(),  offset);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
270	[BUG]  [BUGGY]  out.append(value.getRecordValue(),  format);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecordValue(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecordValue(),  format);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
271	[BUG]  [BUGGY]  out.append(format.getRecord()  +  offset,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()  +  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()  +  offset,  len);	  out.append(format.getRecord()    +    offset);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
272	[BUG]  [BUGGY]  out.append(format.getRecord()  /  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()  /  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()  /  offset);	  out.append(format.getRecord()    +    offset);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
273	[BUG]  [BUGGY]  out.append(format.getRecord()  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()  +  len);	  out.append(format.getRecord()    +    offset);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
274	[BUG]  [BUGGY]  out.append(format.getRecord()  -  offset);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()  -  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()  -  offset);	  out.append(format.getRecord()    +    offset);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
275	[BUG]  [BUGGY]  out.append(value.getRecord()  +  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecord()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecord()  +  offset);	  out.append(format.getRecord()    +    offset);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
276	[BUG]  [BUGGY]  out.append(format.getRecord()  *  offset);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()  *  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()  *  offset);	  out.append(format.getRecord()    +    offset);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
277	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  format);	  out.append(value.getDelimiter(),    format);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
278	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset,  len);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset,  len);	  out.append(value.getDelimiter(),    format);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
279	[BUG]  [BUGGY]  out.append(value.getRecord(),  format);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getRecord(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getRecord(),  format);	  out.append(value.getDelimiter(),    format);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
280	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset);	  out.append(value.getDelimiter(),    format);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
281	[BUG]  [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  offset  +  len,  value);	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
282	[BUG]  [BUGGY]  printAndRecord(object,  offset,  value.length  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  value.length  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  value.length  +  len);	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
283	[BUG]  [BUGGY]  printAndRecord(object,  offset,  value  +  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  value  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  value  +  len);	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
284	[BUG]  [BUGGY]  printAndRecord(object,  offset,  value.offset  +  len);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  value.offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  value.offset  +  len);	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
285	[BUG]  [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  offset  +  len,  newRecord);	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
286	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset  +  len,  value);	  out.append(format.getRecordType(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
287	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset,  offset  +  len);	  out.append(format.getRecordType(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
288	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset  +  len,  newRecord);	  out.append(format.getRecordType(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
289	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset  +  1,  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  offset  +  1,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset  +  1,  len);	  out.append(format.getRecordType(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
290	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset  +  1);	  out.append(format.getRecordType(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
291	[BUG]  [BUGGY]  out.append(object,  offset+ln);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset+ln);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset+ln);	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
292	[BUG]  [BUGGY]  out.append(value,  offset,  offset+ln);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  offset,  offset+ln);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset,  offset+ln);	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
293	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset+ln);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset+ln);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset+ln);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
294	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset+ln);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset+ln);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset+ln);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
295	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset+ln);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset+ln);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset+ln);  }	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
296	[BUG]  [BUGGY]  printAndQuote(object,  value,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  value,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  value,  offset,  len,  newRecord);	  printAndQuote(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
297	[BUG]  [BUGGY]  printAndQuote(object,  value,  offset,  len,  format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  value,  offset,  len,  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  value,  offset,  len,  format);	  printAndQuote(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
298	[BUG]  [BUGGY]  printAndQuote(object,  value,  offset,  len  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  value,  offset,  len  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  value,  offset,  len  +  1);	  printAndQuote(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
299	[BUG]  [BUGGY]  printAndRecord(object,  value,  offset,  len,  format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  value,  offset,  len,  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  value,  offset,  len,  format);	  printAndRecord(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
300	[BUG]  [BUGGY]  printAndRecord(object,  value,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  value,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  value,  offset,  len,  newRecord);	  printAndRecord(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
301	[BUG]  [BUGGY]  printAndRecord(object,  value,  offset,  len  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  value,  offset,  len  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  value,  offset,  len  +  1);	  printAndRecord(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
302	[BUG]  [BUGGY]  printAndRecord(object,  value,  offset,  len  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  value,  offset,  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  value,  offset,  len  -  1);	  printAndRecord(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
303	[BUG]  [BUGGY]  printAndRecord(object,  value,  offset,  len,  false);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  value,  offset,  len,  false);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  value,  offset,  len,  false);	  printAndRecord(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
304	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  len,  value);	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
305	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset,  offset  +  len);	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
306	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  1);	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
307	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  1,  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset  +  1,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  1,  len);	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
308	[BUG]  [BUGGY]  out.append(format.getRecord(),  value  +  offset  +  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  value  +  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value  +  offset  +  len);	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
309	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  value,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getDelimiter(),  value,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  value,  offset,  offset  +  len);	  out.append(format.getDelimiter(),    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
310	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  object,  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getDelimiter(),  object,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  object,  offset  +  len);	  out.append(format.getDelimiter(),    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
311	[BUG]  [BUGGY]  out.append(format.getRecord(),  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value,  offset  +  len);	  out.append(format.getDelimiter(),    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
312	[BUG]  [BUGGY]  printAndQuote(object,  offset,  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  offset  +  len,  value);	  printAndQuote(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
313	[BUG]  [BUGGY]  printAndQuote(object,  offset,  value.length  +  len);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  value.length  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  value.length  +  len);	  printAndQuote(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
314	[BUG]  [BUGGY]  printAndQuote(object,  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  value,  offset  +  len);	  printAndQuote(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
315	[BUG]  [BUGGY]  printAndQuote(object,  offset,  value.offset  +  len);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  value.offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  value.offset  +  len);	  printAndQuote(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
316	[BUG]  [BUGGY]  out.append(format.getRecord(),  value  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  value  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value  +  1);	  out.append(format.getRecord(),    value);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
317	[BUG]  [BUGGY]  out.append(value.getSegment());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getSegment());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getSegment());	  out.append(value.getRecord());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
318	[BUG]  [BUGGY]  out.append(object,  format.getRecordValue());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  format.getRecordValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  format.getRecordValue());	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
319	[BUG]  [BUGGY]  out.append(value,  format.getRecordValue(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  format.getRecordValue(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.getRecordValue(),  offset  +  len);	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
320	[BUG]  [BUGGY]  out.append(value,  format.getRecordValue(),  offset);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  format.getRecordValue(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.getRecordValue(),  offset);	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
321	[BUG]  [BUGGY]  out.append(value,  format.getRecordValue()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  format.getRecordValue()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.getRecordValue()  +  1);	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
322	[BUG]  [BUGGY]  out.append(value,  value.getRecordValue());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  value.getRecordValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  value.getRecordValue());	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
323	[BUG]  [BUGGY]  out.append(value,  this.format.getRecordValue());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  this.format.getRecordValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  this.format.getRecordValue());	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
324	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(object),  offset,  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(object),  offset,  len  -  1);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
325	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(newRecord),  offset,  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(newRecord),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(newRecord),  offset,  len);	  out.append(ObjectUtilities.toString(object),    offset,    len);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
326	[BUG]  [BUGGY]  out.append(value.toString(),  format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  format);	  out.append(value.getDelimiter(),    format);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
327	[BUG]  [BUGGY]  out.append(object,  offset);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset);	  out.append(object);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
328	[BUG]  [BUGGY]  out.append(newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(newRecord);	  out.append(object);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
329	[BUG]  [BUGGY]  out.append(StringUtilities.toString(object,  offset,  len));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(StringUtilities.toString(object,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(StringUtilities.toString(object,  offset,  len));	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
330	[BUG]  [BUGGY]  if(newRecord)  {  out.append(ObjectUtilities.toString(object,  offset,  len));  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(ObjectUtilities.toString(object,  offset,  len));  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(ObjectUtilities.toString(object,  offset,  len));  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
331	[BUG]  [BUGGY]  out.append(ObjectUtilities.toString(newRecord,  offset,  len));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toString(newRecord,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toString(newRecord,  offset,  len));	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
332	[BUG]  [BUGGY]  out.append(value.getIndex(),  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getIndex(),  format);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getIndex(),  format);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
333	[BUG]  [BUGGY]  out.append(value.getIndex(),  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getIndex(),  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getIndex(),  len);	  out.append(format.getIndex(),    value);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
334	[BUG]  [BUGGY]  out.append(object.toString()).append( "noRecord ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString()).append( "noRecord ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString()).append( "noRecord ");	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
335	[BUG]  [BUGGY]  out.append(value.toString()).append( "  / ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append( "  / ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append( "  / ");	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
336	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len)  {  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len)  {  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len)  {	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
337	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len)>  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len)>  false);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len)>  false);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
338	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len));	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
339	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len)>  newRecord)  {  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len)>  newRecord)  {  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len)>  newRecord)  {	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
340	[BUG]  [BUGGY]  sweepTo(value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  sweepTo(value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	sweepTo(value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
341	[BUG]  [BUGGY]  printAndRecord(object,  offset,  len  +  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  len  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  len  +  1);	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
342	[BUG]  [BUGGY]  printAndRecord(object,  offset,  len  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  len  -  1);	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
343	[BUG]  [BUGGY]  out.append(ObjectUtilities.newRecord(object,  offset,  len));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.newRecord(object,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.newRecord(object,  offset,  len));	  out.append(value.getValue());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
344	[BUG]  [BUGGY]  Appendable  out  =(Appendable)super.printObject(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)super.printObject(object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)super.printObject(object,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
345	[BUG]  [BUGGY]  out.append(format.getIndex(),  object);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getIndex(),  object);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getIndex(),  object);	  out.append(format.getDelimiter(),    object);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
346	[BUG]  [BUGGY]  out.append(this.format.getRecord()  +  offset);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecord()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecord()  +  offset);	  out.append(this.format.getRecord());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
347	[BUG]  [BUGGY]  out.append(this.format.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.toString());	  out.append(this.format.getRecord());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
348	[BUG]  [BUGGY]  out.append(this.format.getRecord()  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecord()  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecord()  +  1);	  out.append(this.format.getRecord());    	non-compiled	[CE]  <identifier>  expected	23	None	replace
349	[BUG]  [BUGGY]  printAndEscape(value,  offset,  offset  +  len,  object.toString());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(value,  offset,  offset  +  len,  object.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(value,  offset,  offset  +  len,  object.toString());	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
350	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toCharArray());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.toCharArray());	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
351	[BUG]  [BUGGY]  out.append(object.toString(),  offset);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.toString(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.toString(),  offset);	  out.append(object.toString());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
352	[BUG]  [BUGGY]  out.append(object  ==  null?  null  :  object.getClass());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object  ==  null?  null  :  object.getClass());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object  ==  null?  null  :  object.getClass());	  out.append(object.getClass());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
353	[BUG]  [BUGGY]  out.append(object!=  null?  null  :  object.getClass());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object!=  null?  null  :  object.getClass());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object!=  null?  null  :  object.getClass());	  out.append(object.getClass());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
354	[BUG]  [BUGGY]  out.append(object.getClass(),  offset  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass(),  offset  +  len);	  out.append(object.getClass());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
355	[BUG]  [BUGGY]  out.append(object.getClass(),  value);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass(),  value);	  out.append(object.getClass());    	non-compiled	[CE]  <identifier>  expected	28	None	replace
356	[BUG]  [BUGGY]  out.append(value,  format.getRecordValue()  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  format.getRecordValue()  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.getRecordValue()  +  len);	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
357	[BUG]  [BUGGY]  out.append(value,  format.getNewRecordValue());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  format.getNewRecordValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.getNewRecordValue());	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
358	[BUG]  [BUGGY]  out.append(value,  format.getRecordValue()  +  offset);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  format.getRecordValue()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.getRecordValue()  +  offset);	  out.append(value,    format.getRecordValue());    	non-compiled	[CE]  <identifier>  expected	78	None	replace
359	[BUG]  [BUGGY]  sweepTo(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  sweepTo(object,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	sweepTo(object,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
360	[BUG]  [BUGGY]  safeMultiply(out,  value.toString()));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(out,  value.toString()));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(out,  value.toString()));	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
361	[BUG]  [BUGGY]  sweepSurrogate(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  sweepSurrogate(object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	sweepSurrogate(object,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
362	[BUG]  [BUGGY]  out.append(value.toString(),  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  offset  +  len,  value.toString());	  out.append(value.toString(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
363	[BUG]  [BUGGY]  printAndQuote(object,  value,  offset,  len  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  value,  offset,  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  value,  offset,  len  -  1);	  printAndQuote(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
364	[BUG]  [BUGGY]  printRecord(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printRecord(object,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printRecord(object,  value,  offset,  len);	  printAndQuote(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
365	[BUG]  [BUGGY]  out.append(format.getRecord(),  value  +  offset);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  value  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value  +  offset);	  out.append(format.getRecord(),    value);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
366	[BUG]  [BUGGY]  out.append(format.getRecord(),  value  +  len);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  value  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  value  +  len);	  out.append(format.getRecord(),    value);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
367	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  len  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len  +  1);	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
368	[BUG]  [BUGGY]  printAndEscape(object,  offset,  len  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  len  -  1);	  printAndEscape(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
369	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len))  {  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len))  {  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len))  {	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
370	[BUG]  [BUGGY]  out.append(value.toString()  -  offset);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()  -  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()  -  offset);	  out.append(value.toString()    +    offset);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
371	[BUG]  [BUGGY]  out.append(object.getValue(),  value);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getValue(),  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getValue(),  value);	  out.append(object.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
372	[BUG]  [BUGGY]  out.append(object.getRecord(),  offset,  len);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getRecord(),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getRecord(),  offset,  len);	  out.append(object.getDelimiter(),    value);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
373	[BUG]  [BUGGY]  out.append(format.getRecordValue()  +  1).append('n');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  +  1).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  +  1).append('n');	  out.append(format.getRecordValue()    +    1);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
374	[BUG]  [BUGGY]  out.append(object,  offset,  value.length  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset,  value.length  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  value.length  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
375	[BUG]  [BUGGY]  out.append(object,  offset,  value.offset  +  len);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset,  value.offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  value.offset  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
376	[BUG]  [BUGGY]  out.append(object,  offset,  value  +  len);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset,  value  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  value  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
377	[BUG]  [BUGGY]  out.append(object.getValue()  +  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getValue()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getValue()  +  offset);	  out.append(object.getValue());    	non-compiled	[CE]  <identifier>  expected	43	None	replace
378	[BUG]  [BUGGY]  out.append(object,  offset  +  1,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset  +  1,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset  +  1,  len);	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
379	[BUG]  [BUGGY]  out.append(object,  offset  +  len  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset  +  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset  +  len  -  1);	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
380	[BUG]  [BUGGY]  printAndSerialize(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndSerialize(object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndSerialize(object,  offset,  len);	  printAndQuote(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
381	[BUG]  [BUGGY]  out.append(format.getRecordName()  +  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordName()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordName()  +  offset);	  out.append(format.getRecordName());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
382	[BUG]  [BUGGY]  out.append(format.getRecord()).append('/');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()).append('/');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()).append('/');	  out.append(format.getRecord()).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
383	[BUG]  [BUGGY]  out.append(format.getRecord()).append(',');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()).append(',');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()).append(',');	  out.append(format.getRecord()).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
384	[BUG]  [BUGGY]  out.append(format.getRecord()).append('  ');  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord()).append('  ');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord()).append('  ');	  out.append(format.getRecord()).append('n');    	non-compiled	[CE]  <identifier>  expected	24	None	replace
385	[BUG]  [BUGGY]  printAndQuote(object,  offset,  value  +  len);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  value  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  value  +  len);	  printAndQuote(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
386	[BUG]  [BUGGY]  out.append('ufffd');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append('ufffd');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append('ufffd');	  out.append(value);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
387	[BUG]  [BUGGY]  print(object,  value,  offset  +  len  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset  +  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset  +  len  -  1);	  print(object,    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
388	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.byteValue());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.byteValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.byteValue());	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
389	[BUG]  [BUGGY]  out.append(value.toString(),  value.toCharArray()).append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  value.toCharArray()).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  value.toCharArray()).append('n');	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
390	[BUG]  [BUGGY]  out.append(value.toString(),  value.toCharArray()  +  offset);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  value.toCharArray()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  value.toCharArray()  +  offset);	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
391	[BUG]  [BUGGY]  printAndEscape(object,  offset,  value  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  value  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  value  +  len);	  printAndEscape(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
392	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  len,  newRecord);	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
393	[BUG]  [BUGGY]  out.append(value.toString()).append('n',  offset);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append('n',  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append('n',  offset);	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
394	[BUG]  [BUGGY]  out.append(value.toString()).append('/');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append('/');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append('/');	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
395	[BUG]  [BUGGY]  out.append(value,  offset+ln  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  offset+ln  +  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset+ln  +  1);	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
396	[BUG]  [BUGGY]  out.append(value,  offset+ln  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  offset+ln  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset+ln  +  len);	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
397	[BUG]  [BUGGY]  out.append(value,  offset+ln,  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  offset+ln,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset+ln,  len);	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
398	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  object,  offset,  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getDelimiter(),  object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  object,  offset,  len);	  out.append(format.getDelimiter(),    value,    offset);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
399	[BUG]  [BUGGY]  printObject(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printObject(object,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printObject(object,  value,  offset,  len);	  print(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
400	[BUG]  [BUGGY]  out.append(object.getClass().getName()  +  offset);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass().getName()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getName()  +  offset);	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
401	[BUG]  [BUGGY]  out.append(format.getRecordValue()  -  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  -  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  -  offset);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
402	[BUG]  [BUGGY]  out.append(format.getRecordValue()  +  value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue()  +  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue()  +  value);	  out.append(format.getRecordValue()    +    len);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
403	[BUG]  [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
404	[BUG]  [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
405	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len))  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len))  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len))  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
406	[BUG]  [BUGGY]  safeMultiply(value,  offset,  len))  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safeMultiply(value,  offset,  len))  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safeMultiply(value,  offset,  len))  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
407	[BUG]  [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(Object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(Object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(Object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
408	[BUG]  [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  return;  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	safely())  {  out.append(value,  offset  +  len);  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  return;  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
409	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.length  -  2);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.length  -  2);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.length  -  2);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
410	[BUG]  [BUGGY]  out.append(object.getText(),  offset);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getText(),  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getText(),  offset);	  out.append(object.getText());    	non-compiled	[CE]  <identifier>  expected	66	None	replace
411	[BUG]  [BUGGY]  printAndRecord(object,  offset,  value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  value,  offset  +  len);	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
412	[BUG]  [BUGGY]  out.append(format.getRecordType(),  value  +  offset);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  value  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  value  +  offset);	  out.append(format.getRecordType(),    value);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
413	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  offset  +  len  -  1);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object),  offset,  offset  +  len  -  1);	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
414	[BUG]  [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  value  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.print(object),  offset,  value  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.print(object),  offset,  value  +  len);	  out.append(ObjectUtilities.print(object),    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
415	[BUG]  [BUGGY]  out.append(format.getRecordType()).append('  ');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()).append('  ');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()).append('  ');	  out.append(format.getRecordType()    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
416	[BUG]  [BUGGY]  out.append(format.getRecordType()).append('/');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()).append('/');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()).append('/');	  out.append(format.getRecordType()    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
417	[BUG]  [BUGGY]  out.append(this.format.getRecordType()  +  offset);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(this.format.getRecordType()  +  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(this.format.getRecordType()  +  offset);	  out.append(this.format.getRecordType());    	non-compiled	[CE]  <identifier>  expected	49	None	replace
418	[BUG]  [BUGGY]  out.append(value,  format.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  format.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  format.toString());	  out.append(format.toString());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
419	[BUG]  [BUGGY]  Appendable  out  =(Appendable)value.getObject();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)value.getObject();  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)value.getObject();	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
420	[BUG]  [BUGGY]  Appendable  out  =(Appendable)value.get(offset);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =(Appendable)value.get(offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =(Appendable)value.get(offset);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
421	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  object);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  object);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  object);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
422	[BUG]  [BUGGY]  out.append(value,  value.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  value.toString());	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
423	[BUG]  [BUGGY]  out.append(object,  format.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  format.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  format.toString());	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
424	[BUG]  [BUGGY]  out.append(format.getRecordType()  *  offset);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType()  *  offset);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType()  *  offset);	  out.append(format.getRecordType()    +    offset);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
425	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  printAndQuote(object,  value,  offset,  len);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  printAndQuote(object,  value,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  printAndQuote(object,  value,  offset,  len);  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
426	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
427	[BUG]  [BUGGY]  appendable.append(value,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  appendable.append(value,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.append(value,  offset,  offset  +  len);	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
428	[BUG]  [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset  +  len);  }	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
429	[BUG]  [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  appendable.append(object,  offset,  offset  +  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
430	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset  +  len,  value.toString());	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
431	[BUG]  [BUGGY]  out.append(value.getSeparator(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getSeparator(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getSeparator(),  offset  +  len);	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
432	[BUG]  [BUGGY]  out.append(object.getClass().getName(),  value.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass().getName(),  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass().getName(),  value.toString());	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
433	[BUG]  [BUGGY]  out.append(object.getClass(),  value.getName());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getClass(),  value.getName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getClass(),  value.getName());	  out.append(object.getClass().getName());    	non-compiled	[CE]  <identifier>  expected	44	None	replace
434	[BUG]  [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
435	[BUG]  [BUGGY]  parent!=  null  &&  newRecord  ==  parent.getType())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  parent!=  null  &&  newRecord  ==  parent.getType())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	parent!=  null  &&  newRecord  ==  parent.getType())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
436	[BUG]  [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getParent())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getParent())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	parent!=  null  &&  newRecord  <  =  parent.getParent())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
437	[BUG]  [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getName())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getName())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	parent!=  null  &&  newRecord  <  =  parent.getName())  {  out.append(value,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
438	[BUG]  [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
439	[BUG]  [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	parent!=  null  &&  newRecord  <  =  parent.getType())  {  out.append(value,  offset  +  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    printAndEscape(object,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
440	[BUG]  [BUGGY]  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	}  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
441	[BUG]  [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	[Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
442	[BUG]  [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	[Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
443	[BUG]  [BUGGY]  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  false)  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  }  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  false)  {  out.append(value,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	}  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  false)  {  out.append(value,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
444	[BUG]  [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  false)  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  false)  {  out.append(value,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	[Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  false)  {  out.append(value,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
445	[BUG]  [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  null)  {  out.append(value,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  [Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  null)  {  out.append(value,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	[Delete]  else  {  System.arraycopy(object,  offset,  printAndEscape(value,  offset,  len,  newRecord);  if(newRecord!=  null)  {  out.append(value,  offset  +  len);  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    printAndEscape(value,    offset,    len,    newRecord);    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
446	[BUG]  [BUGGY]  out.append(value.getSep());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getSep());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getSep());	  out.append(value.getRecord());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
447	[BUG]  [BUGGY]  out.append(ObjectUtilities.toBoolean(object,  offset,  len));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toBoolean(object,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toBoolean(object,  offset,  len));	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
448	[BUG]  [BUGGY]  out.append(ObjectUtilities.toPaddedInteger(value,  offset,  len));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toPaddedInteger(value,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toPaddedInteger(value,  offset,  len));	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
449	[BUG]  [BUGGY]  out.append(ObjectUtilities.toFormat(object,  offset,  len));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.toFormat(object,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.toFormat(object,  offset,  len));	  out.append(ObjectUtilities.toString(value,    offset,    len));    	non-compiled	[CE]  <identifier>  expected	77	None	replace
450	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset  +  len,  value.toString());	  out.append(format.getRecordType(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
451	[BUG]  [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  value.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordType(),  offset  +  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordType(),  offset  +  len,  value.length);	  out.append(format.getRecordType(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
452	[BUG]  [BUGGY]  out.append(ObjectUtilities.getText(object),  offset,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.getText(object),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.getText(object),  offset,  len);	  out.append(value.getText());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
453	[BUG]  [BUGGY]  out.append(ObjectUtilities.getText(object),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.getText(object),  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.getText(object),  offset,  offset  +  len);	  out.append(value.getText());    	non-compiled	[CE]  <identifier>  expected	42	None	replace
454	[BUG]  [BUGGY]  out.append(object,  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset  +  len,  value.toString());	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
455	[BUG]  [BUGGY]  out.append(object,  offset  +  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset  +  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset  +  len,  value.intValue());	  out.append(object,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
456	[BUG]  [BUGGY]  printEscape(object,  offset,  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printEscape(object,  offset,  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printEscape(object,  offset,  offset  +  len,  value.toString());	  printAndEscape(object,    offset,    offset    +    len,    value.toString());    	non-compiled	[CE]  <identifier>  expected	70	None	replace
457	[BUG]  [BUGGY]  out.append(StringUtils.repeat(object,  offset  +  len));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(StringUtils.repeat(object,  offset  +  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(StringUtils.repeat(object,  offset  +  len));	  out.append(format.toString());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
458	[BUG]  [BUGGY]  out.append(StringUtils.repeat(object,  offset,  len));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(StringUtils.repeat(object,  offset,  len));  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(StringUtils.repeat(object,  offset,  len));	  out.append(format.toString());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
459	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  len,  value.toString());	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
460	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  offset  +  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  offset  +  len,  value.intValue());	  out.append(format.getRecordValue(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
461	[BUG]  [BUGGY]  out.append(value,  offset  +  len).append('n');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  offset  +  len).append('n');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset  +  len).append('n');	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
462	[BUG]  [BUGGY]  out.append(value.toString()).append(',');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append(',');  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append(',');	  out.append(value.toString()).append('n');    	non-compiled	[CE]  <identifier>  expected	31	None	replace
463	[BUG]  [BUGGY]  printAndRecord(object,  offset,  value.intValue());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  value.intValue());	  printAndRecord(object,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
464	[BUG]  [BUGGY]  out.append(format.toString(),  offset  +  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.toString(),  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.toString(),  offset  +  len);	  out.append(value.toString(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
465	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
466	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
467	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
468	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
469	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
470	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  for(int  i  =  0,  len  =  value.length;  i  <  len;  ++i)  {  return;  }  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    for(int    i    =    0,    len    =    value.length;    i    <    len;    ++i)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
471	[BUG]  [BUGGY]  print(object,  value,  offset  +  len,  0);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  print(object,  value,  offset  +  len,  0);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	print(object,  value,  offset  +  len,  0);	  print(object,    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
472	[BUG]  [BUGGY]  appendable.append(object,  offset,  value.offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  appendable.append(object,  offset,  value.offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.append(object,  offset,  value.offset  +  len);	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
473	[BUG]  [BUGGY]  appendable.append(object,  offset,  offset  +  len,  value);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  appendable.append(object,  offset,  offset  +  len,  value);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.append(object,  offset,  offset  +  len,  value);	  appendable.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
474	[BUG]  [BUGGY]  printLong(object,  offset,  len,  value.length);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printLong(object,  offset,  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printLong(object,  offset,  len,  value.length);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
475	[BUG]  [BUGGY]  printAndQuote(object,  offset,  len,  value.length,  value.length);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  len,  value.length,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  len,  value.length,  value.length);	  printAndQuote(object,    offset,    len,    value.length);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
476	[BUG]  [BUGGY]  }  else  {  System.arraycopy(object,  offset,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  }  else  {  System.arraycopy(object,  offset,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	}  else  {  System.arraycopy(object,  offset,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
477	[BUG]  [BUGGY]  parent.print(object,  offset,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  parent.print(object,  offset,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	parent.print(object,  offset,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
478	[BUG]  [BUGGY]  Appendable  out  =  getFormat().print(object,  offset,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  Appendable  out  =  getFormat().print(object,  offset,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	Appendable  out  =  getFormat().print(object,  offset,  value,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    System.arraycopy(object,    offset,    value,    offset,    len);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
479	[BUG]  [BUGGY]  >=  [Delete]  else  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  >=  [Delete]  else  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	>=  [Delete]  else  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
480	[BUG]  [BUGGY]  >=  true)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  >=  true)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	>=  true)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
481	[BUG]  [BUGGY]  [Delete]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  [Delete]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	[Delete]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
482	[BUG]  [BUGGY]  [Delete]  else  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  [Delete]  else  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	[Delete]  else  if(newRecord)  {  out.append(value,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
483	[BUG]  [BUGGY]  }  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  }  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	}  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
484	[BUG]  [BUGGY]  >=  [Delete]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  >=  [Delete]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	>=  [Delete]  else  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord)    {    out.append(value,    offset    +    len);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
485	[BUG]  [BUGGY]  out.append(object,  value.getName());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.getName());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.getName());	  out.append(value.getName());    	non-compiled	[CE]  <identifier>  expected	26	None	replace
486	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value.length);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  len,  value.length);	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
487	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  len,  value.toString());	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
488	[BUG]  [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  offset  +  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  offset  +  len,  value.intValue());	  out.append(format.getRecord(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
489	[BUG]  [BUGGY]  out.append(value.toString()).append( "  = ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString()).append( "  = ");  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString()).append( "  = ");	  out.append(value.toString()).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
490	[BUG]  [BUGGY]  out.append(object,  value.getValue());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.getValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.getValue());	  out.append(value.getValue());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
491	[BUG]  [BUGGY]  out.append(ObjectUtilities.getValue(object),  offset,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(ObjectUtilities.getValue(object),  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(ObjectUtilities.getValue(object),  offset,  len);	  out.append(value.getValue());    	non-compiled	[CE]  <identifier>  expected	41	None	replace
492	[BUG]  [BUGGY]  out.append(value,  offset,  len);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value,  offset,  len);	  out.append(object);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
493	[BUG]  [BUGGY]  out.append(object,  0,  offset  +  len);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  0,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  0,  offset  +  len);	  out.append(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
494	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
495	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  offset,  offset  +  len);  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
496	[BUG]  [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset,  len);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset,  len);  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(object,  offset,  offset  +  len);  }  else  {  printAndEscape(object,  value,  offset,  len);  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
497	[BUG]  [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  return;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  return;  }  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	if(newRecord)  {  out.append(value,  offset,  offset  +  len);  }  else  {  return;  }	  out.append(value,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
498	[BUG]  [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  offset  +  len,  value.toString());	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
499	[BUG]  [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndRecord(object,  offset,  offset  +  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndRecord(object,  offset,  offset  +  len,  value.intValue());	  printAndRecord(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
500	[BUG]  [BUGGY]  printImpl(object,  value,  offset,  len);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printImpl(object,  value,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printImpl(object,  value,  offset,  len);	  printAndQuote(object,    value,    offset,    len);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
501	[BUG]  [BUGGY]  out.append(format.getRecordValue(),  object,  offset  +  len);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecordValue(),  object,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecordValue(),  object,  offset  +  len);	  out.append(format.getRecordValue(),    value);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
502	[BUG]  [BUGGY]  out.append('n',  value.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append('n',  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append('n',  value.toString());	  out.append(object,    value.toString());    	non-compiled	[CE]  <identifier>  expected	74	None	replace
503	[BUG]  [BUGGY]  appendable.print(object,  offset,  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  appendable.print(object,  offset,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	appendable.print(object,  offset,  len);	  if(newRecord)    {    out.append(value,    offset    +    len);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
504	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset  +  len,  value.toString());	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
505	[BUG]  [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value.intValue());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object.getDelimiter(),  offset  +  len,  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object.getDelimiter(),  offset  +  len,  value.intValue());	  out.append(object.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
506	[BUG]  [BUGGY]  out.append(object,  offset,  offset+ln);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  offset,  offset+ln);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  offset,  offset+ln);	  out.append(value,    offset+ln);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
507	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  format,  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  format,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  format,  newRecord);	  out.append(value.getDelimiter(),    format);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
508	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  format,  len);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  format,  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  format,  len);	  out.append(value.getDelimiter(),    format);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
509	[BUG]  [BUGGY]  out.append(value.toString(),  object.toCharArray());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.toString(),  object.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.toString(),  object.toCharArray());	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
510	[BUG]  [BUGGY]  out.append(object,  value.toString(),  value.toCharArray());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(object,  value.toString(),  value.toCharArray());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(object,  value.toString(),  value.toCharArray());	  out.append(value.toString(),    value.toCharArray());    	non-compiled	[CE]  <identifier>  expected	32	None	replace
511	[BUG]  [BUGGY]  printAndQuote(object,  offset,  offset  +  len,  value.toString());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  offset  +  len,  value.toString());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  offset  +  len,  value.toString());	  printAndQuote(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
512	[BUG]  [BUGGY]  printAndQuote(object,  offset,  offset  +  len,  newRecord);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndQuote(object,  offset,  offset  +  len,  newRecord);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndQuote(object,  offset,  offset  +  len,  newRecord);	  printAndQuote(object,    offset,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
513	[BUG]  [BUGGY]  out.append(format.getDelimiter(),  object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getDelimiter(),  object,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getDelimiter(),  object,  offset,  offset  +  len);	  out.append(format.getDelimiter(),    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
514	[BUG]  [BUGGY]  out.append(format.getRecord(),  object,  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(format.getRecord(),  object,  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(format.getRecord(),  object,  offset,  offset  +  len);	  out.append(format.getDelimiter(),    value,    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
515	[BUG]  [BUGGY]  out.append(value.getDelimiter(),  offset,  offset  +  len);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  out.append(value.getDelimiter(),  offset,  offset  +  len);  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	out.append(value.getDelimiter(),  offset,  offset  +  len);	  out.append(value.getDelimiter(),    offset    +    len);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
516	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  format.intValue());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  format.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  format.intValue());	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
517	[BUG]  [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  value.intValue());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      private  void  print(final  Object  object,  final  CharSequence  value,  final  int  offset,  final  int  len)  throws  IOException  {  if  (!newRecord)  {      [BUGGY]  printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  value.intValue());  [BUGGY]      }  if  (format.isQuoting())  {  printAndQuote(object,  value,  offset,  len);  }  else  if  (format.isEscaping())  {  printAndEscape(value,  offset,  len);  }  else  {  out.append(value,  offset,  offset  +  len);  }  newRecord  =  false;  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  object  CharSequence  value  final  int  offset  final  int  len  [VARIABLES]  CharSequence  value  CSVFormat  format  Object  object  boolean  newRecord  int  len  offset  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	112	112	1	replace	printAndEscape(object,  offset,  offset  +  len,  value.intValue(),  value.intValue());	  printAndEscape(object,    offset,    offset    +    len,    value.intValue());    	non-compiled	[CE]  <identifier>  expected	71	None	replace
