bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  0,  strValue.length()  -  1);	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  0,  strValue.length()  +  1);	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  0,  strValue.length()  -  2);	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.append(strValue);  }	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
5	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.append(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
6	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.append(strValue);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  out.append(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  out.append(strValue);  }	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
7	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.append(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
8	[BUG]  [BUGGY]  append(strValue);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  append(strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	append(strValue);	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
9	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  return;  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.append(strValue);  }  else  {  return;  }	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
10	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  format.print(nullString);  }  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.append(strValue);  }  else  {  format.print(nullString);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.append(strValue);  }  else  {  format.print(nullString);  }	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
11	[BUG]  [BUGGY]  this.print(new  String(strValue,  nullString,  0,  strValue.length()));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(new  String(strValue,  nullString,  0,  strValue.length()));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(new  String(strValue,  nullString,  0,  strValue.length()));	  this.print(nullString,    strValue,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
12	[BUG]  [BUGGY]  this.print(strValue,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  null,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  null,  0,  strValue.length()  -  1);	  this.print(strValue,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
13	[BUG]  [BUGGY]  this.print(null,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  null,  0,  strValue.length());	  this.print(strValue,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
14	[BUG]  [BUGGY]  this.print(strValue,  null,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  null,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  null,  0,  strValue.length()  +  1);	  this.print(strValue,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
15	[BUG]  [BUGGY]  this.print(strValue,  null,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  null,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  null,  0,  strValue.length()  -  2);	  this.print(strValue,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
16	[BUG]  [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
17	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
18	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
19	[BUG]  [BUGGY]  String  nullString  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  String  nullString  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	String  nullString  =  nullString  ==  null?  Constants.EMPTY  :  nullString;	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
20	[BUG]  [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
21	[BUG]  [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
22	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append(',');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append(',');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
24	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ",');  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ",');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ",');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append(',');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
25	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( ", ");  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append(',');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  this.print(String.valueOf(strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(String.valueOf(strValue),  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(String.valueOf(strValue),  0,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    4);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
27	[BUG]  [BUGGY]  this.print(strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  1,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    4);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
28	[BUG]  [BUGGY]  this.println(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.println(strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.println(strValue,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    4);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
29	[BUG]  [BUGGY]  this.print(null,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullValue,  0,  strValue.length());	  this.print(null,    strValue,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
30	[BUG]  [BUGGY]  print(strValue,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  nullValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  nullValue,  0,  strValue.length());	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
31	[BUG]  [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  nullValue,  0,  strValue.length()  -  1);	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
32	[BUG]  [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  nullValue,  0,  strValue.length()  -  2);	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  nullValue,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  nullValue,  0,  strValue.length()  +  1);	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
34	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  0,  strValue.length()  -  2);	  this.print(nullString,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	37	None	replace
35	[BUG]  [BUGGY]  this.print(null,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  null,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  null,  0,  strValue.length()  -  1);	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  0,  strValue.length()  +  1);	  this.print(nullString,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null  ||  strValue.length()  ==  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "null ");  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
41	[BUG]  [BUGGY]  this.print(NullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(NullString,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  null,  0,  strValue.length());	  this.print(NullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
42	[BUG]  [BUGGY]  this.print(NullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(NullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  strValue,  0,  strValue.length()  -  1);	  this.print(NullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
43	[BUG]  [BUGGY]  this.print(StrValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(StrValue,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(StrValue,  nullString,  0,  strValue.length());	  this.print(NullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  this.print(nullString,  null,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  strValue.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
45	[BUG]  [BUGGY]  this.print(strValue,  nullString,  value.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  value.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  value.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
46	[BUG]  [BUGGY]  this.print(strValue,  nullString,  strValue.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  strValue.toString());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
47	[BUG]  [BUGGY]  this.print(strValue,  nullString,  strValue!=  null?  nullString  :  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  strValue!=  null?  nullString  :  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  strValue!=  null?  nullString  :  strValue.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
48	[BUG]  [BUGGY]  this.print(nullString,  strValue,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  strValue,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  strValue.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
49	[BUG]  [BUGGY]  this.print(strValue,  nullString,  strValue!=  null?  Constants.EMPTY  :  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  strValue!=  null?  Constants.EMPTY  :  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  strValue!=  null?  Constants.EMPTY  :  strValue.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
50	[BUG]  [BUGGY]  this.print(strValue,  nullString,  strValue  ==  null?  Constants.EMPTY  :  strValue.length());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  strValue  ==  null?  Constants.EMPTY  :  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  strValue  ==  null?  Constants.EMPTY  :  strValue.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
51	[BUG]  [BUGGY]  print(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
52	[BUG]  [BUGGY]  print(null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  strValue,  0,  strValue.length()  -  1);	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  print(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  null,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  print(null,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  null,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
55	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  null,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
56	[BUG]  [BUGGY]  this.print(nullString,  value,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  value,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  value,  0,  strValue.length()  -  1);	  this.print(nullString,    value,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
57	[BUG]  [BUGGY]  print(nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  null,  0,  strValue.length());	  print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
58	[BUG]  [BUGGY]  print(nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  strValue,  0,  strValue.length()  -  1);	  print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
59	[BUG]  [BUGGY]  print(nullString,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  strValue,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  strValue,  0,  strValue.length()  -  2);	  print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
60	[BUG]  [BUGGY]  print(nullString,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  value,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  value,  0,  strValue.length());	  print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	13	None	replace
61	[BUG]  [BUGGY]  this.print(strValue,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullValue,  0,  strValue.length());	  this.print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
62	[BUG]  [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  nullValue,  0,  strValue.length()  -  1);	  this.print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
63	[BUG]  [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  nullValue,  0,  strValue.length()  +  1);	  this.print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
64	[BUG]  [BUGGY]  this.print(nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  0,  strValue.length()  -  1);	  this.print(nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
65	[BUG]  [BUGGY]  this.print(nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  0,  strValue.length()  +  1);	  this.print(nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
66	[BUG]  [BUGGY]  this.print(nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  0,  strValue.length()  -  2);	  this.print(nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
67	[BUG]  [BUGGY]  this.print(strValue,  0,  nullString.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  0,  nullString.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  0,  nullString.length());	  this.print(nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  this.print(null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  0,  strValue.length()  -  1);	  this.print(nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
69	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
70	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
71	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
72	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
73	[BUG]  [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
74	[BUG]  [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(nullString  ==  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
75	[BUG]  [BUGGY]  this.print(value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(value,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
76	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('N');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('N');  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
77	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('N');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('N');  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
78	[BUG]  [BUGGY]  String  nullString  =  nullString!=  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  String  nullString  =  nullString!=  null?  Constants.EMPTY  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	String  nullString  =  nullString!=  null?  Constants.EMPTY  :  nullString;	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
79	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( "null ");  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
80	[BUG]  [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  strValue,  0,  strValue.length()  -  1);	  this.print(null,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
81	[BUG]  [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  strValue,  0,  strValue.length()  -  2);	  this.print(null,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
82	[BUG]  [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  strValue,  0,  strValue.length()  +  1);	  this.print(null,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
83	[BUG]  [BUGGY]  this.print(strValue,  nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  null,  0,  strValue.length());	  this.print(null,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
84	[BUG]  [BUGGY]  this.print(null,  nullString,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  value,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  value,  0,  strValue.length());	  this.print(null,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
85	[BUG]  [BUGGY]  this.print(new  String(strValue),  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(new  String(strValue),  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(new  String(strValue),  0,  strValue.length());	  this.print(null,    strValue,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
86	[BUG]  [BUGGY]  out.print(nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.print(nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.print(nullString);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
87	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.print(strValue);  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
88	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
89	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
90	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.print(strValue);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  out.print(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  out.print(strValue);  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
91	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.print(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
92	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
93	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
94	[BUG]  [BUGGY]  this.print(strValue,  newRecord,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  newRecord,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  newRecord,  0,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
95	[BUG]  [BUGGY]  this.print(strValue,  null,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  null,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  null,  null,  0,  strValue.length());	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
96	[BUG]  [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  strValue,  0,  strValue.length()  -  1);	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
97	[BUG]  [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  null,  strValue,  0,  strValue.length());	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
98	[BUG]  [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  null,  strValue,  0,  strValue.length()  -  1);	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
99	[BUG]  [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  strValue,  0,  strValue.length()  -  2);	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
100	[BUG]  [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  strValue,  0,  strValue.length()  +  1);	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
101	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.println(strValue);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.println(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.println(strValue);  }	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
102	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
103	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.println(strValue);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  out.println(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  out.println(strValue);  }	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
104	[BUG]  [BUGGY]  if(strValue  ==  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
105	[BUG]  [BUGGY]  if(strValue!=  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  out.println(strValue);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
106	[BUG]  [BUGGY]  print(nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString);	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
107	[BUG]  [BUGGY]  print(nullString,  strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  strValue);	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
108	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(strValue);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  print(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  print(strValue);  }	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
109	[BUG]  [BUGGY]  print(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  nullString);	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
110	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  print(strValue);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
111	[BUG]  [BUGGY]  if(strValue  ==  null)  {  print(strValue);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  print(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  print(strValue);  }	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
112	[BUG]  [BUGGY]  if(strValue!=  null)  {  print(strValue);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  print(strValue);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  print(strValue);  }  else  {  out.println();  }	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
113	[BUG]  [BUGGY]  printNull(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(strValue,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(strValue,  nullString,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
114	[BUG]  [BUGGY]  printNull(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(nullString,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(nullString,  strValue,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
115	[BUG]  [BUGGY]  printNull(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(value,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(value,  strValue,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
116	[BUG]  [BUGGY]  printNull(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(strValue,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(strValue,  null,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
117	[BUG]  [BUGGY]  printNull(nullString,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(nullString,  nullValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(nullString,  nullValue,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
118	[BUG]  [BUGGY]  printNull(value,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(value,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(value,  nullString,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
119	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  nullString,  0,  strValue.length()  -  1);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
120	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  nullString,  0,  strValue.length()  -  2);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
121	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  nullString,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  nullString,  0,  strValue.length()  +  1);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
122	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  4);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  nullString,  0,  strValue.length()  -  4);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  nullString,  0,  strValue.length()  -  4);	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
123	[BUG]  [BUGGY]  this.print(nullString,  null,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  1,  strValue.length());	  this.print(strValue,    nullString,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
124	[BUG]  [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  1,  strValue.length()  -  1);	  this.print(strValue,    nullString,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
125	[BUG]  [BUGGY]  this.print(nullString,  strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  strValue,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  1,  strValue.length());	  this.print(strValue,    nullString,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
126	[BUG]  [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  1,  strValue.length()  +  1);	  this.print(strValue,    nullString,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
127	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  1);	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
128	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  +  1);	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
129	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length()  -  2);	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
130	[BUG]  [BUGGY]  Printer  out  =  new  Printer(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(nullString,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(nullString,  strValue,  0,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
131	[BUG]  [BUGGY]  Printer  out  =  new  Printer(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(null,  strValue,  0,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
132	[BUG]  [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  nullString,  0,  strValue.length()  -  1);	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
133	[BUG]  [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  nullString,  0,  strValue.length()  -  2);	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
134	[BUG]  [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  nullString,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  nullString,  0,  strValue.length()  +  1);	  print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
135	[BUG]  [BUGGY]  ||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  ||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	||(strValue!=  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
136	[BUG]  [BUGGY]  if(strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
137	[BUG]  [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  ||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	||(strValue  ==  null  &&  strValue.equals( " ")))  {  throw  new  IllegalArgumentException( " ");  }	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
138	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
139	[BUG]  [BUGGY]  final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  nullString;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
140	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	throw  new  IllegalArgumentException( " ");	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
141	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
142	[BUG]  [BUGGY]  this.print(nullString,  strValue,  0,  value.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  strValue,  0,  value.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  0,  value.length());	  this.print(strValue,    nullString,    0,    value.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
143	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  value.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  0,  value.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  0,  value.length()  -  1);	  this.print(strValue,    nullString,    0,    value.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
144	[BUG]  [BUGGY]  this.print(NullString,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(NullString,  null,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  null,  0,  strValue.length()  -  1);	  this.print(NullString,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
145	[BUG]  [BUGGY]  this.print(String,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(String,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(String,  nullString,  0,  strValue.length());	  this.print(NullString,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
146	[BUG]  [BUGGY]  this.print(NullString,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(NullString,  null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  null,  strValue,  0,  strValue.length());	  this.print(NullString,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
147	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
148	[BUG]  [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
149	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
150	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
151	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  len  =  strValue.length();  i  <  len;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  len  =  strValue.length();  i  <  len;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  len  =  strValue.length();  i  <  len;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
152	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  size  =  strValue.length();  i  <  size;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  size  =  strValue.length();  i  <  size;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  size  =  strValue.length();  i  <  size;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
153	[BUG]  [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
154	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
155	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
156	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('N');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
157	[BUG]  [BUGGY]  this.print(strValue,  nullString,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  value,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  value,  0,  strValue.length());	  this.print(value,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	52	None	replace
158	[BUG]  [BUGGY]  this.print(strValue,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  strValue,  0,  strValue.length());	  this.print(value,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	52	None	replace
159	[BUG]  [BUGGY]  this.print(value,  nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(value,  nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  nullString,  strValue,  0,  strValue.length()  -  1);	  this.print(value,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	52	None	replace
160	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  out.append(strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  out.append(strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();  out.append(strValue);	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
161	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
162	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  out.append(nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  out.append(nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();  out.append(nullString);	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
163	[BUG]  [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
164	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
165	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  out.append(nullString  ==  null?  Constants.EMPTY  :  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  out.append(nullString  ==  null?  Constants.EMPTY  :  nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();  out.append(nullString  ==  null?  Constants.EMPTY  :  nullString);	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
166	[BUG]  [BUGGY]  print(value,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(value,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(value,  nullString,  0,  strValue.length());	  print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
167	[BUG]  [BUGGY]  print(strValue,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(strValue,  value,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  value,  0,  strValue.length());	  print(value,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	16	None	replace
168	[BUG]  [BUGGY]  this.print(null,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  0,  strValue.length()  +  1);	  this.print(null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
169	[BUG]  [BUGGY]  this.print(null,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  0,  strValue.length()  -  2);	  this.print(null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
170	[BUG]  [BUGGY]  printField(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(nullString,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(nullString,  strValue,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
171	[BUG]  [BUGGY]  printField(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(strValue,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(strValue,  nullString,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
172	[BUG]  [BUGGY]  printField(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(value,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(value,  strValue,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
173	[BUG]  [BUGGY]  printField(NullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(NullString,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(NullString,  strValue,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
174	[BUG]  [BUGGY]  printField(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(null,  strValue,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
175	[BUG]  [BUGGY]  printField(name,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(name,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(name,  strValue,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
176	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  0,  strValue.toString());	  this.print(strValue,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
177	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  strValue,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  0,  strValue.toString());	  this.print(null,    strValue,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
178	[BUG]  [BUGGY]  this.print(newRecord,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(newRecord,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(newRecord,  strValue,  0,  strValue.length());	  this.print(null,    strValue,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
179	[BUG]  [BUGGY]  out.print(value);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.print(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.print(value);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
180	[BUG]  [BUGGY]  out.print(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.print(strValue,  nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.print(strValue,  nullString);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
181	[BUG]  [BUGGY]  out.print(strValue  + ".js ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.print(strValue  + ".js ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.print(strValue  + ".js ");	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
182	[BUG]  [BUGGY]  out.print(NullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.print(NullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.print(NullString);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
183	[BUG]  [BUGGY]  this.print(value,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(value,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  null,  0,  strValue.length());	  this.print(strValue,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
184	[BUG]  [BUGGY]  if(newRecord)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
185	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
186	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append('n');	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
187	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
188	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
189	[BUG]  [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
190	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
191	[BUG]  [BUGGY]  final  String  nullString  =  format.getNullString();  if(nullString!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  nullString  =  format.getNullString();  if(nullString!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  nullString  =  format.getNullString();  if(nullString!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
192	[BUG]  [BUGGY]  if(value  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(value  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(value  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
193	[BUG]  [BUGGY]  final  String  strValue  =  format.getNullString();  out.append(strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  format.getNullString();  out.append(strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  format.getNullString();  out.append(strValue);	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
194	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString);  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
195	[BUG]  [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  out.append(null);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  out.append(null);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  final  String  nullString  =  format.getNullString();  out.append(null);  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
196	[BUG]  [BUGGY]  this.print(null,  strValue,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  strValue,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  1,  strValue.length());	  this.print(null,    strValue,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
197	[BUG]  [BUGGY]  this.print(nullString,  strValue,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  strValue,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  0,  strValue.toString());	  this.print(nullString,    strValue,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
198	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  len  =  strValue.length();  i  <  len;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  len  =  strValue.length();  i  <  len;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0,  len  =  strValue.length();  i  <  len;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
199	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  size  =  strValue.length();  i  <  size;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0,  size  =  strValue.length();  i  <  size;  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0,  size  =  strValue.length();  i  <  size;  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
200	[BUG]  [BUGGY]  this.print(null,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  1,  strValue.length());	  this.print(strValue,    nullString,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
201	[BUG]  [BUGGY]  this.print(strValue,  nullString,  1,  strValue.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  1,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  1,  strValue.toString());	  this.print(strValue,    nullString,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
202	[BUG]  [BUGGY]  this.print(value,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(value,  nullString,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  nullString,  1,  strValue.length());	  this.print(strValue,    nullString,    1,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
203	[BUG]  [BUGGY]  this.print(nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  0,  strValue.toString());	  this.print(nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	24	None	replace
204	[BUG]  [BUGGY]  out.println(value);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.println(value);	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
205	[BUG]  [BUGGY]  out.println(strValue  + ".js ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.println(strValue  + ".js ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.println(strValue  + ".js ");	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
206	[BUG]  [BUGGY]  out.println(strValue,  nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.println(strValue,  nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.println(strValue,  nullString);	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
207	[BUG]  [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  null,  strValue,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  null,  strValue,  0,  strValue.length()  -  2);	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
208	[BUG]  [BUGGY]  this.print(value,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(value,  null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  null,  strValue,  0,  strValue.length());	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
209	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString);  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
210	[BUG]  [BUGGY]  Printer  out  =  new  Printer(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(null,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(null,  nullString,  0,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
211	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  0,  strValue.toString());	  this.print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	4	None	replace
212	[BUG]  [BUGGY]  out.append(nullString);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.append(nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append(nullString);	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
213	[BUG]  [BUGGY]  out.append(value);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.append(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append(value);	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
214	[BUG]  [BUGGY]  out.append('ufffd');  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.append('ufffd');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append('ufffd');	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
215	[BUG]  [BUGGY]  out.append( "n ");  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.append( "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append( "n ");	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
216	[BUG]  [BUGGY]  out.append('  ');  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.append('  ');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append('  ');	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
217	[BUG]  [BUGGY]  this.print(null,  value,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  value,  nullString,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  value,  nullString,  strValue,  0,  strValue.length());	  this.print(null,    nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	53	None	replace
218	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
219	[BUG]  [BUGGY]  print(null,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  strValue,  0,  strValue.length()  -  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  strValue,  0,  strValue.length()  -  2);	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
220	[BUG]  [BUGGY]  print(null,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  value,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  value,  0,  strValue.length());	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
221	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  strValue;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  strValue;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  strValue;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
222	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  strValue.toString();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  strValue.toString();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.EMPTY  :  strValue.toString();	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
223	[BUG]  [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NULL  :  strValue;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  nullString  ==  null?  Constants.NULL  :  strValue;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  nullString  ==  null?  Constants.NULL  :  strValue;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
224	[BUG]  [BUGGY]  final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  strValue;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  strValue;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  nullString!=  null?  Constants.EMPTY  :  strValue;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
225	[BUG]  [BUGGY]  this.print(NullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(NullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
226	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  value.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  strValue,  0,  value.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  0,  value.length());	  this.print(strValue,    nullString,    0,    value.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
227	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  0,  strValue.toString());	  this.print(nullString,    null,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
228	[BUG]  [BUGGY]  print(null,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  nullString,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  nullString,  strValue,  0,  strValue.length());	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
229	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  nullString,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  nullString,  0,  strValue.toString());	  print(null,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	40	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append(',');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
231	[BUG]  [BUGGY]  this.print(nullString,  null,  strValue.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  strValue.toString());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
232	[BUG]  [BUGGY]  this.print(strValue,  nullString,  strValue  ==  null?  Constants.NULL  :  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  strValue  ==  null?  Constants.NULL  :  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  strValue  ==  null?  Constants.NULL  :  strValue.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
233	[BUG]  [BUGGY]  this.print(null,  nullString,  strValue.toString());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  strValue.toString());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
234	[BUG]  [BUGGY]  this.print0(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print0(strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print0(strValue,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    4);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
235	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
236	[BUG]  [BUGGY]  print(nullString,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  null,  strValue,  0,  strValue.length());	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
237	[BUG]  [BUGGY]  print(nullString,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  null,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  null,  0,  strValue.length()  -  1);	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
238	[BUG]  [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
239	[BUG]  [BUGGY]  if(value  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(value  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(value  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
240	[BUG]  [BUGGY]  this.print(null,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  0,  strValue.toString());	  this.print(null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
241	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
242	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null  ||  strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null  ||  strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
243	[BUG]  [BUGGY]  printNull(strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(strValue);	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
244	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue);	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
245	[BUG]  [BUGGY]  print(null,  strValue);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  strValue);	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
246	[BUG]  [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null  ||  strValue.length()  ==  0)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null  ||  strValue.length()  ==  0)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
247	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( ", ");  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
248	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  strValue.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  0,  strValue.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  0,  strValue.toString());	  this.print(strValue,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
249	[BUG]  [BUGGY]  this.print(trValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(trValue,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(trValue,  nullString,  0,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
250	[BUG]  [BUGGY]  if(newRecord)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
251	[BUG]  [BUGGY]  printNull(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull(null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(null,  strValue,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
252	[BUG]  [BUGGY]  printEmpty(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printEmpty(strValue,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printEmpty(strValue,  nullString,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
253	[BUG]  [BUGGY]  printField(out,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(out,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(out,  strValue,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
254	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.trim().length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  strValue,  0,  strValue.trim().length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  0,  strValue.trim().length());	  this.print(null,    strValue,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
255	[BUG]  [BUGGY]  this.print(null,  null,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  null,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  null,  strValue.length());	  this.print(null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
256	[BUG]  [BUGGY]  this.print(null,  nullString,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  nullString,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  strValue.length());	  this.print(null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
257	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
258	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append( ", ");  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
259	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  out.append(strValu  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  out.append(strValu  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  out.append(strValu	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
260	[BUG]  [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append(',');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
261	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append(',');    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
262	[BUG]  [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
263	[BUG]  [BUGGY]  if(!newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(!newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(!newRecord)  {  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
264	[BUG]  [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null  ||  strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null  ||  strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
265	[BUG]  [BUGGY]  if(strValue  ==  null)  {  final  String  strValue  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  final  String  strValue  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  final  String  strValue  =  format.getNullString();  if(strValue!=  null)  {  return;  }	  if(strValue    ==    null)    {    final    String    nullString    =    format.getNullString();    if(strValue!=    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
266	[BUG]  [BUGGY]  print(null,  strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(null,  strValue,  0,  strValue.length()  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  strValue,  0,  strValue.length()  +  1);	  print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
267	[BUG]  [BUGGY]  this.printLabel(strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.printLabel(strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.printLabel(strValue,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    4);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
268	[BUG]  [BUGGY]  this.print(strValue,  0.01,  strValue.length());  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  0.01,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  0.01,  strValue.length());	  this.print(strValue,    0,    strValue.length()    -    4);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
269	[BUG]  [BUGGY]  this.print(NullString,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(NullString,  nullString,  0,  strValue.length()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  nullString,  0,  strValue.length()  -  1);	  this.print(NullString,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	38	None	replace
270	[BUG]  [BUGGY]  out.print(strValue  + ": "  +  nullString);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.print(strValue  + ": "  +  nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.print(strValue  + ": "  +  nullString);	  out.print(strValue);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
271	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  nullValue,  0,  strValue.length());	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
272	[BUG]  [BUGGY]  print(nullString,  nullValue,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  print(nullString,  nullValue,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  nullValue,  strValue,  0,  strValue.length());	  print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	15	None	replace
273	[BUG]  [BUGGY]  out.append( ", ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.append( ", ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append( ", ");	  out.append(strValue);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
274	[BUG]  [BUGGY]  this.print(strValue,  null,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  null,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  null,  1,  strValue.length());	  this.print(strValue,    null,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
275	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('N');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('N');  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
276	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append( ", ");  }	  if(strValue!=    null)    {    for(int    i    =    0,    length    =    strValue.length();    i    <    length;    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
277	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.equals( " "))  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.equals( " "))  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.equals( " "))  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
278	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
279	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append( ", ");  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue;    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
280	[BUG]  [BUGGY]  out.println(strValue  + ": "  +  nullString);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  out.println(strValue  + ": "  +  nullString);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.println(strValue  + ": "  +  nullString);	  out.println(strValue);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
281	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append( "n ");  }	  if(strValue    ==    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
282	[BUG]  [BUGGY]  this.println(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.println(strValue,  null,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.println(strValue,  null,  0,  strValue.length());	  this.print(nullString,    null,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
283	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.trim().length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  null,  0,  strValue.trim().length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  0,  strValue.trim().length());	  this.print(nullString,    null,    0,    strValue.length()    -    1);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
284	[BUG]  [BUGGY]  printEscaped(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printEscaped(strValue,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printEscaped(strValue,  nullString,  0,  strValue.length());	  printNull(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
285	[BUG]  [BUGGY]  printEscaped(strValue);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printEscaped(strValue);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printEscaped(strValue);	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
286	[BUG]  [BUGGY]  printNull();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printNull();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull();	  print(strValue);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
287	[BUG]  [BUGGY]  this.print(strValue,  nullString,  10,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  10,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  10,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    +    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
288	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null?  Constants.EMPTY  :  nullString;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
289	[BUG]  [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString  ==  null?  Constants.EMPTY  :  nullString);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString  ==  null?  Constants.EMPTY  :  nullString);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(nullString  ==  null?  Constants.EMPTY  :  nullString);  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    out.append(strValue);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
290	[BUG]  [BUGGY]  this.println(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.println(strValue,  nullString,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.println(strValue,  nullString,  0,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
291	[BUG]  [BUGGY]  this.print(strValue,  nullString,  2,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  nullString,  2,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  2,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
292	[BUG]  [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
293	[BUG]  [BUGGY]  if(!newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(!newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(!newRecord)  {  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
294	[BUG]  [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null  ||  strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null  ||  strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null  ||  strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
295	[BUG]  [BUGGY]  if(strValue  ==  null)  {  final  String  strValue  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue  ==  null)  {  final  String  strValue  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  final  String  strValue  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	  if(strValue!=    null)    {    final    String    nullString    =    format.getNullString();    if(strValue    ==    null)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
296	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append( "n ");  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
297	[BUG]  [BUGGY]  this.print(value,  nullString,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(value,  nullString,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  nullString,  strValue.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
298	[BUG]  [BUGGY]  this.print(nullString,  strValue,  value.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  strValue,  value.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  value.length());	  this.print(strValue,    nullString,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	55	None	replace
299	[BUG]  [BUGGY]  final  String  strValue  =  strValue  ==  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  strValue  ==  null?  Constants.EMPTY  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  strValue  ==  null?  Constants.EMPTY  :  nullString;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
300	[BUG]  [BUGGY]  final  String  strValue  =  strValue!=  null?  Constants.EMPTY  :  nullString;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  strValue!=  null?  Constants.EMPTY  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  strValue!=  null?  Constants.EMPTY  :  nullString;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
301	[BUG]  [BUGGY]  final  String  strValue  =  strValue  ==  null?  Constants.NULL  :  nullString;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  strValue  ==  null?  Constants.NULL  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  strValue  ==  null?  Constants.NULL  :  nullString;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
302	[BUG]  [BUGGY]  final  String  strValue  =  strValue!=  null?  Constants.NULL  :  nullString;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  strValue!=  null?  Constants.NULL  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  strValue!=  null?  Constants.NULL  :  nullString;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
303	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Thread.currentThread().interrupt();	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
304	[BUG]  [BUGGY]  final  String  strValue  =  strValue  ==  null?  Constants.NONE  :  nullString;  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  final  String  strValue  =  strValue  ==  null?  Constants.NONE  :  nullString;  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	final  String  strValue  =  strValue  ==  null?  Constants.NONE  :  nullString;	  if(strValue!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
305	[BUG]  [BUGGY]  this.print(null,  strValue,  10,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(null,  strValue,  10,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  10,  strValue.length());	  this.print(null,    strValue,    0,    strValue.length()    -    2);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
306	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  1,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  1,  strValue.length());	  Printer    out    =    new    Printer(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	56	None	replace
307	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.length()  >  0)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
308	[BUG]  [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	while(strValue!=  null  &&  strValue.isEmpty())  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }	  if(strValue!=    null)    {    for(int    i    =    0;    i    <    strValue.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
309	[BUG]  [BUGGY]  printField(this,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  printField(this,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(this,  strValue,  0,  strValue.length());	  printField(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
310	[BUG]  [BUGGY]  this.print(nullString,  nullValue,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(nullString,  nullValue,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  nullValue,  strValue,  0,  strValue.length());	  this.print(nullString,    nullValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
311	[BUG]  [BUGGY]  this.print(strValue,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }      [BUGGY]  this.print(strValue,  null,  strValue,  0,  strValue.length());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  null,  strValue,  0,  strValue.length());	  this.print(nullString,    null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	54	None	replace
