bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  null,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  0,  strValue.length());	  this.print(value,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  value.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  nullString,  0,  value.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  0,  value.length());	  this.print(value,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  print(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  print(strValue,  nullString,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue,  nullString,  0,  strValue.length());	  this.print(value,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  this.print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(null,  nullString,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  0,  strValue.length());	  this.print(value,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  this.print(value,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(value,  nullString,  0,  strValue.length()  -  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  nullString,  0,  strValue.length()  -  1);	  this.print(value,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  print(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  print(strValue);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(strValue);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  if(strValue!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
11	[BUG]  [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  for(int  i  =  0;  i  <  strValue.length();  i++)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
12	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue.length();  ++i)  {  out.append(',');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
13	[BUG]  [BUGGY]  print(nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  print(nullString,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  strValue,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  print(null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  print(null,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  strValue,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  print(nullString,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  print(nullString,  nullValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(nullString,  nullValue,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  print(value,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  print(value,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(value,  strValue,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  nullValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  nullValue,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
18	[BUG]  [BUGGY]  this.print(NullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(NullString,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  strValue,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  0,  strValue.length()  -  1);	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  this.print(strValue,  null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  null,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  null,  0,  strValue.length());	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  +  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  0,  strValue.length()  +  1);	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(null,  strValue,  0,  strValue.length()  -  2);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  strValue,  0,  strValue.length()  -  2);	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  0,  strValue.length()  -  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  0,  strValue.length()  -  1);	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  this.print(nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
25	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  0,  strValue.length()  +  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  0,  strValue.length()  +  1);	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  0,  strValue.length()  -  2);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  0,  strValue.length()  -  2);	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  this.print(strValue,  0,  strValue.length()  -  4);  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  0,  strValue.length()  -  4);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  0,  strValue.length()  -  4);	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  -  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  0,  strValue.length()  -  1);	  this.print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
29	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  +  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  0,  strValue.length()  +  1);	  this.print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
30	[BUG]  [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  nullString,  0,  strValue.length()  -  2);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  0,  strValue.length()  -  2);	  this.print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
31	[BUG]  [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  -  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  0,  strValue.length()  -  1);	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  +  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  0,  strValue.length()  +  1);	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  -  2);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  strValue,  0,  strValue.length()  -  2);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  strValue,  0,  strValue.length()  -  2);	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  this.print(nullString,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  value,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  value,  0,  strValue.length());	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  -  1);  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  null,  0,  strValue.length()  -  1);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  0,  strValue.length()  -  1);	  this.print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  this.print(null,  value,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(null,  value,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  value,  0,  strValue.length());	  this.print(null,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  this.print(nullString,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  nullString,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  nullString,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
38	[BUG]  [BUGGY]  this.print(NullString,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(NullString,  nullString,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(NullString,  nullString,  0,  strValue.length());	  this.print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]  printNull(strValue,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  printNull(strValue,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printNull(strValue,  strValue,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  print(null,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  print(null,  nullString,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	print(null,  nullString,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  out.print(strValue);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  out.print(strValue);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.print(strValue);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
42	[BUG]  [BUGGY]  out.println(strValue);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  out.println(strValue);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.println(strValue);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0;  i  <  strValue;  i++)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
44	[BUG]  [BUGGY]  out.append(strValue);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  out.append(strValue);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	out.append(strValue);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
45	[BUG]  [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  for(int  i  =  0,  length  =  strValue.length();  i  <  length;  ++i)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  this.print(null,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(null,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  0,  strValue.length());	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  out.append(strValue);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
49	[BUG]  [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue  ==  null)  {  final  String  nullString  =  format.getNullString();  if(strValue!=  null)  {  return;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	if(strValue!=  null)  {  final  String  nullString  =  format.getNullString();  if(strValue  ==  null)  {  return;  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  nullString,  1,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  1,  strValue.length());	  this.print(strValue,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	1	None	replace
52	[BUG]  [BUGGY]  this.print(value,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(value,  nullString,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(value,  nullString,  strValue,  0,  strValue.length());	  this.print(value,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(null,  nullString,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(null,  nullString,  strValue,  0,  strValue.length());	  this.print(value,    nullString,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(nullString,  null,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(nullString,  null,  strValue,  0,  strValue.length());	  this.print(nullString,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	3	None	replace
55	[BUG]  [BUGGY]  this.print(strValue,  nullString,  strValue.length());  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  this.print(strValue,  nullString,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	this.print(strValue,  nullString,  strValue.length());	  this.print(strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	6	None	replace
56	[BUG]  [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	Printer  out  =  new  Printer(strValue,  nullString,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  printField(strValue,  strValue,  0,  strValue.length());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  strValue  =  value.toString();  }    [BUGGY]  printField(strValue,  strValue,  0,  strValue.length());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	106	106	1	replace	printField(strValue,  strValue,  0,  strValue.length());	  print(strValue,    strValue,    0,    strValue.length());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
