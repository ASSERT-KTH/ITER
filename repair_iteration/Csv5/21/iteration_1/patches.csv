bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  final  String  recordSeparator  =  recordSeparator.trim();  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.trim();	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase();  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  String  recordSeparator  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  String  recordSeparator  =  recordSeparator.toLowerCase();  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
16	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
17	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
18	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
19	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
20	[BUG]  [BUGGY]  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  println(recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	println(recordSeparator);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
26	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(out,  recordSeparator);	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
27	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "null ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "null ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "null ");  }	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
31	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
32	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  - ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( "  - ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  - ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  out.append(recordSeparator).append( "# ");  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( "# ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "# ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
34	[BUG]  [BUGGY]  out.append(recordSeparator).append( "> ");  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( "> ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "> ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
35	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
36	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(out,  recordSeparator);	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
38	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
39	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  out.append(recordSeparator).append( ", ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( ", ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( ", ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
44	[BUG]  [BUGGY]  out.append(recordSeparator).append( "] ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( "] ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "] ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
45	[BUG]  [BUGGY]  out.append(recordSeparator).append( "   ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( "   ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "   ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
48	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.println();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
49	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.trim();  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.trim();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.trim();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
50	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
51	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  println();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
52	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "] ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "] ");  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "' ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "' ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "' ");  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
54	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
55	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
56	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(out,  recordSeparator);	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
59	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(out,  recordSeparator);	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  = ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( "  = ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  = ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
62	[BUG]  [BUGGY]  out.append(recordSeparator).append( ": ");  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( ": ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( ": ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  => ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  out.append(recordSeparator).append( "  => ");  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  => ");	  out.append(recordSeparator).append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append( ", ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append( ", ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator.append( ", ");  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
65	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  FormatUtils.println(recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  print(recordSeparator);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  print(recordSeparator);  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	print(recordSeparator);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(RecordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append(RecordSeparator.toString());  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(RecordSeparator.toString());  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
68	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
70	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
71	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  return;  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  return;  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  return;  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
72	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
73	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( ", ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "n ");  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
76	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
77	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();    [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]    newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
