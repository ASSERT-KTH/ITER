bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.append( "null ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "null ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "null ");	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "   ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "   ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
6	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "# ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "# ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
7	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( ",   ");  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( ",   ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( ",   ");  }	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
8	[BUG]  [BUGGY]  out.append( ", ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( ", ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( ", ");	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
9	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
14	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator,  out);	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
15	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(out,  recordSeparator));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(out,  recordSeparator));  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(out,  recordSeparator));	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
16	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
17	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator,  quote);	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
18	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
19	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator);	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
20	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
21	[BUG]  [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  >=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
22	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
23	[BUG]  [BUGGY]  if(newRecord!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
24	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordS  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordS  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordS	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
25	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
26	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(newRecord);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
27	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
28	[BUG]  [BUGGY]  out.append( "' ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "' ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "' ");	  if(recordSeparator!=    null)    {    out.append(   "'   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
29	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "' ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "' ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "' ");  }	  if(recordSeparator!=    null)    {    out.append(   "'   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
30	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "' ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "' ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "' ");  }	  if(recordSeparator!=    null)    {    out.append(   "'   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
31	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "' ",  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "' ",  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "' ",  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(   "'   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
32	[BUG]  [BUGGY]  String  recordSeparator  =  this.recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  this.recordSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  this.recordSeparator.toLowerCase();	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
33	[BUG]  [BUGGY]  String  recordSeparator  =  format.toLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  format.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  format.toLowerCase();	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
34	[BUG]  [BUGGY]  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
35	[BUG]  [BUGGY]  String  recordSeparator  =  fileSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  fileSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  fileSeparator.toLowerCase();	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
36	[BUG]  [BUGGY]  String  recordSeparator  =  recordSeparator.toUpperCase();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  recordSeparator.toUpperCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  recordSeparator.toUpperCase();	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
37	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
38	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
39	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
40	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  recordSeparator  =  recordSeparator;  }  else  {  println();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
41	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
42	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator;  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator;  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator;	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
43	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
44	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "# ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "# ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "# ");  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
45	[BUG]  [BUGGY]  out.append(recordSeparator).append( "#n ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "#n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "#n ");	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
46	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
47	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
48	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "# ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
49	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
50	[BUG]  [BUGGY]  Appendable  out  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  Appendable  out  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	Appendable  out  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
51	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(recordSeparator,  out);	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
52	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
53	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
54	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
55	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
56	[BUG]  [BUGGY]  out.append(recordSeparator).append( "null ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "null ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "null ");	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
57	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "null ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
58	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator).append( "null ");  }  else  {  println();  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
59	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append( "null ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append(recordSeparator).append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append(recordSeparator).append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
60	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
61	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
62	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
63	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
64	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( ": ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( ": ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( ": ");  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
65	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
66	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  println();  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
67	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
68	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ",  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ",  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ",  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
70	[BUG]  [BUGGY]  out.append( "] ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "] ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "] ");	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
71	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "] ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
72	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "] ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( "] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
73	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[] ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "[] ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "[] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
74	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
76	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('N');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('N');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
77	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n').append(quote);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n').append(quote);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('n').append(quote);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
78	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
79	[BUG]  [BUGGY]  recordSeparator  =  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  recordSeparator  =  recordSeparator.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	recordSeparator  =  recordSeparator.trim();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
80	[BUG]  [BUGGY]  RecordSeparator  recordSeparator  =  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  RecordSeparator  recordSeparator  =  recordSeparator.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	RecordSeparator  recordSeparator  =  recordSeparator.trim();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
81	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.trim();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.trim();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.trim();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
82	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toString();  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toString();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toString();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
83	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  RecordSeparator.trim();  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  RecordSeparator.trim();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  RecordSeparator.trim();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
84	[BUG]  [BUGGY]  println(recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	println(recordSeparator,  quote);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
85	[BUG]  [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  println(recordSeparator);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
86	[BUG]  [BUGGY]  println(recordSeparator.toLowerCase());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator.toLowerCase());  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	println(recordSeparator.toLowerCase());	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
87	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  println(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  println(recordSeparator);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
88	[BUG]  [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  else  println();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  println(recordSeparator);  else  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  println(recordSeparator);  else  println();  }	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
89	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
90	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
91	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
92	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
93	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  => ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  => ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  => ");  }	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
94	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
95	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
96	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
98	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('N');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('N');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('N');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
99	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n').append(quote);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n').append(quote);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n').append(quote);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
100	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
101	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "] ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "] ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "] ");  }	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
102	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
103	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "] ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
104	[BUG]  [BUGGY]  recordSeparator  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  recordSeparator  =  recordSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	recordSeparator  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
105	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
106	[BUG]  [BUGGY]  RecordSeparator  recordSeparator  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  RecordSeparator  recordSeparator  =  recordSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	RecordSeparator  recordSeparator  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
107	[BUG]  [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
108	[BUG]  [BUGGY]  this.recordSeparator  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  this.recordSeparator  =  recordSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	this.recordSeparator  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
109	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
110	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
111	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
112	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
113	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( ", ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append( ", ");  }	  if(recordSeparator    ==    null)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
114	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(recordSeparator,  out);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
115	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(out,  recordSeparator,  quote);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
116	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(println,  recordSeparator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(println,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(println,  recordSeparator);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
117	[BUG]  [BUGGY]  TextUtils.writeStringInteger(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writeStringInteger(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writeStringInteger(recordSeparator,  out);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
118	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  newRecord);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(out,  recordSeparator,  newRecord);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
119	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(newRecord,  recordSeparator);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(newRecord,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(newRecord,  recordSeparator);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
120	[BUG]  [BUGGY]  TextUtils.writeString(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writeString(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writeString(recordSeparator,  out);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
121	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
122	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
123	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
124	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
125	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.trim();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  this.recordSeparator.trim();	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
126	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : " ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : " ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : " ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
127	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  null  :  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  null  :  recordSeparator.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator  ==  null?  null  :  recordSeparator.trim();	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
128	[BUG]  [BUGGY]  final  String  recordSeparator  =  getRecordSeparator();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  getRecordSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  getRecordSeparator();	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
129	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.trim();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.trim();	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
130	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  =  n ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  =  n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  =  n ");	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
131	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  =   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  =   ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  =   ");  }	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
132	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  =  ' ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  =  ' ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  =  ' ");	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
133	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  =   ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  =   ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  =   ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
134	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.toLowerCase();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.toLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
135	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  this.recordSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  this.recordSeparator.toLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
136	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.toLowerCase(recordSeparator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.toLowerCase(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.toLowerCase(recordSeparator);	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
137	[BUG]  [BUGGY]  final  String  recordSeparator  =  fileSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  fileSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  fileSeparator.toLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
138	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
139	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
140	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
141	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
142	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  recordSeparator  =  recordSeparator;  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
143	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(out,  recordSeparator,  quote);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
144	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
145	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
146	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(println,  recordSeparator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(println,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(println,  recordSeparator);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
147	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(newRecord,  recordSeparator);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(newRecord,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(newRecord,  recordSeparator);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
148	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
149	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(out,  recordSeparator,  quote);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
150	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(recordSeparator,  out);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
151	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(out,  recordSeparator,  newRecord);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
152	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  TextUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  TextUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  TextUtils.appendPaddedInteger(out,  recordSeparator);  }	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
153	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(println,  recordSeparator);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(println,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(println,  recordSeparator);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
154	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  TextUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  TextUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  TextUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  println();  }	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
155	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
156	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
157	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  println(recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
158	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator,  quote);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
159	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + ": "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + ": "  +  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator  + ": "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
160	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "n ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator  + "n ");	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
161	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + ", "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + ", "  +  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator  + ", "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
162	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator,  out);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
163	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "] ");  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "] ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator  + "] ");	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
164	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  println(recordSeparator);  }  else  {  out.println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  println(recordSeparator);  }  else  {  out.println();  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
165	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
166	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator.append( ", ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  recordSeparator.append( ", ");  }	  if(recordSeparator!=    null)    {    recordSeparator.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
167	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append( ",n ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append( ",n ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator.append( ",n ");  }	  if(recordSeparator!=    null)    {    recordSeparator.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
168	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);	  if(recordSeparator!=    null)    {    recordSeparator.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
169	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toString();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toString();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.toString();	  if(recordSeparator!=    null)    {    recordSeparator.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
170	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
171	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
172	[BUG]  [BUGGY]  print(recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  print(recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	print(recordSeparator,  quote);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
173	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  print(recordSeparator);  }	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
174	[BUG]  [BUGGY]  if(recordSeparator!=  null)  print(recordSeparator);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  print(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  print(recordSeparator);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
175	[BUG]  [BUGGY]  if(recordSeparator!=  null)  print(recordSeparator);  else  println();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  print(recordSeparator);  else  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  print(recordSeparator);  else  println();  }	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
176	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.println();  }	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
177	[BUG]  [BUGGY]  if(recordSeparator!=  null)  print(recordSeparator);  else  println();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  print(recordSeparator);  else  println();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  print(recordSeparator);  else  println();	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
178	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
179	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
180	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append( "null ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
181	[BUG]  [BUGGY]  out.append(recordSeparator).append( ",n ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( ",n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( ",n ");	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
182	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ", ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ", ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ", ");  }	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
183	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ", ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ", ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ", ");  }  else  {  println();  }	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
184	[BUG]  [BUGGY]  out.append(recordSeparator).append( ",' ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( ",' ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( ",' ");	  out.append(recordSeparator).append(   ",   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
185	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
186	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
187	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
189	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator,  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator,  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator,  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
190	[BUG]  [BUGGY]  Appendable  out.append(recordSeparator).append( "null ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  Appendable  out.append(recordSeparator).append( "null ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	Appendable  out.append(recordSeparator).append( "null ");	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
191	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   ";   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
192	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   ";   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
193	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "; ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "; ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "; ");  }	  if(recordSeparator!=    null)    {    out.append(   ";   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
194	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append( "; ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   ";   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
195	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
196	[BUG]  [BUGGY]  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
197	[BUG]  [BUGGY]  println();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	println();	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
198	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
199	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
200	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()  ==  0)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
201	[BUG]  [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null  ||  recordSeparator.length()!=  0)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
202	[BUG]  [BUGGY]  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
203	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
204	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
205	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
206	[BUG]  [BUGGY]  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length());  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length());  println(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length());  println(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
207	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
208	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
209	[BUG]  [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
210	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(recordSeparator,  out);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
211	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  quote);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  quote);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(out,  recordSeparator,  quote);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
212	[BUG]  [BUGGY]  FormatUtils.copyPaddedInteger(recordSeparator,  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.copyPaddedInteger(recordSeparator,  out);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.copyPaddedInteger(recordSeparator,  out);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
213	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(println,  recordSeparator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(println,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(println,  recordSeparator);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
214	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(newRecord,  recordSeparator);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(newRecord,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(newRecord,  recordSeparator);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
215	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  newRecord);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(out,  recordSeparator,  newRecord);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
216	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(recordSeparator,  recordSeparator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(recordSeparator,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(recordSeparator,  recordSeparator);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
217	[BUG]  [BUGGY]  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
218	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
219	[BUG]  [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
220	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase();  println(recordSeparator);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase();  println(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.toLowerCase();  println(recordSeparator);	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
221	[BUG]  [BUGGY]  if(newRecord!=  false)  {  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  false)  {  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  false)  {  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
222	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
223	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append('n');  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append('n');	  if(recordSeparator!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
224	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
225	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "null ");  }	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
226	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( "n   ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( "n   ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( "n   ");  }	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
227	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "   ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "   ");  }	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
228	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  >  0)  {  out.append( "null ");  }	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
229	[BUG]  [BUGGY]  out.append(recordSeparator.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator.toString());  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator.toString());	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
230	[BUG]  [BUGGY]  out.append(RecordSeparator.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(RecordSeparator.toString());  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(RecordSeparator.toString());	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
231	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator.toString());  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator.toString());  }	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
232	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(RecordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(RecordSeparator.toString());  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(RecordSeparator.toString());  }	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
233	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append(RecordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append(RecordSeparator.toString());  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  out.append(RecordSeparator.toString());  }	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
234	[BUG]  [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  this.format.getRecordSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  this.format.getRecordSeparator();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
235	[BUG]  [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  getFormat().getRecordSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  getFormat().getRecordSeparator();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
236	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRawSeparator();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRawSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getRawSeparator();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
237	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator(format);	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
238	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "n ";  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  + "n ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  + "n ";	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
239	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.getRecordSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.getRecordSeparator();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
240	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
241	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  - ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  - ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  - ");  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
242	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
243	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
244	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
245	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
246	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "> ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "> ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "> ");  }	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
247	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
248	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  println();  }	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
249	[BUG]  [BUGGY]  out.append(recordSeparator).append( ">n ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( ">n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( ">n ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
250	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "> ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
251	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "   ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "   ");  }	  out.append(recordSeparator).append(   "       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
252	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "   ");  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "   ");  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "   ");  }  else  {  println();  }	  out.append(recordSeparator).append(   "       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
253	[BUG]  [BUGGY]  out.append(recordSeparator).append( ";n ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( ";n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( ";n ");	  out.append(recordSeparator).append(   "       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
254	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
255	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  out.append('n');  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
256	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  format.toLowerCase();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
257	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  FormatUtils.toLowerCase(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  FormatUtils.toLowerCase(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  FormatUtils.toLowerCase(recordSeparator);  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
258	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
259	[BUG]  [BUGGY]  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
260	[BUG]  [BUGGY]  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  :  recordSeparator;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  :  recordSeparator;  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  :  recordSeparator;	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
261	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  }   ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  }   ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  }   ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
262	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  <  / ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  <  / ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  <  / ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
263	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  /> ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  /> ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  /> ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
264	[BUG]  [BUGGY]  out.append(recordSeparator).append( ":  n ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( ":  n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( ":  n ");	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
265	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('m');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('m');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('m');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
266	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('r');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('r');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
267	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append('n');  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
268	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  0);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(out,  recordSeparator,  0);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
269	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  false);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(out,  recordSeparator,  false);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
270	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
271	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "   ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "   ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "   ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
272	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ";n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ";n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ";n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   ";   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
273	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ";n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ";n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( ";n ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   ";   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
274	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  record  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  record  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  record	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
275	[BUG]  [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(!quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
276	[BUG]  [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(quote)  {  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
277	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "# ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "# ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "# ");  }	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
278	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator  :  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator  :  recordSeparator.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator  :  recordSeparator.trim();	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
279	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : "n ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : "n ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.trim()  : "n ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
280	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator  :  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator  :  recordSeparator.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator  :  recordSeparator.trim();	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
281	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
282	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  FormatUtils.writePaddedInteger(out,  recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
283	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(newRecordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
284	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.size();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.size();  ++i)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.size();  ++i)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
285	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  printLn(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  printLn(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  printLn(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
286	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.toLowerCase(Locale.ENGLISH);	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
287	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.toUpperCase();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.toUpperCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.toUpperCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
288	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : " ";	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
289	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  null  :  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  null  :  recordSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator  ==  null?  null  :  recordSeparator.toLowerCase();	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
290	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
291	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( ", ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( ", ");  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
292	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.append( "n ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.append( "n ");  }	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
293	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.flush();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.flush();  }	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
294	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.write( "n ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.write( "n ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  print(recordSeparator);  }  else  {  out.write( "n ");  }	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
295	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRecordSeparator()  +  1;  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getRecordSeparator()  +  1;	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
296	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getLabelSeparator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getLabelSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getLabelSeparator();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
297	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator.getRecordSeparator();  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator.getRecordSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator.getRecordSeparator();	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
298	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println();  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  println();  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println();  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
299	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  false);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(out,  recordSeparator,  false);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
300	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  0);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  0);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(out,  recordSeparator,  0);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
301	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( ", ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    out.append(   ",   ");    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
302	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  - "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  - "  +  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  - "  +  recordSeparator);	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
303	[BUG]  [BUGGY]  out.append(recordSeparator).append('  ');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append('  ');  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append('  ');	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
304	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append( "n ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
305	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  0);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(out,  recordSeparator,  0);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
306	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  1);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(out,  recordSeparator,  1);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
307	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(quote);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(quote);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(quote);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
308	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(quote);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(quote);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(quote);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
309	[BUG]  [BUGGY]  println(recordSeparator,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator,  false);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	println(recordSeparator,  false);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
310	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  0);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  0);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(out,  recordSeparator,  0);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
311	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  false);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(out,  recordSeparator,  false);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
312	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  1);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(out,  recordSeparator,  1);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
313	[BUG]  [BUGGY]  out.append(recordSeparator).append( "[] ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "[] ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "[] ");	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
314	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( "   ");  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( "   ");  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( "   ");  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
315	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ").append(recordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append( ", ").append(recordSeparator.toString());  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append( ", ").append(recordSeparator.toString());  }	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
316	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  =>n ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  =>n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  =>n ");	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
317	[BUG]  [BUGGY]  final  String  newRecordSeparator  =  format.getRecordSeparator();  out.append(newRecordSeparator);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  newRecordSeparator  =  format.getRecordSeparator();  out.append(newRecordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  newRecordSeparator  =  format.getRecordSeparator();  out.append(newRecordSeparator);	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
318	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('m');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('m');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('m');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
319	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('#');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('#');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append('#');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
320	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
321	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  else  {  println();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
322	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  FormatUtils.getRecordSeparator(recordSeparator);  }  else  {  println();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
323	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  format.getRecordSeparator();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
324	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  getRecordSeparator();  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  getRecordSeparator();  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  getRecordSeparator();  }  else  {  println();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
325	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  null)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
326	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.trim();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  format.trim();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  format.trim();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
327	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator,  recordSeparator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(recordSeparator,  recordSeparator);	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
328	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println,  recordSeparator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println,  recordSeparator);	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
329	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  else  {  println();  }	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
330	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append(newRecord);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append(newRecord);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append(newRecord);  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
331	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(quote);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(quote);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(quote);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
332	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(quote);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(quote);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(quote);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
333	[BUG]  [BUGGY]  if(quote!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(quote!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(quote!=  null)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
334	[BUG]  [BUGGY]  out.append( "n ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "n ");	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
335	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "n ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
336	[BUG]  [BUGGY]  out.append(recordSeparator).append( "#= ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "#= ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "#= ");	  out.append(recordSeparator).append(   "#   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
337	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "= "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "= "  +  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator  + "= "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
338	[BUG]  [BUGGY]  FormatUtils.println(out,  recordSeparator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(out,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(out,  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
339	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator  +  1);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator  +  1);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator  +  1);  }	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
340	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator;  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
341	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
342	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  fileSeparator;  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  fileSeparator;  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  fileSeparator;  }  else  {  println();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator;    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
343	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "' ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "' ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "' ");  }	  if(recordSeparator!=    null)    {    out.append(   "'   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
344	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  out.append( "' ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  out.append( "' ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  out.append( "' ");  }	  if(recordSeparator!=    null)    {    out.append(   "'   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
345	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(',');  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(',');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(',');  }	  if(recordSeparator!=    null    &&    recordSeparator.length()    >    0)    {    out.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
346	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
347	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator.toString());  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator.toString());  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
348	[BUG]  [BUGGY]  out.append(recordSeparator).append( "[ ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "[ ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "[ ");	  out.append(recordSeparator).append(   "]   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
349	[BUG]  [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "no ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator  ==  null)  {  out.append( "no ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator  ==  null)  {  out.append( "no ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    out.append(   "n   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
350	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
351	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
352	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( "n ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
353	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  recordSeparator.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  recordSeparator.append( ", ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  recordSeparator.append( ", ");  }	  if(recordSeparator!=    null)    {    recordSeparator.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
354	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append(',');  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append(',');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator.append(',');  }	  if(recordSeparator!=    null)    {    recordSeparator.append(   ",   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
355	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(RecordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(RecordSeparator.toString());  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(RecordSeparator.toString());  }	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
356	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(recordSeparator.toString());  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(recordSeparator.toString());  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(recordSeparator.toString());  }	  if(recordSeparator!=    null)    {    out.append(RecordSeparator.toString());    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
357	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(RecordSeparator.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(RecordSeparator.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(RecordSeparator.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
358	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator.append( ", ");  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
359	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  quote)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  quote)  {  final  String  quote  =  recordSeparator.toLowerCase();  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.toLowerCase();    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
360	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(recordSeparator),  recordSeparator);	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
361	[BUG]  [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(recordSeparator));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(recordSeparator));  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  FormatUtils.appendPaddedInteger(println(recordSeparator));	  final    String    recordSeparator    =    FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
362	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  =   " ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  =   " ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  =   " ");	  out.append(recordSeparator).append(   "    =   ");    	non-compiled	[CE]  <identifier>  expected	61	None	replace
363	[BUG]  [BUGGY]  print(recordSeparator,  recordSeparator);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  print(recordSeparator,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	print(recordSeparator,  recordSeparator);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
364	[BUG]  [BUGGY]  print(recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  print(recordSeparator,  newRecord);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	print(recordSeparator,  newRecord);	  print(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
365	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : "  <  unknown> ";  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : "  <  unknown> ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : "  <  unknown> ";	  final    String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
366	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  true);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(out,  recordSeparator,  true);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
367	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(println(recordSeparator));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(println(recordSeparator));  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(println(recordSeparator));	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
368	[BUG]  [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  1);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.appendPaddedInteger(out,  recordSeparator,  1);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.appendPaddedInteger(out,  recordSeparator,  1);	  TextUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	60	None	replace
369	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    FormatUtils.writePaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
370	[BUG]  [BUGGY]  out.append(recordSeparator).append( "  <   ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "  <   ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "  <   ");	  out.append(recordSeparator).append(   ">   ");    	non-compiled	[CE]  <identifier>  expected	34	None	replace
371	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
372	[BUG]  [BUGGY]  out.append(recordSeparator).append('n');  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append('n');  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append('n');	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
373	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
374	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toUpperCase();  }	  if(newRecord    ==    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
375	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append( ", ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append( ", ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
376	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append( "n ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  i++)  {  out.append( "n ");  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    i++)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
377	[BUG]  [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
378	[BUG]  [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
379	[BUG]  [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord)  {  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  return;  }	  if(recordSeparator!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
380	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toUpperCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator  =  recordSeparator.toUpperCase();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
381	[BUG]  [BUGGY]  Record  recordSeparator  =  recordSeparator.toLowerCase();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  Record  recordSeparator  =  recordSeparator.toLowerCase();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	Record  recordSeparator  =  recordSeparator.toLowerCase();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
382	[BUG]  [BUGGY]  Record  recordSeparator  =  recordSeparator.trim();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  Record  recordSeparator  =  recordSeparator.trim();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	Record  recordSeparator  =  recordSeparator.trim();	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
383	[BUG]  [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  recordSeparator  =  recordSeparator.trim();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  recordSeparator  =  recordSeparator.trim();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  ||  recordSeparator.length()  ==  0)  {  recordSeparator  =  recordSeparator.trim();  }	  if(recordSeparator!=    null)    {    recordSeparator    =    recordSeparator.trim();    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
384	[BUG]  [BUGGY]  FormatUtils.println(recordSeparator  + "  - "  +  recordSeparator);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.println(recordSeparator  + "  - "  +  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.println(recordSeparator  + "  - "  +  recordSeparator);	  FormatUtils.println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
385	[BUG]  [BUGGY]  out.append( ";n ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( ";n ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( ";n ");	  if(recordSeparator!=    null)    {    out.append(   ";   ");    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
386	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "] ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "] ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append( "] ");  }	  if(recordSeparator!=    null)    {    out.append(   "]   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
387	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
388	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0)  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0)  {  println();  }	  if(recordSeparator!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
389	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
390	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( ": ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
391	[BUG]  [BUGGY]  out.append( "  : ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "  : ").append(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "  : ").append(recordSeparator);	  out.append(recordSeparator).append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	62	None	replace
392	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append('n');  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  recordSeparator.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  recordSeparator.append('n');  }	  if(recordSeparator    ==    null)    {    out.append(recordSeparator);    }    else    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
393	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
394	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord  ==  false)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
395	[BUG]  [BUGGY]  if(!quote)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(!quote)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(!quote)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
396	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator,  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator,  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator,  recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(recordSeparator!=    null)    {    println(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
397	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  println();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
398	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.writePaddedInteger(out,  recordSeparator,  true);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.writePaddedInteger(out,  recordSeparator,  true);	  FormatUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
399	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator.trim()  : " ";  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator.trim()  : " ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator.trim()  : " ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
400	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toString()  : " ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toString()  : " ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toString()  : " ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
401	[BUG]  [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.substring(0,  recordSeparator.length()  -  1): " ";  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.substring(0,  recordSeparator.length()  -  1): " ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.substring(0,  recordSeparator.length()  -  1): " ";	  final    String    recordSeparator    =    recordSeparator.trim();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
402	[BUG]  [BUGGY]  if(newRecord!=  false)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  false)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  false)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length()  -  1);  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
403	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length());  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length());  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  final  String  quote  =  recordSeparator.substring(0,  recordSeparator.length());  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    final    String    quote    =    recordSeparator.substring(0,    recordSeparator.length()    -    1);    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
404	[BUG]  [BUGGY]  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator.toLowerCase()  : " ";  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator.toLowerCase()  : " ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  recordSeparator  ==  null?  recordSeparator.toLowerCase()  : " ";	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
405	[BUG]  [BUGGY]  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : "  <  unknown> ";  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : "  <  unknown> ";  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	String  recordSeparator  =  recordSeparator!=  null?  recordSeparator.toLowerCase()  : "  <  unknown> ";	  String    recordSeparator    =    recordSeparator.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
406	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator,  quote);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator,  quote);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator,  quote);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
407	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  RecordSeparator.length();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  RecordSeparator.length();  ++i)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  0;  i  <  RecordSeparator.length();  ++i)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
408	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  1;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  for(int  i  =  1;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  for(int  i  =  1;  i  <  recordSeparator.length();  ++i)  {  println(recordSeparator);  }	  if(recordSeparator!=    null)    {    for(int    i    =    0;    i    <    recordSeparator.length();    ++i)    {    println(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
409	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append('n');  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  null)  {  final  String  recordSeparator  =  format.getRecordSeparator();  out.append('n');  }	  if(newRecord!=    null)    {    final    String    recordSeparator    =    format.getRecordSeparator();    out.append(recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
410	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  out.append('n');  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.endsWith( ".js "))  {  out.append('n');  }	  if(recordSeparator!=    null)    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
411	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(recordSeparator).append( "null ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(recordSeparator).append( "null ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  out.append(recordSeparator).append( "null ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
412	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "[null] ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "[null] ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "[null] ");  }	  if(recordSeparator!=    null)    {    out.append(recordSeparator).append(   "null   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
413	[BUG]  [BUGGY]  out.append( "  => ").append(recordSeparator).append( "  => ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "  => ").append(recordSeparator).append( "  => ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "  => ").append(recordSeparator).append( "  => ");	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
414	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
415	[BUG]  [BUGGY]  out.append( "  => ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "  => ").append(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "  => ").append(recordSeparator);	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
416	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  => ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  out.append(recordSeparator).append(   "    =>   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
417	[BUG]  [BUGGY]  out.append( "  - ").append(recordSeparator);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append( "  - ").append(recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append( "  - ").append(recordSeparator);	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
418	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
419	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(recordSeparator).append( "  - ");  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  out.append(recordSeparator).append(   "    -   ");    	non-compiled	[CE]  <identifier>  expected	32	None	replace
420	[BUG]  [BUGGY]  println(recordSeparator,  recordSeparator);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator,  recordSeparator);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	println(recordSeparator,  recordSeparator);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
421	[BUG]  [BUGGY]  println(recordSeparator,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  println(recordSeparator,  newRecord);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	println(recordSeparator,  newRecord);	  println(recordSeparator);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
422	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
423	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  println(recordSeparator);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
424	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  out.append(newRecord);  }  else  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
425	[BUG]  [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(newRecord!=  recordSeparator)  {  out.append(recordSeparator);  }  else  {  recordSeparator  =  recordSeparator.toLowerCase();  }	  if(newRecord!=    null)    {    out.append(recordSeparator);    }    else    {    recordSeparator    =    recordSeparator.toLowerCase();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
426	[BUG]  [BUGGY]  out.append(recordSeparator).append( "; ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  out.append(recordSeparator).append( "; ");  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	out.append(recordSeparator).append( "; ");	  out.append(recordSeparator).append(   "       ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
427	[BUG]  [BUGGY]  if(recordSeparator!=  null)  {  record.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null)  {  record.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null)  {  record.append('n');  }  else  {  recordSeparator  =  recordSeparator;  }	  if(recordSeparator!=    null)    {    out.append('n');    }    else    {    recordSeparator    =    recordSeparator;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
428	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.recordSeparator();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.recordSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.recordSeparator();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
429	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.getRowSeparator();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.getRowSeparator();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.getRowSeparator();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
430	[BUG]  [BUGGY]  final  String  recordSeparator  =  format.toString();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  final  String  recordSeparator  =  format.toString();  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	final  String  recordSeparator  =  format.toString();	  final    String    recordSeparator    =    format.getRecordSeparator();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
431	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(out,  recordSeparator,  false);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(out,  recordSeparator,  false);	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
432	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(println(recordSeparator));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  TextUtils.writePaddedInteger(println(recordSeparator));  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	TextUtils.writePaddedInteger(println(recordSeparator));	  TextUtils.writePaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
433	[BUG]  [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  FormatUtils.appendPaddedInteger(out,  recordSeparator,  true);  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	FormatUtils.appendPaddedInteger(out,  recordSeparator,  true);	  FormatUtils.appendPaddedInteger(out,    recordSeparator);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
434	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  >  0)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
435	[BUG]  [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  println()  throws  IOException  {  final  String  recordSeparator  =  format.getRecordSeparator();      [BUGGY]  if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }  [BUGGY]      newRecord  =  true;  }  [CLASS]  CSVPrinter  [METHOD]  println  [RETURN_TYPE]  void  [VARIABLES]  CSVFormat  format  boolean  newRecord  quote  String  recordSeparator  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	325	325	1	replace	if(recordSeparator!=  null  &&  recordSeparator.length()  ==  0)  {  FormatUtils.appendPaddedInteger(out,  recordSeparator);  }	  if(recordSeparator!=    null)    {    FormatUtils.appendPaddedInteger(out,    recordSeparator);    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
