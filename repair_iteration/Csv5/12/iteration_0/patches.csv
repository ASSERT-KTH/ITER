bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  strValue  =  nullString.toString();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  nullString.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  nullString.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
2	[BUG]  [BUGGY]  strValue  =  value  ==  null?  null  :  value.toString();  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  value  ==  null?  null  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  value  ==  null?  null  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
3	[BUG]  [BUGGY]  strValue  =  value  ==  null?  Constants.EMPTY  :  value.toString();  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  value  ==  null?  Constants.EMPTY  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  value  ==  null?  Constants.EMPTY  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
4	[BUG]  [BUGGY]  strValue  =  value!=  null?  null  :  value.toString();  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  value!=  null?  null  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  value!=  null?  null  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
5	[BUG]  [BUGGY]  strValue  =  value  ==  null?  nullString  :  value.toString();  [CE]  <identifier>  expected  [FE]            AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  value  ==  null?  nullString  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  value  ==  null?  nullString  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
6	[BUG]  [BUGGY]  strValue  =  value!=  null?  nullString  :  value.toString();  [CE]  <identifier>  expected  [FE]              AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  value!=  null?  nullString  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  value!=  null?  nullString  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
7	[BUG]  [BUGGY]  strValue  =  nullString  +  value.toString();  [CE]  <identifier>  expected  [FE]                AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  nullString  +  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  nullString  +  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]    [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	  	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
9	[BUG]  [BUGGY]  strValue  =  value  ==  null?  Constants.NULL  :  value.toString();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  value  ==  null?  Constants.NULL  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  value  ==  null?  Constants.NULL  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
10	[BUG]  [BUGGY]  strValue  =  nullString;  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  nullString;  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  nullString;	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
11	[BUG]  [BUGGY]  strValue  =  value  ==  null?  Constants.NONE  :  value.toString();  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  value  ==  null?  Constants.NONE  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  value  ==  null?  Constants.NONE  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
12	[BUG]  [BUGGY]  strValue  =  nullString  ||  value.toString().length()  ==  0?  null  :  value.toString();  [CE]  <identifier>  expected  [FE]    AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  nullString  ||  value.toString().length()  ==  0?  null  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  nullString  ||  value.toString().length()  ==  0?  null  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
13	[BUG]  [BUGGY]  strValue  =  nullString  ||  value.toString().trim().length()  ==  0?  null  :  value.toString();  [CE]  <identifier>  expected  [FE]      AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  nullString  ||  value.toString().trim().length()  ==  0?  null  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  nullString  ||  value.toString().trim().length()  ==  0?  null  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
14	[BUG]  [BUGGY]  strValue  =  nullString  ||  value.toString().trim().length()!=  0?  null  :  value.toString();  [CE]  <identifier>  expected  [FE]        AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  nullString  ||  value.toString().trim().length()!=  0?  null  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  nullString  ||  value.toString().trim().length()!=  0?  null  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
15	[BUG]  [BUGGY]  strValue  =  nullString  ||  value.toString().length()  ==  0?  Constants.NUMBER  :  value.toString();  [CE]  <identifier>  expected  [FE]          AssertionError  [CONTEXT]  public  void  print(final  Object  value)  throws  IOException  {  String  strValue;  if  (value  ==  null)  {  final  String  nullString  =  format.getNullString();  strValue  =  nullString  ==  null  ?  Constants.EMPTY  :  nullString;  }  else  {  [BUGGY]  strValue  =  nullString  ||  value.toString().length()  ==  0?  Constants.NUMBER  :  value.toString();  [BUGGY]  }  this.print(value,  strValue,  0,  strValue.length());  }  [CLASS]  CSVPrinter  [METHOD]  print  [RETURN_TYPE]  void  Object  value  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  String  nullString  strValue  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	104	104	1	replace	strValue  =  nullString  ||  value.toString().length()  ==  0?  Constants.NUMBER  :  value.toString();	strValue  =  value.toString();  	non-compiled	[CE]  <identifier>  expected	23	None	replace
