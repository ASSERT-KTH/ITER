bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.out  =  format.toExtern();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExtern();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExtern();	  this.out    =    out.toExtern();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
2	[BUG]  [BUGGY]  Assertions.notEmpty(format,  out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(format,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format,  out);	  Assertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
3	[BUG]  [BUGGY]  Assertions.notNull(out,  format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(out,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out,  format);	  Assertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
4	[BUG]  [BUGGY]  Assertions.notNull(format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(format);	  Assertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
5	[BUG]  [BUGGY]  Assertions.notNull(format,  out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(format,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(format,  out);	  Assertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
6	[BUG]  [BUGGY]  Assertions.notEmpty(out,  this.format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,  this.format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  this.format);	  Assertions.notEmpty(out,    format);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
7	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Float();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Float();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Float();	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    new    Rectangle2D.Double();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
8	[BUG]  [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    new    Rectangle2D.Double();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
9	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(0);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(0);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(0);	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    new    Rectangle2D.Double();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
10	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(10);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(10);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(10);	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    new    Rectangle2D.Double();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
11	[BUG]  [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Float();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Float();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Float();	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    new    Rectangle2D.Double();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
12	[BUG]  [BUGGY]  this.out  =  output.toByteArray()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output.toByteArray()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toByteArray()  +  1;	  this.out    =    output.toByteArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,  format);	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
14	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,  newRecord);	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
15	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,   "UTF-8 ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,   "UTF-8 ");	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
16	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,  false);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,  false);	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
17	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,  true);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,  true);	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
18	[BUG]  [BUGGY]  this.out  =  out  +  newRecord;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  +  newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  +  newRecord;	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
19	[BUG]  [BUGGY]  this.out  =  newRecord  +  out.toString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  +  out.toString();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  +  out.toString();	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
20	[BUG]  [BUGGY]  this.out  =  newRecord  +  out.getValue();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  +  out.getValue();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  +  out.getValue();	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
21	[BUG]  [BUGGY]  this.out  =  newRecord  +  out.toCharArray();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  +  out.toCharArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  +  out.toCharArray();	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
22	[BUG]  [BUGGY]  this.out  =  out  *  newRecord;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  *  newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  *  newRecord;	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
23	[BUG]  [BUGGY]  this.out  =  format  +  out;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  +  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  +  out;	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
24	[BUG]  [BUGGY]  this.out  =  newRecord  +  'n';  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  +  'n';  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  +  'n';	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
25	[BUG]  [BUGGY]  this.out  =  format.toPath();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toPath();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toPath();	  this.out    =    out.toPath();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
26	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray();	  this.out    =    record;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  this.out  =  OutputStream.out;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.out;	  this.out    =    record;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
28	[BUG]  [BUGGY]  this.out  =  format.toPlainString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toPlainString();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toPlainString();	  this.out    =    out.toPlainString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
29	[BUG]  [BUGGY]  this.out  =  format.toUpperCase();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toUpperCase();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toUpperCase();	  this.out    =    format.toOut();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  this.out  =  format.toStringArray();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toStringArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toStringArray();	  this.out    =    out.toStringArray();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
31	[BUG]  [BUGGY]  this.out  =  format.getIn();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.getIn();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.getIn();	  this.out    =    out.getIn();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
32	[BUG]  [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
33	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT  +  1;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
34	[BUG]  [BUGGY]  this.out  =  format  ==  null?  DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
35	[BUG]  [BUGGY]  this.out  =  DEFAULT_OUTPUT  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  DEFAULT_OUTPUT  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  DEFAULT_OUTPUT  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
36	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUTE;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUTE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUTE;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
37	[BUG]  [BUGGY]  this.out  =  format!=  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
38	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>(this.record):  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>(this.record):  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>(this.record):  Collections.EMPTY_LIST;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
39	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  FormatUtils.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  FormatUtils.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  FormatUtils.EMPTY_LIST;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
40	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_STRING;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_STRING;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
41	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Lists.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Lists.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Lists.EMPTY_LIST;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
42	[BUG]  [BUGGY]  this.out  =  format.toExternalFormat(this);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalFormat(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalFormat(this);	  this.out    =    out.toExternalFormat(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
43	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(this,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(this,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(this,  newRecord);	  this.out    =    out.toExternalFormat(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
44	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(this,  format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(this,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(this,  format);	  this.out    =    out.toExternalFormat(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
45	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(this,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(this,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(this,  false);	  this.out    =    out.toExternalFormat(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
46	[BUG]  [BUGGY]  this.out  =  out.readFully();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.readFully();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.readFully();	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
47	[BUG]  [BUGGY]  this.out  =  out.readLine();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.readLine();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.readLine();	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
48	[BUG]  [BUGGY]  this.out  =  out.readInt();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.readInt();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.readInt();	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
49	[BUG]  [BUGGY]  this.out  =  out.read(this);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.read(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read(this);	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
50	[BUG]  [BUGGY]  this.out  =  format.read();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.read();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.read();	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
51	[BUG]  [BUGGY]  this.out  =  out.readFully(false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.readFully(false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.readFully(false);	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
52	[BUG]  [BUGGY]  this.out  =(newRecord  ==  null)?  null  :!newRecord;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord  ==  null)?  null  :!newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord  ==  null)?  null  :!newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
53	[BUG]  [BUGGY]  this.out  =(newRecord  ==  null)?  0  :!newRecord;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord  ==  null)?  0  :!newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord  ==  null)?  0  :!newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
54	[BUG]  [BUGGY]  this.out  =(newRecord!=  null)?  null  :!newRecord;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord!=  null)?  null  :!newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord!=  null)?  null  :!newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
55	[BUG]  [BUGGY]  this.out  =(newRecord  ==  null)?  -1  :!newRecord;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord  ==  null)?  -1  :!newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord  ==  null)?  -1  :!newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  this.out  =(newRecord!=  null)?  0  :!newRecord;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord!=  null)?  0  :!newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord!=  null)?  0  :!newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  |  DateTimeUtils.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  |  DateTimeUtils.currentTimeMillis();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING  |  DateTimeUtils.currentTimeMillis();	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
58	[BUG]  [BUGGY]  this.out  =  FormatUtils.DEFAULT_OUT;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.DEFAULT_OUT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.DEFAULT_OUT;	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
59	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  ||  format.equals(newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  ||  format.equals(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING  ||  format.equals(newRecord);	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
60	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  + "n ";  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  + "n ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING  + "n ";	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
61	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  + ": "  +  out.toString();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  + ": "  +  out.toString();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING  + ": "  +  out.toString();	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
62	[BUG]  [BUGGY]  this.out  =  FormatUtils.newInstance();  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.newInstance();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.newInstance();	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
63	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append('n');  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
64	[BUG]  [BUGGY]  Appendable  out  =  new  Appendable(out,  format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Appendable  out  =  new  Appendable(out,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Appendable  out  =  new  Appendable(out,  format);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
65	[BUG]  [BUGGY]  Appendable  out  =  new  Appendable(format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Appendable  out  =  new  Appendable(format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Appendable  out  =  new  Appendable(format);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
66	[BUG]  [BUGGY]  AllRecords.add(out);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  AllRecords.add(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	AllRecords.add(out);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
67	[BUG]  [BUGGY]  out.append(newRecord);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(newRecord);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  Appendable  out  =  new  Appendable(out,  format.toString());  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Appendable  out  =  new  Appendable(out,  format.toString());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Appendable  out  =  new  Appendable(out,  format.toString());	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
69	[BUG]  [BUGGY]  Appendable  out  =  new  Appendable(out.toString());  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Appendable  out  =  new  Appendable(out.toString());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Appendable  out  =  new  Appendable(out.toString());	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
70	[BUG]  [BUGGY]  this.out  =  format.toExternalFormat(true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalFormat(true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalFormat(true);	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
71	[BUG]  [BUGGY]  this.out  =  format.toOutputFormat();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toOutputFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toOutputFormat();	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
72	[BUG]  [BUGGY]  this.out  =  format.toExternalForm(this);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalForm(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalForm(this);	  this.out    =    out.toExternalForm(this);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
73	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(this,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(this,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(this,  newRecord);	  this.out    =    out.toExternalForm(this);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
74	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(this,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(this,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(this,  format);	  this.out    =    out.toExternalForm(this);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
75	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(this,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(this,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(this,  false);	  this.out    =    out.toExternalForm(this);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
76	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(this,  true);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(this,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(this,  true);	  this.out    =    out.toExternalForm(this);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
77	[BUG]  [BUGGY]  this.out  =  format!=  null?  newRecord  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  newRecord  :  format.toCharArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  newRecord  :  format.toCharArray();	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
78	[BUG]  [BUGGY]  this.out  =  format.toLowerCase();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toLowerCase();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toLowerCase();	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
79	[BUG]  [BUGGY]  this.out  =  format.toCharArray()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toCharArray()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toCharArray()  +  1;	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
80	[BUG]  [BUGGY]  this.out  =  format.getOut()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.getOut()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.getOut()  +  1;	  this.out    =    format.getOut();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
81	[BUG]  [BUGGY]  this.out  =  format.getOut()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.getOut()  -  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.getOut()  -  1;	  this.out    =    format.getOut();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
82	[BUG]  [BUGGY]  this.out  =  format.toFront();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toFront();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toFront();	  this.out    =    out.toFront();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
83	[BUG]  [BUGGY]  this.out  =  out.toBoolean();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toBoolean();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toBoolean();	  this.out    =    out.toFront();    	non-compiled	[CE]  <identifier>  expected	43	None	replace
84	[BUG]  [BUGGY]  this.out  =  format  ==  null?  null  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  null  :  format.toFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  null  :  format.toFormat();	  this.out    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
85	[BUG]  [BUGGY]  this.out  =  format!=  null?  new  Record  <  CSVFormat>()  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  new  Record  <  CSVFormat>()  :  format.toFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  new  Record  <  CSVFormat>()  :  format.toFormat();	  this.out    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
86	[BUG]  [BUGGY]  this.out  =  format!=  null?  newRecord  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  newRecord  :  format.toFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  newRecord  :  format.toFormat();	  this.out    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
87	[BUG]  [BUGGY]  this.out  =  format.toLong();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toLong();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toLong();	  this.out    =    format.toInt();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
88	[BUG]  [BUGGY]  this.out  =  format.toExternal();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternal();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternal();	  this.out    =    out.toExternal();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
89	[BUG]  [BUGGY]  this.out  =  out.toExternalField();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalField();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalField();	  this.out    =    out.toExternal();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
90	[BUG]  [BUGGY]  this.out  =  output.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output.toCharArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toCharArray();	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
91	[BUG]  [BUGGY]  this.out  =  FormatUtils.toString(out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toString(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toString(out);	  this.out    =    output.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
92	[BUG]  [BUGGY]  this.out  =  output.toString()  + "n ";  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output.toString()  + "n ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toString()  + "n ";	  this.out    =    output.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
93	[BUG]  [BUGGY]  this.out  =  output.toExternalFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output.toExternalFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toExternalFormat();	  this.out    =    output.toString();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
94	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(this);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(this);	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
95	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(newRecord);	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
96	[BUG]  [BUGGY]  this.out  =  FormatUtils.toOutputFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toOutputFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toOutputFormat();	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
97	[BUG]  [BUGGY]  this.out  =  FormatUtils.toOutputFormat(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toOutputFormat(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toOutputFormat(out);	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
98	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExportedFormat();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExportedFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExportedFormat();	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
99	[BUG]  [BUGGY]  this.out  =  format.toFormat(this);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toFormat(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toFormat(this);	  this.out    =    out.toFormat(this);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
100	[BUG]  [BUGGY]  this.out  =  out.toFormat(this,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toFormat(this,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFormat(this,  newRecord);	  this.out    =    out.toFormat(this);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
101	[BUG]  [BUGGY]  this.out  =  out.toFormat(this,  format);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toFormat(this,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFormat(this,  format);	  this.out    =    out.toFormat(this);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
102	[BUG]  [BUGGY]  this.out  =  out.toFormat(newRecord);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toFormat(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFormat(newRecord);	  this.out    =    out.toFormat(this);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
103	[BUG]  [BUGGY]  Assertions.notNull(newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(newRecord);	  Assertions.notEmpty(newRecord);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
104	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,  format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(newRecord,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(newRecord,  format);	  Assertions.notEmpty(newRecord);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
105	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,  out);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(newRecord,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(newRecord,  out);	  Assertions.notEmpty(newRecord);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
106	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,  null);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(newRecord,  null);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(newRecord,  null);	  Assertions.notEmpty(newRecord);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
107	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord  }  );  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(newRecord  }  );  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(newRecord  }  );	  Assertions.notEmpty(newRecord);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
108	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE  +  1;	  this.out    =    format!=    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
109	[BUG]  [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE  +  1;	  this.out    =    format!=    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
110	[BUG]  [BUGGY]  this.out  =  format  ==  null?  DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;	  this.out    =    format!=    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
111	[BUG]  [BUGGY]  Assertions.notEmpty( "out ");  Assertions.notEmpty(format,   "out ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( "out ");  Assertions.notEmpty(format,   "out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( "out ");  Assertions.notEmpty(format,   "out ");	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
112	[BUG]  [BUGGY]  Assertions.notEmpty( "cSV ");  Assertions.notEmpty(format,   "out ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( "cSV ");  Assertions.notEmpty(format,   "out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( "cSV ");  Assertions.notEmpty(format,   "out ");	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
113	[BUG]  [BUGGY]  Assertions.notEmpty( "n ");  Assertions.notEmpty(format,   "n ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( "n ");  Assertions.notEmpty(format,   "n ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( "n ");  Assertions.notEmpty(format,   "n ");	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
114	[BUG]  [BUGGY]  this.out  =  format.toExtent();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExtent();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExtent();	  this.out    =    out.toExtent();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
115	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('t');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('t');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
116	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append(format);  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
117	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
118	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append('t');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append('t');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
119	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format!=  null)  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format!=  null)  {  out.append(format);  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format!=  null)  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
120	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('N');  }  else  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('N');  }  else  {  out.append('t');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('N');  }  else  {  out.append('t');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
121	[BUG]  [BUGGY]  this.out  =  format.toExternalOutput();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalOutput();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalOutput();	  this.out    =    out.toExternalOutput();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
122	[BUG]  [BUGGY]  this.out  =  out.toOutput();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toOutput();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutput();	  this.out    =    out.toExternalOutput();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
123	[BUG]  [BUGGY]  this.out  =  out.toExternalOutput(true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalOutput(true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalOutput(true);	  this.out    =    out.toExternalOutput();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
124	[BUG]  [BUGGY]  this.out  =  out.toExternalInput();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalInput();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalInput();	  this.out    =    out.toExternalOutput();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
125	[BUG]  [BUGGY]  this.out  =  output.toExternalOutput();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output.toExternalOutput();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toExternalOutput();	  this.out    =    out.toExternalOutput();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
126	[BUG]  [BUGGY]  this.out  =  out.toInputFormat();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toInputFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toInputFormat();	  this.out    =    out.toOutputFormat();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
127	[BUG]  [BUGGY]  this.out  =  format.toExterns();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExterns();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExterns();	  this.out    =    out.toExterns();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
128	[BUG]  [BUGGY]  this.out  =  out.toExterns(true);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExterns(true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExterns(true);	  this.out    =    out.toExterns();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
129	[BUG]  [BUGGY]  this.out  =  out.toExterns(false);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExterns(false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExterns(false);	  this.out    =    out.toExterns();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
130	[BUG]  [BUGGY]  this.out  =  format.toExternalFile();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalFile();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalFile();	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
131	[BUG]  [BUGGY]  this.out  =  out.toOutputFile();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toOutputFile();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutputFile();	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
132	[BUG]  [BUGGY]  this.out  =  out.toFile();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toFile();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFile();	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
133	[BUG]  [BUGGY]  this.out  =  out.toExternalFile(true);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFile(true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFile(true);	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
134	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSV>(out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSV>(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSV>(out);	  this.out    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
135	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSV>(this.record);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSV>(this.record);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSV>(this.record);	  this.out    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
136	[BUG]  [BUGGY]  this.out  =  new  Rectangle  <  CSV>();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Rectangle  <  CSV>();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Rectangle  <  CSV>();	  this.out    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
137	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSV>(1);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSV>(1);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSV>(1);	  this.out    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
138	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSVFormat>(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>(out);	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
139	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>(format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSVFormat>(format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>(format);	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
140	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>(1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSVFormat>(1);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>(1);	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
141	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>(this.record);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSVFormat>(this.record);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>(this.record);	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
142	[BUG]  [BUGGY]  this.out  =  new  Rectangle  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Rectangle  <  CSVFormat>();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Rectangle  <  CSVFormat>();	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
143	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>(0);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSVFormat>(0);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>(0);	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
144	[BUG]  [BUGGY]  this.out  =  format.toString()  + "n ";  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toString()  + "n ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toString()  + "n ";	  this.out    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
145	[BUG]  [BUGGY]  this.out  =  format.toString()  + ";n ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toString()  + ";n ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toString()  + ";n ";	  this.out    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
146	[BUG]  [BUGGY]  this.out  =  format.toByteArray()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toByteArray()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toByteArray()  +  1;	  this.out    =    format.toByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
147	[BUG]  [BUGGY]  this.out  =  format.toArray();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toArray();	  this.out    =    format.toByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
148	[BUG]  [BUGGY]  this.out  =  format.toByteArray(),  out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toByteArray(),  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toByteArray(),  out);	  this.out    =    format.toByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
149	[BUG]  [BUGGY]  this.out  =  out.toArray(new  Rectangle2D.Double());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toArray(new  Rectangle2D.Double());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toArray(new  Rectangle2D.Double());	  this.out    =    out.toArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
150	[BUG]  [BUGGY]  this.out  =  out.toArray(new  Record());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toArray(new  Record());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toArray(new  Record());	  this.out    =    out.toArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
151	[BUG]  [BUGGY]  this.out  =  out.toArray(new  String[]  {  }  );  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toArray(new  String[]  {  }  );  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toArray(new  String[]  {  }  );	  this.out    =    out.toArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
152	[BUG]  [BUGGY]  this.out  =  format.toOutputForm();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toOutputForm();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toOutputForm();	  this.out    =    out.toOutputForm();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
153	[BUG]  [BUGGY]  this.out  =  out.toForm();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toForm();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toForm();	  this.out    =    out.toOutputForm();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
154	[BUG]  [BUGGY]  this.out  =  out.toInputForm();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toInputForm();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toInputForm();	  this.out    =    out.toOutputForm();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
155	[BUG]  [BUGGY]  this.out  =  out.getExternalFormat();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.getExternalFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getExternalFormat();	  this.out    =    out.toExternalFormat()    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
156	[BUG]  [BUGGY]  this.out  =  out.toOutternalFormat();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toOutternalFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutternalFormat();	  this.out    =    out.toExternalFormat()    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
157	[BUG]  [BUGGY]  Assertions.notEmpty( "[ ");  Assertions.notEmpty(format, "format ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( "[ ");  Assertions.notEmpty(format, "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( "[ ");  Assertions.notEmpty(format, "format ");	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
158	[BUG]  [BUGGY]  Assertions.notEmpty( "cSV ");  Assertions.notEmpty(format,   "format ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( "cSV ");  Assertions.notEmpty(format,   "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( "cSV ");  Assertions.notEmpty(format,   "format ");	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
159	[BUG]  [BUGGY]  Assertions.notEmpty( ", ");  Assertions.notEmpty(format,   "format ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( ", ");  Assertions.notEmpty(format,   "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( ", ");  Assertions.notEmpty(format,   "format ");	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
160	[BUG]  [BUGGY]  this.out  =  out.getOut()  *  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.getOut()  *  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getOut()  *  1;	  this.out    =    out.getOut()    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
161	[BUG]  [BUGGY]  this.out  =  out.getOut()  *  2;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.getOut()  *  2;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getOut()  *  2;	  this.out    =    out.getOut()    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
162	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,   "newRecord ");  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(newRecord,   "newRecord ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(newRecord,   "newRecord ");	  Assertions.notEmpty(format,       "newRecord   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
163	[BUG]  [BUGGY]  Assertions.notNull(out,   "newRecord ");  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(out,   "newRecord ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out,   "newRecord ");	  Assertions.notEmpty(format,       "newRecord   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
164	[BUG]  [BUGGY]  Assertions.notNull(format,   "newRecord ");  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(format,   "newRecord ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(format,   "newRecord ");	  Assertions.notEmpty(format,       "newRecord   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
165	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "newRecord ");  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,   "newRecord ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,   "newRecord ");	  Assertions.notEmpty(format,       "newRecord   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
166	[BUG]  [BUGGY]  Assertions.notNull(out);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out);	  Assertions.notEmpty(out);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
167	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  newRecord);	  Assertions.notEmpty(out);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
168	[BUG]  [BUGGY]  Assertions.notNull(out,  newRecord);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out,  newRecord);	  Assertions.notEmpty(out);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
169	[BUG]  [BUGGY]  this.out  =  Format.newInstance(this.record);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.newInstance(this.record);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newInstance(this.record);	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
170	[BUG]  [BUGGY]  this.out  =  Format.newRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.newRecord();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newRecord();	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
171	[BUG]  [BUGGY]  this.out  =  Format.newInstance(System.err);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.newInstance(System.err);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newInstance(System.err);	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
172	[BUG]  [BUGGY]  this.out  =  Format.createInstance();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.createInstance();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.createInstance();	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
173	[BUG]  [BUGGY]  this.out  =  newRecord  <  T>(out);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  <  T>(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  <  T>(out);	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
174	[BUG]  [BUGGY]  this.out  =  newRecord  ==  T>();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  ==  T>();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  ==  T>();	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
175	[BUG]  [BUGGY]  this.out  =  newRecord  <  >();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  <  >();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  <  >();	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
176	[BUG]  [BUGGY]  this.out  =  newRecord  >=  T>();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  >=  T>();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  >=  T>();	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
177	[BUG]  [BUGGY]  this.out  =  newRecord!=  T>();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord!=  T>();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord!=  T>();	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
178	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  format);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
179	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  newRecord);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
180	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  true);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  true);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
181	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  false);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
182	[BUG]  [BUGGY]  this.out  =  FormatUtils.getInputFormat(out,  format);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getInputFormat(out,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getInputFormat(out,  format);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
183	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  null);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  null);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  null);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
184	[BUG]  [BUGGY]  this.out  =  format.toByte();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toByte();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toByte();	  this.out    =    out.toByte();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
185	[BUG]  [BUGGY]  this.out  =  out.toByte()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toByte()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toByte()  +  1;	  this.out    =    out.toByte();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
186	[BUG]  [BUGGY]  this.out  =  out.toUpperCase();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toUpperCase();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toUpperCase();	  this.out    =    out.toByte();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
187	[BUG]  [BUGGY]  Assertions.notEmpty(this.format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(this.format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(this.format);	  Assertions.notNull(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
188	[BUG]  [BUGGY]  Assertions.notEmpty( "format ");  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( "format ");	  Assertions.notNull(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
189	[BUG]  [BUGGY]  Assertions.notEmpty(format, "format ");  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(format, "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format, "format ");	  Assertions.notNull(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
190	[BUG]  [BUGGY]  Assertions.notEmpty(out, "format ");  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out, "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out, "format ");	  Assertions.notNull(out,       "format   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
191	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "format ");  Assertions.notEmpty(format, "format ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,   "format ");  Assertions.notEmpty(format, "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,   "format ");  Assertions.notEmpty(format, "format ");	  Assertions.notNull(out,       "format   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
192	[BUG]  [BUGGY]  Assertions.notEmpty( "  format ");  Assertions.notEmpty(format,   "format ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty( "  format ");  Assertions.notEmpty(format,   "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty( "  format ");  Assertions.notEmpty(format,   "format ");	  Assertions.notNull(out,       "format   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
193	[BUG]  [BUGGY]  this.out  =  format.toPaddedObject();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toPaddedObject();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toPaddedObject();	  this.out    =    out.toPaddedObject();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
194	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
195	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(newRecord  ==  null)  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(newRecord  ==  null)  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(newRecord  ==  null)  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
196	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  if(format  ==  null)  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
197	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('N');  }  else  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('N');  }  else  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('N');  }  else  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
198	[BUG]  [BUGGY]  this.out  =  DEFAULT_EXTENDS;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  DEFAULT_EXTENDS;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  DEFAULT_EXTENDS;	  this.out    =    DEFAULT_NAME;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
199	[BUG]  [BUGGY]  this.out  =  DEFAULT_TYPE;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  DEFAULT_TYPE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  DEFAULT_TYPE;	  this.out    =    DEFAULT_NAME;    	non-compiled	[CE]  <identifier>  expected	40	None	replace
200	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(false);	  this.out    =    out.toExternalFormat(true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
201	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(true,  false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(true,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(true,  false);	  this.out    =    out.toExternalFormat(true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
202	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(true,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(true,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(true,  true);	  this.out    =    out.toExternalFormat(true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
203	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(true,  format);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(true,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(true,  format);	  this.out    =    out.toExternalFormat(true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
204	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(false,  false);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(false,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(false,  false);	  this.out    =    out.toExternalFormat(true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
205	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(false);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(false);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
206	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(true,  false);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(true,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(true,  false);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
207	[BUG]  [BUGGY]  this.out  =  format.toExternalForm(true);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalForm(true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalForm(true);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
208	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(true,  true);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(true,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(true,  true);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
209	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(false,  true);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(false,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(false,  true);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
210	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(false,  false);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(false,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(false,  false);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
211	[BUG]  [BUGGY]  this.out  =  out.toString()  + "/ ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + "/ ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + "/ ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
212	[BUG]  [BUGGY]  this.out  =  out.toString()  + ";n ";  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + ";n ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + ";n ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
213	[BUG]  [BUGGY]  this.out  =  out.toString()  + "   ";  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + "   ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + "   ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
214	[BUG]  [BUGGY]  this.out  =  out.toString()  + ",  format= ";  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + ",  format= ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + ",  format= ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
215	[BUG]  [BUGGY]  this.out  =  out.toString()  + "  - ";  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + "  - ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + "  - ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
216	[BUG]  [BUGGY]  this.out  =  out.toString()  + ",  format   ";  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + ",  format   ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + ",  format   ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
217	[BUG]  [BUGGY]  this.out  =  out.toByteArray()  /  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toByteArray()  /  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toByteArray()  /  1;	  this.out    =    out.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
218	[BUG]  [BUGGY]  this.out  =  out.toByteArray()  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toByteArray()  *  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toByteArray()  *  1;	  this.out    =    out.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
219	[BUG]  [BUGGY]  this.out  =  out.getOut()  /  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.getOut()  /  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getOut()  /  1;	  this.out    =    out.getOut()    +    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
220	[BUG]  [BUGGY]  Assertions.notEmpty(format,  newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(format,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format,  newRecord);	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
221	[BUG]  [BUGGY]  Assertions.notEmpty(format,  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(format,  null);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format,  null);	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
222	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,  format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,  format);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
223	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,  newRecord);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
224	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,  false);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,  false);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
225	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,  true);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,  true);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
226	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(format);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(format);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
227	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(this.format);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(this.format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(this.format);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
228	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(newRecord);  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(newRecord);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
229	[BUG]  [BUGGY]  this.out  =  newRecord  ==  CSV>;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  ==  CSV>;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  ==  CSV>;	  this.out    =    newRecord    <    CSV>;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
230	[BUG]  [BUGGY]  this.out  =  format  <  CSV>;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  <  CSV>;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  <  CSV>;	  this.out    =    newRecord    <    CSV>;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
231	[BUG]  [BUGGY]  this.out  =  newRecord!=  CSV>;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord!=  CSV>;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord!=  CSV>;	  this.out    =    newRecord    <    CSV>;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
232	[BUG]  [BUGGY]  this.out  =  newRecord  >=  CSV>;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  >=  CSV>;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  >=  CSV>;	  this.out    =    newRecord    <    CSV>;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
233	[BUG]  [BUGGY]  this.out  =  format.toPlainInt();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toPlainInt();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toPlainInt();	  this.out    =    out.toPlainInt();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
234	[BUG]  [BUGGY]  this.out  =  out.toPlainByte();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toPlainByte();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPlainByte();	  this.out    =    out.toPlainInt();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
235	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  INVALID_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  INVALID_OUT_OF_RANGE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  INVALID_OUT_OF_RANGE;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
236	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord);  Assertions.notEmpty(format,   "out ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,  newRecord);  Assertions.notEmpty(format,   "out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  newRecord);  Assertions.notEmpty(format,   "out ");	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
237	[BUG]  [BUGGY]  Assertions.notEmpty(out,  null);  Assertions.notEmpty(format,  null);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,  null);  Assertions.notEmpty(format,  null);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  null);  Assertions.notEmpty(format,  null);	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
238	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord,   "out ");  Assertions.notEmpty(format, "out ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(newRecord,   "out ");  Assertions.notEmpty(format, "out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(newRecord,   "out ");  Assertions.notEmpty(format, "out ");	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
239	[BUG]  [BUGGY]  Assertions.notEmpty(out,  null);  Assertions.notEmpty(format,   "out ");  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,  null);  Assertions.notEmpty(format,   "out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  null);  Assertions.notEmpty(format,   "out ");	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
240	[BUG]  [BUGGY]  Assertions.notEmpty(out,  newRecord);  Assertions.notEmpty(format, ",out ");  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,  newRecord);  Assertions.notEmpty(format, ",out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  newRecord);  Assertions.notEmpty(format, ",out ");	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
241	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
242	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
243	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
244	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "native ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "native ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "native ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
245	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "negative ");  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "negative ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "negative ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
246	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out,  format);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
247	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out,  newRecord);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
248	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out,  false);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
249	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(this.format);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(this.format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(this.format);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
250	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(format);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(format);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
251	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  true);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out,  true);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
252	[BUG]  [BUGGY]  this.out  =!this.newRecord;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =!this.newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =!this.newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
253	[BUG]  [BUGGY]  this.out  =(newRecord!=  null)?  -1  :!newRecord;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord!=  null)?  -1  :!newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord!=  null)?  -1  :!newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
254	[BUG]  [BUGGY]  this.out  =  out  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    new    Rectangle2D.Double();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
255	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
256	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  else  {  out.println();  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  else  {  out.println();  }	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
257	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notNull(format,   "format ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notNull(format,   "format ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notNull(format,   "format ");  }	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
258	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  else  {  out.close();  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  }  else  {  out.close();  }	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
259	[BUG]  [BUGGY]  this.out  =  out.toByteArray()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toByteArray()  -  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toByteArray()  -  1;	  this.out    =    out.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
260	[BUG]  [BUGGY]  This.out  =  out.toByteArray();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  This.out  =  out.toByteArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	This.out  =  out.toByteArray();	  this.out    =    out.toByteArray()    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
261	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  null);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out,  null);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
262	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out,  out);	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
263	[BUG]  [BUGGY]  this.out  =  out.toOutputPlainString();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toOutputPlainString();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutputPlainString();	  this.out    =    out.toPlainString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
264	[BUG]  [BUGGY]  this.out  =  out.toPlainString()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toPlainString()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPlainString()  +  1;	  this.out    =    out.toPlainString();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
265	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(true,  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(true,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(true,  newRecord);	  this.out    =    out.toExternalFormat(true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
266	[BUG]  [BUGGY]  this.out  =  OutputStreamWriter.DEFAULT;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStreamWriter.DEFAULT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStreamWriter.DEFAULT;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
267	[BUG]  [BUGGY]  this.out  =  OutputStreamWriter.TYPE_INT_ARRAY;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStreamWriter.TYPE_INT_ARRAY;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStreamWriter.TYPE_INT_ARRAY;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
268	[BUG]  [BUGGY]  this.out  =  OutputStreamWriter.DEFAULT_OUTPUT;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStreamWriter.DEFAULT_OUTPUT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStreamWriter.DEFAULT_OUTPUT;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
269	[BUG]  [BUGGY]  this.out  =  Format.newInstance(out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.newInstance(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newInstance(out);	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
270	[BUG]  [BUGGY]  this.out  =  Format.newInstance(out,  newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.newInstance(out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newInstance(out,  newRecord);	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
271	[BUG]  [BUGGY]  this.out  =  Format.createInstance(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.createInstance(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.createInstance(out);	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
272	[BUG]  [BUGGY]  this.out  =  Format.newInstance(out,  false);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.newInstance(out,  false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newInstance(out,  false);	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
273	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
274	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
275	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('n');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
276	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('n');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
277	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
278	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_OBJECT;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_OBJECT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_OBJECT;	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
279	[BUG]  [BUGGY]  this.out  =  FormatUtils.UNKNOWN;  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.UNKNOWN;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.UNKNOWN;	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
280	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  + "  - "  +  out.toString();  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  + "  - "  +  out.toString();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING  + "  - "  +  out.toString();	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
281	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  |  FormatUtils.DEFAULT_CSV;  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING  |  FormatUtils.DEFAULT_CSV;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING  |  FormatUtils.DEFAULT_CSV;	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
282	[BUG]  [BUGGY]  this.out  =  out.toPlainInt()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toPlainInt()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPlainInt()  +  1;	  this.out    =    out.toPlainInt();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
283	[BUG]  [BUGGY]  this.out  =  out.toPlainOutput();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toPlainOutput();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPlainOutput();	  this.out    =    out.toPlainInt();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
284	[BUG]  [BUGGY]  this.out  =  out.toPlainInt()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toPlainInt()  -  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPlainInt()  -  1;	  this.out    =    out.toPlainInt();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
285	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toCharArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toCharArray();	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
286	[BUG]  [BUGGY]  this.out  =  format.toCharArray(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toCharArray(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toCharArray(out);	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
287	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSV>()  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSV>()  :  format.toCharArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSV>()  :  format.toCharArray();	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
288	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>(out):  format.toCharArray();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>(out):  format.toCharArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>(out):  format.toCharArray();	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
289	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  out);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
290	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out.length);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out.length);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  out.length);	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
291	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  format.toFormat();	  this.out    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
292	[BUG]  [BUGGY]  this.out  =  format!=  null?  new  CSVFormat()  :  format.toFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  new  CSVFormat()  :  format.toFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  new  CSVFormat()  :  format.toFormat();	  this.out    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
293	[BUG]  [BUGGY]  this.out  =  newRecord  +  out.toArray(new  String[out.size()  ]);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  +  out.toArray(new  String[out.size()  ]);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  +  out.toArray(new  String[out.size()  ]);	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
294	[BUG]  [BUGGY]  this.out  =  newRecord  +  out.toExternalFormat;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  +  out.toExternalFormat;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  +  out.toExternalFormat;	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
295	[BUG]  [BUGGY]  this.out  =  out.read(new  Record());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.read(new  Record());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read(new  Record());	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
296	[BUG]  [BUGGY]  this.out  =  out.read(false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.read(false);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read(false);	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
297	[BUG]  [BUGGY]  this.out  =  out.read(DEFAULT_OUT);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.read(DEFAULT_OUT);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read(DEFAULT_OUT);	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
298	[BUG]  [BUGGY]  this.out  =  out  <  CSV>;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  <  CSV>;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  <  CSV>;	  this.out    =    newRecord    <    CSV>;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
299	[BUG]  [BUGGY]  this.out  =  out!=  null?  newRecord  <  CSV>  :  out;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out!=  null?  newRecord  <  CSV>  :  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out!=  null?  newRecord  <  CSV>  :  out;	  this.out    =    newRecord    <    CSV>;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
300	[BUG]  [BUGGY]  this.out  =  out  ==  null?  newRecord  <  CSV>  :  out;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  ==  null?  newRecord  <  CSV>  :  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  ==  null?  newRecord  <  CSV>  :  out;	  this.out    =    newRecord    <    CSV>;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
301	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('t');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('t');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
302	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  if(newRecord)  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  if(newRecord)  {  out.append('t');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  else  if(newRecord)  {  out.append('t');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
303	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  if(newRecord)  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  if(newRecord)  {  out.append('t');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  if(newRecord)  {  out.append('t');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
304	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('t');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('t');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
305	[BUG]  [BUGGY]  this.out  =  out.getOut()  -  1L;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.getOut()  -  1L;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getOut()  -  1L;	  this.out    =    out.getOut()    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
306	[BUG]  [BUGGY]  this.out  =  out.toExternalOutput(this);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalOutput(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalOutput(this);	  this.out    =    out.toExternalOutput();    	non-compiled	[CE]  <identifier>  expected	61	None	replace
307	[BUG]  [BUGGY]  this.out  =  out.getOUT();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.getOUT();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getOUT();	  this.out    =    out.getOut()    +    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
308	[BUG]  [BUGGY]  this.out  =  out.toString()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  +  1;	  this.out    =    out.getOut()    +    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
309	[BUG]  [BUGGY]  this.out  =  out.toExternalPath();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalPath();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalPath();	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
310	[BUG]  [BUGGY]  this.out  =  out.toExternalFiles();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFiles();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFiles();	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
311	[BUG]  [BUGGY]  this.out  =  out.toExternalFile()  + "n ";  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFile()  + "n ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFile()  + "n ";	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
312	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(this)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(this)+  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(this)+  1;	  this.out    =    out.toExternalFormat(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
313	[BUG]  [BUGGY]  this.out  =  output.toByteArray()  &&  out.length()  >  0;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output.toByteArray()  &&  out.length()  >  0;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toByteArray()  &&  out.length()  >  0;	  this.out    =    output.toByteArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
314	[BUG]  [BUGGY]  this.out  =  output.toByteArray(),  out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output.toByteArray(),  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toByteArray(),  out);	  this.out    =    output.toByteArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
315	[BUG]  [BUGGY]  this.out  =  out.toArray(new  String[out.size()  ]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toArray(new  String[out.size()  ]);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toArray(new  String[out.size()  ]);	  this.out    =    out.toArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
316	[BUG]  [BUGGY]  this.out  =  OutputStreamReader.DEFAULT_OUTPUT;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStreamReader.DEFAULT_OUTPUT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStreamReader.DEFAULT_OUTPUT;	  this.out    =    record;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
317	[BUG]  [BUGGY]  this.out  =  OutputEncoding.UTF8;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputEncoding.UTF8;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputEncoding.UTF8;	  this.out    =    record;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
318	[BUG]  [BUGGY]  this.out  =  DEFAULT_OUT_OF_RANGE!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  DEFAULT_OUT_OF_RANGE!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  DEFAULT_OUT_OF_RANGE!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;	  this.out    =    format!=    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
319	[BUG]  [BUGGY]  this.out  =  format  >=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  >=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  >=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;	  this.out    =    format!=    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
320	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSV>(2);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSV>(2);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSV>(2);	  this.out    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
321	[BUG]  [BUGGY]  this.out  =  out.toOutputFormat(this);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toOutputFormat(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutputFormat(this);	  this.out    =    out.toOutputFormat();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
322	[BUG]  [BUGGY]  this.out  =  out  <  T>newRecord();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  <  T>newRecord();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  <  T>newRecord();	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
323	[BUG]  [BUGGY]  this.out  =  out  ==  null?  newRecord  <  T>()  :  out;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  ==  null?  newRecord  <  T>()  :  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  ==  null?  newRecord  <  T>()  :  out;	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
324	[BUG]  [BUGGY]  this.out  =  out.toIn();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toIn();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toIn();	  this.out    =    out.getIn();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
325	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>(2);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSVFormat>(2);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>(2);	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
326	[BUG]  [BUGGY]  Assertions.notEmpty(out,  null);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,  null);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  null);	  Assertions.notEmpty(out);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
327	[BUG]  [BUGGY]  this.out  =  format.toOutput();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toOutput();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toOutput();	  this.out    =    format.toOut();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
328	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(true,  format);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(true,  format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(true,  format);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
329	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(true,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalForm(true,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(true,  newRecord);	  this.out    =    out.toExternalForm(true);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
330	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExpressionFormat(out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExpressionFormat(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExpressionFormat(out);	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
331	[BUG]  [BUGGY]  this.out  =  FormatUtils.toRecordFormat(out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toRecordFormat(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toRecordFormat(out);	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
332	[BUG]  [BUGGY]  this.out  =  FormatUtils.toRecordFormat();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toRecordFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toRecordFormat();	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
333	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "no-record ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "no-record ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "no-record ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
334	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append( "n ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append( "n ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
335	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "no-data ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "no-data ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  else  {  out.append( "no-data ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
336	[BUG]  [BUGGY]  this.out  =  format.toString()  + ", "  +  out.toString();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toString()  + ", "  +  out.toString();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toString()  + ", "  +  out.toString();	  this.out    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
337	[BUG]  [BUGGY]  this.out  =  format.toString()  &&  out.length()  >  0;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toString()  &&  out.length()  >  0;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toString()  &&  out.length()  >  0;	  this.out    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
338	[BUG]  [BUGGY]  this.out  =  format.toExternalForm(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalForm(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalForm(out);	  this.out    =    format.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
339	[BUG]  [BUGGY]  this.out  =  format.toExternalForm()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalForm()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalForm()  +  1;	  this.out    =    format.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
340	[BUG]  [BUGGY]  this.out  =  out.toPath()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toPath()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPath()  +  1;	  this.out    =    out.toPath();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
341	[BUG]  [BUGGY]  this.out  =  out.toOutputPath();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toOutputPath();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutputPath();	  this.out    =    out.toPath();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
342	[BUG]  [BUGGY]  this.out  =  out.toURI();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toURI();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toURI();	  this.out    =    out.toPath();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
343	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  else  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
344	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  if(newRecord)  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  else  if(newRecord)  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  else  if(newRecord)  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
345	[BUG]  [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  if(newRecord)  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  format)  {  out.append('n');  }  if(newRecord)  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  format)  {  out.append('n');  }  if(newRecord)  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
346	[BUG]  [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('r');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	safeMultiply(out,  newRecord)  {  out.append('n');  }  if(newRecord)  {  out.append('r');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
347	[BUG]  [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT  +  1;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
348	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPARENT;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPARENT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPARENT;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
349	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,  out.length);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,  out.length);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,  out.length);	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
350	[BUG]  [BUGGY]  this.out  =  out.toString()  + "  vs ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + "  vs ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + "  vs ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
351	[BUG]  [BUGGY]  this.out  =  out.toString()  + ",null ";  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + ",null ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + ",null ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
352	[BUG]  [BUGGY]  this.out  =  out.toString()  + "> ";  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + "> ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + "> ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
353	[BUG]  [BUGGY]  this.out  =  out.toString()  + "/null ";  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + "/null ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + "/null ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
354	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  }	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
355	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  }  else  {  out.println();  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  }  else  {  out.println();  }	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
356	[BUG]  [BUGGY]  This.out  =  out.toExternalFormat();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  This.out  =  out.toExternalFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	This.out  =  out.toExternalFormat();	  this.out    =    out.toExternalFormat()    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
357	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE,  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE,  out);	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
358	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
359	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.println();  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.println();  }	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
360	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.close();  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.close();  }	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
361	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.append( "n ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out.append( "n ");  }	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
362	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out  =  new  CSVFormat();  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out  =  new  CSVFormat();  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format,   "out ");  }  else  {  out  =  new  CSVFormat();  }	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
363	[BUG]  [BUGGY]  this.out  =  format.toByteArray()  &&  out.length()  >  0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toByteArray()  &&  out.length()  >  0;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toByteArray()  &&  out.length()  >  0;	  this.out    =    format.toByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
364	[BUG]  [BUGGY]  this.out  =  FormatUtils.toByteArray(out);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toByteArray(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toByteArray(out);	  this.out    =    format.toByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
365	[BUG]  [BUGGY]  this.out  =  format.toByteArray(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toByteArray(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toByteArray(out);	  this.out    =    format.toByteArray();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
366	[BUG]  [BUGGY]  this.out  =  out.toString(this);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString(this);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString(this);	  this.out    =    out.toFormat(this);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
367	[BUG]  [BUGGY]  this.out  =  out.toFormat(new  Record());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toFormat(new  Record());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFormat(new  Record());	  this.out    =    out.toFormat(this);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
368	[BUG]  [BUGGY]  this.out  =  out.toFormat(this)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toFormat(this)+  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFormat(this)+  1;	  this.out    =    out.toFormat(this);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
369	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "format ");  Assertions.notNull(format, "format ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notNull(out,   "format ");  Assertions.notNull(format, "format ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notNull(out,   "format ");  Assertions.notNull(format, "format ");  }	  Assertions.notNull(out,       "format   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
370	[BUG]  [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "format ");  Assertions.notNull(format, "format ");  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  if(out!=  null)  {  Assertions.notEmpty(out,   "format ");  Assertions.notNull(format, "format ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(out!=  null)  {  Assertions.notEmpty(out,   "format ");  Assertions.notNull(format, "format ");  }	  Assertions.notNull(out,       "format   ");    Assertions.notNull(format,       "format   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
371	[BUG]  [BUGGY]  this.out  =  out  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
372	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>(out):  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>(out):  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>(out):  Collections.EMPTY_LIST;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
373	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST  +  1;	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
374	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,  out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,  out);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
375	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,  null);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,  null);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,  null);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
376	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,   "UTF-8 ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,   "UTF-8 ");	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
377	[BUG]  [BUGGY]  this.out  =  format.toExternalFormat(out);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalFormat(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalFormat(out);	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
378	[BUG]  [BUGGY]  this.out  =  format!=  null?  new  CSVFormat()  :  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  new  CSVFormat()  :  format.toExternalFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  new  CSVFormat()  :  format.toExternalFormat();	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
379	[BUG]  [BUGGY]  this.out  =  format.toExternalFormat(),  out);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalFormat(),  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalFormat(),  out);	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
380	[BUG]  [BUGGY]  this.out  =  format.toExternalFormat()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalFormat()  +  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalFormat()  +  1;	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
381	[BUG]  [BUGGY]  Assertions.notEmpty(format,  this.newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(format,  this.newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format,  this.newRecord);	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
382	[BUG]  [BUGGY]  this.out  =  output!=  null?  out.toByteArray()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output!=  null?  out.toByteArray()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output!=  null?  out.toByteArray()  :  Collections.EMPTY_LIST;	  this.out    =    output.toByteArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
383	[BUG]  [BUGGY]  this.out  =  newRecord  &  out;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  &  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  &  out;	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
384	[BUG]  [BUGGY]  this.out  =  newRecord  -  out;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  newRecord  -  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  -  out;	  this.out    =    newRecord    +    out;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
385	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.emptyList();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.emptyList();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.emptyList();	  this.out    =    format    ==    null?    new    Record    <    CSVFormat>()    :    Collections.EMPTY_LIST;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
386	[BUG]  [BUGGY]  Assertions.notEmpty(record);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(record);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(record);	  Assertions.notEmpty(newRecord);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
387	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "out ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(out,   "out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,   "out ");	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
388	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	NodeTraversal.traverse(compiler,  out,  newRecord);	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
389	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  out,  new  Record());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  NodeTraversal.traverse(compiler,  out,  new  Record());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	NodeTraversal.traverse(compiler,  out,  new  Record());	  Assertions.notNull(out,       "out   ");    Assertions.notNull(format,       "out   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
390	[BUG]  [BUGGY]  out.append(newRecord).append('n');  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(newRecord).append('n');  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(newRecord).append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
391	[BUG]  [BUGGY]  out.append(format);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(format);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
392	[BUG]  [BUGGY]  Appendable  out  =  this.format.append(newRecord);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Appendable  out  =  this.format.append(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Appendable  out  =  this.format.append(newRecord);	  if(newRecord)    {    out.append('n');    }    else    {    out.append('n');    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
393	[BUG]  [BUGGY]  this.out  =  out.toString()  -  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  -  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  -  1;	  this.out    =    out.getOut()    -    1;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
394	[BUG]  [BUGGY]  this.out  =  format!=  null?  new  Record  <  CSVFormat>(out):  format.toFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  new  Record  <  CSVFormat>(out):  format.toFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  new  Record  <  CSVFormat>(out):  format.toFormat();	  this.out    =    format.toFormat();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
395	[BUG]  [BUGGY]  this.out  =  out.toExternalFile().getAbsolutePath();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFile().getAbsolutePath();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFile().getAbsolutePath();	  this.out    =    out.toExternalFile();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
396	[BUG]  [BUGGY]  this.out  =(newRecord  ==  null?  CSVEncoder.UTF8):!newRecord;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord  ==  null?  CSVEncoder.UTF8):!newRecord;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord  ==  null?  CSVEncoder.UTF8):!newRecord;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
397	[BUG]  [BUGGY]  this.out  =(newRecord  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =(newRecord  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =(newRecord  ==  null)?  Collections.EMPTY_LIST  :  Collections.EMPTY_LIST;	  this.out    =!newRecord;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
398	[BUG]  [BUGGY]  this.out  =  Format.newInstance(format);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  Format.newInstance(format);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newInstance(format);	  this.out    =    Format.newInstance();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
399	[BUG]  [BUGGY]  this.out  =  out!=  null?  out.toExtent()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out!=  null?  out.toExtent()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out!=  null?  out.toExtent()  :  Collections.EMPTY_LIST;	  this.out    =    out.toExtent();    	non-compiled	[CE]  <identifier>  expected	65	None	replace
400	[BUG]  [BUGGY]  this.out  =  format!=  null?  format.toExternalForm()  :  out;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  format.toExternalForm()  :  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  format.toExternalForm()  :  out;	  this.out    =    format.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
401	[BUG]  [BUGGY]  this.out  =  format.toExternalForm(),  out);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalForm(),  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalForm(),  out);	  this.out    =    format.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
402	[BUG]  [BUGGY]  this.out  =  format.toExternalForm()  + "n ";  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format.toExternalForm()  + "n ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalForm()  + "n ";	  this.out    =    format.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
403	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>(4);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSVFormat>(4);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>(4);	  this.out    =    new    Record    <    CSVFormat>();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
404	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  [Delete]  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	[Delete]	  if(newRecord)    {    out.append('n');    }    else    {    out.append('r');    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
405	[BUG]  [BUGGY]  Assertions.notNull(format,   "format ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notNull(format,   "format ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(format,   "format ");	  Assertions.notEmpty(format);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
406	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(newRecord);	  this.out    =    out.toExternalFormat(this);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
407	[BUG]  [BUGGY]  this.out  =  out.toExternalSpace();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalSpace();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalSpace();	  this.out    =    out.toExternal();    	non-compiled	[CE]  <identifier>  expected	73	None	replace
408	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(out);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double(out);	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    new    Rectangle2D.Double();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
409	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "out ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  Assertions.notEmpty(format,   "out ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format,   "out ");	  Assertions.notEmpty(out,       "out   ");    Assertions.notEmpty(format,   "out   ");    	non-compiled	[CE]  <identifier>  expected	72	None	replace
410	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  CSVFormat()  :  format.toCharArray();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  new  CSVFormat()  :  format.toCharArray();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  CSVFormat()  :  format.toCharArray();	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
411	[BUG]  [BUGGY]  this.out  =  format!=  null?  Format.toCharArray()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  Format.toCharArray()  :  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  Format.toCharArray()  :  Collections.EMPTY_LIST;	  this.out    =    format.toCharArray();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
412	[BUG]  [BUGGY]  this.out  =  out.read(File.separator);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.read(File.separator);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read(File.separator);	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
413	[BUG]  [BUGGY]  this.out  =  out.read(DEFAULT_OUTPUT);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.read(DEFAULT_OUTPUT);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read(DEFAULT_OUTPUT);	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
414	[BUG]  [BUGGY]  this.out  =  out.read(File.pathSeparator);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.read(File.pathSeparator);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read(File.pathSeparator);	  this.out    =    out.read();    	non-compiled	[CE]  <identifier>  expected	62	None	replace
415	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out,  this.newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(out,  this.newRecord);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out,  this.newRecord);	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
416	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(new  Record());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toFormat(new  Record());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(new  Record());	  this.out    =    FormatUtils.toFormat(out);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
417	[BUG]  [BUGGY]  this.out  =  out.toByte()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toByte()  -  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toByte()  -  1;	  this.out    =    out.toByte();    	non-compiled	[CE]  <identifier>  expected	64	None	replace
418	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(false,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat(false,  true);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(false,  true);	  this.out    =    out.toExternalFormat(true);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
419	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,  record);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,  record);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,  record);	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
420	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out,  output);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  OutputStream.toByteArray(out,  output);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out,  output);	  this.out    =    OutputStream.toByteArray(out);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
421	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out.toString());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  out.toString());	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
422	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out.toExternalFormat());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out,  out.toExternalFormat());  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out,  out.toExternalFormat());	  this.out    =    FormatUtils.getOutputFormat(out);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
423	[BUG]  [BUGGY]  this.out  =  out.toString()  + ": ";  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toString()  + ": ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + ": ";	  this.out    =    out.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	31	None	replace
424	[BUG]  [BUGGY]  out.append(format).append('n');  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(format).append('n');  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(format).append('n');	  if(newRecord)    {    out.append('n');    }    else    {    out.append('t');    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
425	[BUG]  [BUGGY]  this.out  =  out!=  null?  newRecord  <  T>()  :  out;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out!=  null?  newRecord  <  T>()  :  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out!=  null?  newRecord  <  T>()  :  out;	  this.out    =    newRecord    <    T>();    	non-compiled	[CE]  <identifier>  expected	63	None	replace
426	[BUG]  [BUGGY]  this.out  =  format!=  null?  format.toString()  : "null ";  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  format.toString()  : "null ";  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  format.toString()  : "null ";	  this.out    =    format.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
427	[BUG]  [BUGGY]  this.out  =  format!=  null?  DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;	  this.out    =    format!=    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
428	[BUG]  [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE,  out);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE,  out);	  this.out    =    format!=    null?    CSVFormat.DEFAULT_OUT_OF_RANGE    :    DEFAULT_OUT_OF_RANGE;    	non-compiled	[CE]  <identifier>  expected	67	None	replace
429	[BUG]  [BUGGY]  out.append(newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(newRecord)  {  out.append('n');  }  else  {  out.append( "n   ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
430	[BUG]  [BUGGY]  out.append(newRecord)  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(newRecord)  {  out.append('n');  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(newRecord)  {  out.append('n');  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
431	[BUG]  [BUGGY]  out.append(newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(newRecord)  {  out.append('n');  }  else  {  out.append( "null ");  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
432	[BUG]  [BUGGY]  out.append(newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  out.append(newRecord)  {  out.append('n');  }  else  {  out.append(format);  }  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	out.append(newRecord)  {  out.append('n');  }  else  {  out.append(format);  }	  if(newRecord)    {    out.append('n');    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
433	[BUG]  [BUGGY]  this.out  =  new  Rectangle  <  CSV>(out);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Rectangle  <  CSV>(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Rectangle  <  CSV>(out);	  this.out    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
434	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSV>(4);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  new  Record  <  CSV>(4);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSV>(4);	  this.out    =    new    Record    <    CSV>();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
435	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,   "UTF-8 ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out,   "UTF-8 ");  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out,   "UTF-8 ");	  this.out    =    FormatUtils.toExternalFormat(out);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
436	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExportedFormat(out);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toExportedFormat(out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExportedFormat(out);	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
437	[BUG]  [BUGGY]  this.out  =  FormatUtils.toBinaryFormat();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toBinaryFormat();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toBinaryFormat();	  this.out    =    FormatUtils.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	19	None	replace
438	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toExternalFormat()  -  1;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat()  -  1;	  this.out    =    out.toExternalFormat()    +    1;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
439	[BUG]  [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  CSVFormat.DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  CSVFormat.DEFAULT_OUT_OF_RANGE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  CSVFormat.DEFAULT_OUT_OF_RANGE;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
440	[BUG]  [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
441	[BUG]  [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  Collections.EMPTY_LIST;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  Collections.EMPTY_LIST;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
442	[BUG]  [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  CSVFormat.DEFAULT;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  CSVFormat.DEFAULT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  CSVFormat.DEFAULT;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
443	[BUG]  [BUGGY]  this.out  =  out  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  output;  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  output;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out  <  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  output;	  this.out    =    output;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
444	[BUG]  [BUGGY]  this.out  =  out.toPaddedInt();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toPaddedInt();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPaddedInt();	  this.out    =    out.toPaddedObject();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
445	[BUG]  [BUGGY]  this.out  =  out.toFrontObject();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.toFrontObject();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFrontObject();	  this.out    =    out.toPaddedObject();    	non-compiled	[CE]  <identifier>  expected	74	None	replace
446	[BUG]  [BUGGY]  this.out  =  FormatUtils.toBooleanObject();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.toBooleanObject();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toBooleanObject();	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
447	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING,  out);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING,  out);  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING,  out);	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
448	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY;  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  FormatUtils.EMPTY;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY;	  this.out    =    FormatUtils.EMPTY_STRING;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
449	[BUG]  [BUGGY]  this.out  =  format!=  null?  format.toExternalFormat()  :  out;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  format.toExternalFormat()  :  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  format.toExternalFormat()  :  out;	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
450	[BUG]  [BUGGY]  this.out  =  format!=  null?  Format.toExternalFormat()  :  out;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format!=  null?  Format.toExternalFormat()  :  out;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  Format.toExternalFormat()  :  out;	  this.out    =    format.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
451	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_INPUT  :  DEFAULT_OUTPUT;  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_INPUT  :  DEFAULT_OUTPUT;  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_INPUT  :  DEFAULT_OUTPUT;	  this.out    =    format    ==    null?    CSVFormat.DEFAULT_OUTPUT    :    DEFAULT_OUTPUT;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
452	[BUG]  [BUGGY]  this.out  =  out.remove();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,       "out     ");  Assertions.notNull(format,       "format     ");      [BUGGY]  this.out  =  out.remove();  [BUGGY]      this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.remove();	  this.out    =    out.getOut()    +    1;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
