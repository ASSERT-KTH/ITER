bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.out  =  format.toExternalForm();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toExternalForm();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalForm();	  this.out    =    out.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(true);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternalForm(true);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(true);	  this.out    =    out.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  this.out  =  out.toExternalForm(this);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternalForm(this);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalForm(this);	  this.out    =    out.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
4	[BUG]  [BUGGY]  this.out  =  out.toOutputForm();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toOutputForm();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutputForm();	  this.out    =    out.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
5	[BUG]  [BUGGY]  this.out  =  out.toExternalFile();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternalFile();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFile();	  this.out    =    out.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
6	[BUG]  [BUGGY]  this.out  =  record;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  record;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  record;	  this.out    =    newRecord;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  this.out  =!newRecord;  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =!newRecord;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =!newRecord;	  this.out    =    newRecord;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  this.out  =  output;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  output;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output;	  this.out    =    newRecord;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  this.out  =  newRecord  <  CSV>;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  newRecord  <  CSV>;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  <  CSV>;	  this.out    =    newRecord;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
10	[BUG]  [BUGGY]  this.out  =  format.toByteArray();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toByteArray();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toByteArray();	  this.out    =    out.toByteArray();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  this.out  =  out.toStringArray();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toStringArray();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toStringArray();	  this.out    =    out.toByteArray();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  this.out  =  out.toByteArray()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toByteArray()  +  1;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toByteArray()  +  1;	  this.out    =    out.toByteArray();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
13	[BUG]  [BUGGY]  this.out  =  out.toArray();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toArray();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toArray();	  this.out    =    out.toByteArray();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  this.out  =  output.toByteArray();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  output.toByteArray();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toByteArray();	  this.out    =    out.toByteArray();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  this.out  =  format.toOut();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toOut();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toOut();	  this.out    =    out.toOut();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  this.out  =  format.toExternalFormat();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toExternalFormat();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toExternalFormat();	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  FormatUtils.toExternalFormat(out);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat(out);	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  this.out  =  out.toOutputFormat();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toOutputFormat();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toOutputFormat();	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
19	[BUG]  [BUGGY]  this.out  =  FormatUtils.toExternalFormat();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  FormatUtils.toExternalFormat();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toExternalFormat();	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(this);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternalFormat(this);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(this);	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  this.out  =  format.toInt();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toInt();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toInt();	  this.out    =    out.toInt();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  this.out  =  out.toPlainInt();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toPlainInt();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPlainInt();	  this.out    =    out.toInt();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  Assertions.notEmpty(format);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notEmpty(format);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('n');  }  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(newRecord)  {  out.append('n');  }  else  {  out.append('n');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  Assertions.notNull(out,   "format ");  Assertions.notNull(format,   "format ");  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notNull(out,   "format ");  Assertions.notNull(format,   "format ");  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out,   "format ");  Assertions.notNull(format,   "format ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  Assertions.notEmpty(newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notEmpty(newRecord);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(newRecord);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  Assertions.notNull(out,   "format ");  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notNull(out,   "format ");  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out,   "format ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  Assertions.notEmpty(format,   "newRecord ");  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notEmpty(format,   "newRecord ");  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(format,   "newRecord ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('t');  }  [CE]  <identifier>  expected  [FE]                                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('t');  }  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(newRecord)  {  out.append('n');  }  else  {  out.append('t');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  this.out  =  format.toString();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toString();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toString();	  this.out    =    out.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  this.out  =  out.toString()  + "n ";  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toString()  + "n ";  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toString()  + "n ";	  this.out    =    out.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
32	[BUG]  [BUGGY]  this.out  =  output.toString();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  output.toString();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  output.toString();	  this.out    =    out.toString();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
33	[BUG]  [BUGGY]  this.out  =  out.getOut()  +  1;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.getOut()  +  1;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getOut()  +  1;	  this.out    =    out.getOut();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  this.out  =  format.getOut();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.getOut();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.getOut();	  this.out    =    out.getOut();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
35	[BUG]  [BUGGY]  this.out  =  out.getOut()  -  1;  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.getOut()  -  1;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getOut()  -  1;	  this.out    =    out.getOut();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
36	[BUG]  [BUGGY]  this.out  =  out.getIn();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.getIn();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.getIn();	  this.out    =    out.getOut();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
37	[BUG]  [BUGGY]  this.out  =  format.toCharArray();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toCharArray();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toCharArray();	  this.out    =    out.toCharArray();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
38	[BUG]  [BUGGY]  this.out  =  out.toPath();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toPath();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPath();	  this.out    =    out.toCharArray();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
39	[BUG]  [BUGGY]  this.out  =  Format.newInstance();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  Format.newInstance();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  Format.newInstance();	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  this.out  =  DEFAULT_NAME;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  DEFAULT_NAME;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  DEFAULT_NAME;	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  this.out  =  format.toFormat();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format.toFormat();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format.toFormat();	  this.out    =    out.toFormat();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  this.out  =  FormatUtils.toFormat(out);  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  FormatUtils.toFormat(out);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.toFormat(out);	  this.out    =    out.toFormat();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  this.out  =  out.toFront();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toFront();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFront();	  this.out    =    out.toFormat();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  this.out  =  out.toPlainString();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toPlainString();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPlainString();	  this.out    =    out.toInt();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  this.out  =  newRecord  +  out;  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  newRecord  +  out;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  +  out;	  this.out    =    newRecord;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
46	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSVFormat>();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  new  Record  <  CSVFormat>();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSVFormat>();	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  this.out  =  OutputStream.toByteArray(out);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  OutputStream.toByteArray(out);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  OutputStream.toByteArray(out);	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  FormatUtils.getOutputFormat(out);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.getOutputFormat(out);	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  this.out  =  new  Record  <  CSV>();  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  new  Record  <  CSV>();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  new  Record  <  CSV>();	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
50	[BUG]  [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING;  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  FormatUtils.EMPTY_STRING;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  FormatUtils.EMPTY_STRING;	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
51	[BUG]  [BUGGY]  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "format ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  Assertions.notEmpty(out,  format);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notEmpty(out,  format);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,  format);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(newRecord)  {  out.append('n');  }  else  {  out.append( "n ");  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
54	[BUG]  [BUGGY]  Assertions.notEmpty(out);  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notEmpty(out);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out);	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
55	[BUG]  [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('r');  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  if(newRecord)  {  out.append('n');  }  else  {  out.append('r');  }  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	if(newRecord)  {  out.append('n');  }  else  {  out.append('r');  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  this.out  =  out.toExtern();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExtern();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExtern();	  this.out    =    out.toOut();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
57	[BUG]  [BUGGY]  this.out  =  out.toExterns();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExterns();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExterns();	  this.out    =    out.toOut();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  this.out  =  out.toFormat(this);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toFormat(this);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toFormat(this);	  this.out    =    out.toFormat();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
59	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat(true);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternalFormat(true);  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat(true);	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
60	[BUG]  [BUGGY]  this.out  =  out.toExternalFormat()  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternalFormat()  +  1;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalFormat()  +  1;	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
61	[BUG]  [BUGGY]  this.out  =  out.toExternalOutput();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternalOutput();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternalOutput();	  this.out    =    out.toExternalForm();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  this.out  =  out.read();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.read();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.read();	  this.out    =    out.getOut();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  this.out  =  newRecord  <  T>();  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  newRecord  <  T>();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  newRecord  <  T>();	  this.out    =    newRecord;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  this.out  =  out.toByte();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toByte();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toByte();	  this.out    =    out.toInt();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  this.out  =  out.toExtent();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExtent();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExtent();	  this.out    =    out.toInt();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
67	[BUG]  [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format!=  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  DEFAULT_OUT_OF_RANGE;	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
68	[BUG]  [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  new  Record  <  CSVFormat>()  :  Collections.EMPTY_LIST;	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
69	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUTPUT  :  DEFAULT_OUTPUT;	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
70	[BUG]  [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  format  ==  null?  CSVFormat.DEFAULT_OUT_OF_RANGE  :  new  Rectangle2D.Double();	  this.out    =    format;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
71	[BUG]  [BUGGY]  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notNull(out,   "out ");  Assertions.notNull(format,   "out ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format, "out ");  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format, "out ");  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	Assertions.notEmpty(out,   "out ");  Assertions.notEmpty(format, "out ");	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
73	[BUG]  [BUGGY]  this.out  =  out.toExternal();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toExternal();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toExternal();	  this.out    =    out.toExternalFormat();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
74	[BUG]  [BUGGY]  this.out  =  out.toPaddedObject();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  CSVPrinter(final  Appendable  out,  final  CSVFormat  format)  {  Assertions.notNull(out,     "out   ");  Assertions.notNull(format,     "format   ");    [BUGGY]  this.out  =  out.toPaddedObject();  [BUGGY]    this.format  =  format;  this.format.validate();  }  [CLASS]  CSVPrinter  [METHOD]  <init>  [RETURN_TYPE]  CSVFormat)  Appendable  out  CSVFormat  format  [VARIABLES]  CSVFormat  format  boolean  newRecord  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	62	62	1	replace	this.out  =  out.toPaddedObject();	  this.out    =    out.toCharArray();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
