bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
2	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  false)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  null)  {  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord();  }	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  if(newRecord)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)  {  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord();  }	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord();  }	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
9	[BUG]  [BUGGY]  if(newRecord)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)printRecord();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)printRecord();  else  printRecord();  }	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
10	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  else  if(newRecord  ==  null)println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  else  if(newRecord!=  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  else  if(newRecord!=  null)println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  else  if(newRecord!=  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  else  if(newRecord!=  null)println();  else  printRecord();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)println();  else  printRecord();	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  else  if(newRecord  ==  null)println();  else  printRecord();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println();  else  printRecord();	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  else  if(newRecord  >=  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  else  if(newRecord  >=  null)println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  >=  null)println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(value);  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  Appendable  out  =(Appendable)this.values.get(value);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(value);	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  quote)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  Appendable  out  =(Appendable)values.get(newRecord);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(newRecord);	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }  else  {  out.println();  }	  if(newRecord)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  out.println();  }	  if(newRecord)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  quote)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
21	[BUG]  [BUGGY]  Printer  out  =  new  Printer(newRecord);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  Printer  out  =  new  Printer(newRecord);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(newRecord);	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  Printer  out  =  getPrinter();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  Printer  out  =  getPrinter();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getPrinter();	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  printRecord(value);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(value);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value);	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
27	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
28	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.println();  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
29	[BUG]  [BUGGY]  if(newRecord  ==  quote)println();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  quote)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  if(newRecord!=  quote)println();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  quote)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  if(newRecord  ==  println());  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  println());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println());	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
32	[BUG]  [BUGGY]  if(newRecord  >=  quote)println();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  >=  quote)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
33	[BUG]  [BUGGY]  if(newRecord  ==  println())println();  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  println())println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println())println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
34	[BUG]  [BUGGY]  if(newRecord!=  println());  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  println());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  println());	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  printRecord(values,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(values,  newRecord);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  newRecord);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  if(values  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
40	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  if(values  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  out.write(values[0]);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.write(values[0]);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]);	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  printRecord(values,  quote);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(values,  quote);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  quote);	  printRecord(values);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
46	[BUG]  [BUGGY]  if(values!=  null)  printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values!=  null)  printRecord(values);  else  printRecord(values);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  printRecord(values);  else  printRecord(values);  }	  printRecord(values);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  printRecord(this.values);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(this.values);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(this.values);	  printRecord(values);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
48	[BUG]  [BUGGY]  if(values!=  null)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(values!=  null)  {  printRecord(values);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  printRecord(values);  }	  printRecord(values);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
49	[BUG]  [BUGGY]  out.flush();  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.flush();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.flush();	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
50	[BUG]  [BUGGY]  out.print( "n ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.print( "n ");  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "n ");	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
51	[BUG]  [BUGGY]  out.write('n');  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.write('n');  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write('n');	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
52	[BUG]  [BUGGY]  out.write( "n ");  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.write( "n ");  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "n ");	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  out.print(quote);  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.print(quote);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(quote);	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
54	[BUG]  [BUGGY]  out.println( "n ");  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.println( "n ");  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "n ");	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  printRecord(values,  true);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(values,  true);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  true);	  printRecord(values);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "n ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "n ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "n ");  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
57	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.println();  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  if(newRecord!=  false)  {  println();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  false)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  println();  }	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  println();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  >=  false)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  false)  {  println();  }	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
60	[BUG]  [BUGGY]  if(newRecord  >  0)  {  println();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  >  0)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  0)  {  println();  }	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
61	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  println();  }	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
62	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(value);  }  else  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
63	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(values);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)  {  printRecord(values);  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(values);  }  else  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  printRecord(value,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(value,  newRecord);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  newRecord);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  out.flush();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(value);  }  else  {  out.flush();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  out.print(value);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.print(value);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(value);	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
67	[BUG]  [BUGGY]  out.print(values[0]);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.print(values[0]);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(values[0]);	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
68	[BUG]  [BUGGY]  out.println(values[0]);  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.println(values[0]);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(values[0]);	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
69	[BUG]  [BUGGY]  if(newRecord  ==  false)println();  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  false)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
70	[BUG]  [BUGGY]  if(newRecord  ==  null)println();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  null)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
71	[BUG]  [BUGGY]  if(newRecord!=  null)println();  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
72	[BUG]  [BUGGY]  if(newRecord!=  false)println();  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  false)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
73	[BUG]  [BUGGY]  if(newRecord)println(values);  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)println(values);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)println(values);	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
74	[BUG]  [BUGGY]  if(newRecord  ==  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  null)println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
75	[BUG]  [BUGGY]  if(newRecord  ==  false)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  false)println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
76	[BUG]  [BUGGY]  if(newRecord!=  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
77	[BUG]  [BUGGY]  else  if(newRecord)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  else  if(newRecord)println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord)println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
78	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.flush();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  out.flush();  }	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
79	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  out.println();  }	  if(newRecord)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
80	[BUG]  [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  println();  }  else  {  out.println();  }	  if(newRecord)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
81	[BUG]  [BUGGY]  printRecord(value.toString());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(value.toString());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString());	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
82	[BUG]  [BUGGY]  printRecord(true);  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  printRecord(true);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(true);	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  OutputStream  println)  {  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  OutputStream  println)  {  if(newRecord)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  if(newRecord)  {  println();  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
84	[BUG]  [BUGGY]  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
85	[BUG]  [BUGGY]  OutputStream  println)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  OutputStream  println)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
86	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
87	[BUG]  [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
88	[BUG]  [BUGGY]  out.println(value.toString());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.println(value.toString());  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value.toString());	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
89	[BUG]  [BUGGY]  out.println(value);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  out.println(value);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value);	  out.println();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
90	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  >=  quote)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
91	[BUG]  [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
92	[BUG]  [BUGGY]  if(newRecord  <  =  true)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  <  =  true)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  true)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
93	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  <  quote)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  println();  }	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
94	[BUG]  [BUGGY]  if(newRecord  <  =  true)  {  println();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  <  =  true)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  true)  {  println();  }	  if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
95	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  <  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
96	[BUG]  [BUGGY]  if(newRecord  <  =  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  <  =  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
97	[BUG]  [BUGGY]  if(newRecord  <  =  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  <  =  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
98	[BUG]  [BUGGY]  if(newRecord)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)printRecord();  if(values  ==  null)  {  printRecord();  }	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
99	[BUG]  [BUGGY]  if(newRecord)printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)printRecord();  if(!quote)  {  printRecord();  }	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
100	[BUG]  [BUGGY]  if(newRecord)printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)printRecord();  if(values!=  null)  {  printRecord();  }	  printRecord();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
101	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)  {  printRecord(values);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(values);  }	  printRecord(values);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
102	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.flush();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }  else  {  out.flush();  }	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
103	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  >=  quote)  {  println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  println();  }	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
104	[BUG]  [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.flush();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  println();  }  else  {  out.flush();  }	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
105	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  println();  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  >=  quote)  {  println();  }  else  {  out.flush();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  println();  }  else  {  out.flush();  }	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
106	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.flush();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  out.flush();  }	  if(newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
107	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  ==  printRecord())println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
108	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord())println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  else  if(newRecord  ==  printRecord())println();  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord())println();  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
109	[BUG]  [BUGGY]  if(newRecord)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)println(value);  else  printRecord();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)println(value);  else  printRecord();  }	  if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
110	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  }  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
111	[BUG]  [BUGGY]  if(newRecord!=  null)  printRecord(newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  printRecord(newRecord);  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  printRecord(newRecord);  }  else  {  out.println();  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
112	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  }	  printRecord(newRecord);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
113	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  >=  quote)  {  println();  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  println();  }  else  {  out.println();  }	  if(newRecord)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
114	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord  <  quote)  {  println();  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  println();  }  else  {  out.println();  }	  if(newRecord)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
115	[BUG]  [BUGGY]  if(newRecord)println(value);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)println(value);  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)println(value);	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
116	[BUG]  [BUGGY]  if(!newRecord)println();  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(!newRecord)println();  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)println();	  if(newRecord)println();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
117	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError    [CONTEXT]    public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }    [BUGGY]  if(newRecord)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [BUGGY]    }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
