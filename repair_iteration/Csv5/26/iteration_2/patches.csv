bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out.println(values[1]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(values[1]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(values[1]);	  out.println(values[0]);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
2	[BUG]  [BUGGY]  out.println(values[0].toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(values[0].toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(values[0].toString());	  out.println(values[0]);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
3	[BUG]  [BUGGY]  if(values!=  null)  {  out.println(values[0]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  out.println(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  out.println(values[0]);  }	  out.println(values[0]);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
4	[BUG]  [BUGGY]  if(newRecord)  {  out.println(values[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  out.println(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  out.println(values[0]);  }	  out.println(values[0]);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
5	[BUG]  [BUGGY]  if(values!=  null)  {  out.println(values[0]);  }  else  {  printRecord(values[1]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  out.println(values[0]);  }  else  {  printRecord(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  out.println(values[0]);  }  else  {  printRecord(values[1]);  }	  out.println(values[0]);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
6	[BUG]  [BUGGY]  printRecord(this.values,  value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(this.values,  value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(this.values,  value);	  printRecord(this.values);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  printRecord(this.values,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(this.values,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(this.values,  newRecord);	  printRecord(this.values);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  printRecord(this.values,  values);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(this.values,  values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(this.values,  values);	  printRecord(this.values);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
9	[BUG]  [BUGGY]  if(this.values!=  null)  {  printRecord(this.values);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(this.values!=  null)  {  printRecord(this.values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(this.values!=  null)  {  printRecord(this.values);  }	  printRecord(this.values);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
10	[BUG]  [BUGGY]  if(this.values!=  null)  {  printRecord(this.values);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(this.values!=  null)  {  printRecord(this.values);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(this.values!=  null)  {  printRecord(this.values);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  printRecord(this.values);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
11	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(values);  }	  if(values!=    null)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
12	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(values);  }	  if(values!=    null)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
13	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  printRecord(values);  }	  if(values!=    null)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
14	[BUG]  [BUGGY]  Printer  out  =  getPrinter().printRecord(values);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getPrinter().printRecord(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getPrinter().printRecord(values);	  if(values!=    null)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
15	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord(newRecord);  }	  if(newRecord!=    null)    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
16	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord(newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord(newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord(newRecord);  }  else  {  out.println();  }	  if(newRecord!=    null)    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
17	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord(newRecord);	  if(newRecord!=    null)    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
18	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord(newRecord);  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord(newRecord);  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord(newRecord);  else  {  out.println();  }	  if(newRecord!=    null)    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
19	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord(value);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord(value);  }  else  {  out.println();  }	  if(newRecord!=    null)    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
20	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord(newRecord);  }	  if(newRecord!=    null)    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
21	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord,  quote);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord,  quote);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord,  quote);  }	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
22	[BUG]  [BUGGY]  this.printRecord(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  this.printRecord(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	this.printRecord(newRecord);	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
23	[BUG]  [BUGGY]  newRecord  =  printRecord(newRecord);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  newRecord  =  printRecord(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	newRecord  =  printRecord(newRecord);	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
24	[BUG]  [BUGGY]  if(newRecord!=  value)println();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value)println();	  if(newRecord!=    quote)println();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
25	[BUG]  [BUGGY]  if(newRecord!=  quote)print(values[0]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)print(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)print(values[0]);	  if(newRecord!=    quote)println();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
26	[BUG]  [BUGGY]  if(values!=  newRecord)println();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  newRecord)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  newRecord)println();	  if(newRecord!=    quote)println();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
27	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  out.flush();  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
28	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.close();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }  else  {  out.close();  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
29	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.close();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  out.close();  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
30	[BUG]  [BUGGY]  if(newRecord  ==  quote  ||  newRecord  ==  println());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote  ||  newRecord  ==  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote  ||  newRecord  ==  println());	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
31	[BUG]  [BUGGY]  if(newRecord  ==  value)  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  value)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  value)  {  println();  }	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
32	[BUG]  [BUGGY]  if(newRecord  ==  value  ||  newRecord  ==  println());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  value  ||  newRecord  ==  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  value  ||  newRecord  ==  println());	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
33	[BUG]  [BUGGY]  if(newRecord  ==  quote());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote());	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
34	[BUG]  [BUGGY]  if(newRecord  ==  out.length)  {  println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  out.length)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  out.length)  {  println();  }	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
35	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  out.println();  }	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
36	[BUG]  [BUGGY]  out.print(this.quote);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(this.quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(this.quote);	  out.print(value);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
37	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  quote)  {  printRecord();  }	  if(newRecord!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
38	[BUG]  [BUGGY]  Printer  out  =  getRecorder();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getRecorder();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getRecorder();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
39	[BUG]  [BUGGY]  Printer  out  =  getOutputFile();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getOutputFile();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getOutputFile();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
40	[BUG]  [BUGGY]  Printer  out  =  getRecord();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getRecord();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
41	[BUG]  [BUGGY]  Printer  out  =  getOutputFormat();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getOutputFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getOutputFormat();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
42	[BUG]  [BUGGY]  println(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  println(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	println(newRecord);	  if(newRecord    ==    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
43	[BUG]  [BUGGY]  Printer  out  =  getPrinter().printRecord(value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getPrinter().printRecord(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getPrinter().printRecord(value);	  if(newRecord    ==    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
44	[BUG]  [BUGGY]  out.println(quote);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(quote);	  if(newRecord    ==    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
45	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
46	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
47	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(values,  values[0],  values[1],  values[2],  values[3]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(values,  values[0],  values[1],  values[2],  values[3]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(values,  values[0],  values[1],  values[2],  values[3]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
48	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2],  values[3]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2],  values[3]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2],  values[3]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
49	[BUG]  [BUGGY]  if(newRecord  ==  true)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  true)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  true)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord    <    =    true)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
50	[BUG]  [BUGGY]  if(newRecord  ==  true)  {  println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  true)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  true)  {  println();  }	  if(newRecord    <    =    true)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
51	[BUG]  [BUGGY]  if(newRecord!=  true)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  true)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  true)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord    <    =    true)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
52	[BUG]  [BUGGY]  if(newRecord!=  true)  {  println();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  true)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  true)  {  println();  }	  if(newRecord    <    =    true)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
53	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(newRecord    <    =    false)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
54	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value);  }	  if(newRecord    <    =    false)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
55	[BUG]  [BUGGY]  out.close();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.close();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.close();	  out.flush();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
56	[BUG]  [BUGGY]  out.defaultPrinter();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.defaultPrinter();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.defaultPrinter();	  out.flush();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
57	[BUG]  [BUGGY]  out.write(values,  0,  values.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values,  0,  values.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values,  0,  values.length);	  out.flush();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
58	[BUG]  [BUGGY]  out.println( "Record: ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Record: ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Record: ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
59	[BUG]  [BUGGY]  out.println( "Printing  record: ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Printing  record: ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Printing  record: ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
60	[BUG]  [BUGGY]  out.println( "Record:  n ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Record:  n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Record:  n ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
61	[BUG]  [BUGGY]  out.println( "Printer:  n ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Printer:  n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Printer:  n ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
62	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
63	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
64	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printRecord(value,  newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printRecord(value,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printRecord(value,  newRecord);  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
65	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value,  newRecord);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord(value,  newRecord);  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
66	[BUG]  [BUGGY]  if(newRecord!=  false)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
67	[BUG]  [BUGGY]  if(newRecord!=  false)  {  printRecord(value,  newRecord);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  printRecord(value,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  printRecord(value,  newRecord);  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
68	[BUG]  [BUGGY]  if(newRecord  ==  quote)println(value);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
69	[BUG]  [BUGGY]  if(println(value))  println(value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(println(value))  println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(println(value))  println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
70	[BUG]  [BUGGY]  if(newRecord!=  quote)println(value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
71	[BUG]  [BUGGY]  if(newRecord  ==  value)println(value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  value)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  value)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
72	[BUG]  [BUGGY]  if(newRecord  ==  println(value))  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println(value))  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println(value))  throw  new  IllegalArgumentException( " ");	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
73	[BUG]  [BUGGY]  if(newRecord  ==  println(value))  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println(value))  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println(value))  throw  new  IllegalStateException( " ");	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
74	[BUG]  [BUGGY]  if(println(value))  println(newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(println(value))  println(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(println(value))  println(newRecord);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
75	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
76	[BUG]  [BUGGY]  if(values!=  null)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  printRecord(newRecord);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
77	[BUG]  [BUGGY]  if(values  ==  null)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values  ==  null)  {  printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values  ==  null)  {  printRecord(newRecord);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
78	[BUG]  [BUGGY]  if(values!=  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  printRecord(newRecord);  }  else  {  out.flush();  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
79	[BUG]  [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
80	[BUG]  [BUGGY]  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
81	[BUG]  [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[out.size()  ]);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[out.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  out  =  values.toArray(new  Object[out.size()  ]);	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
82	[BUG]  [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
83	[BUG]  [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[values.size()  ]);  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[values.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  out  =  values.toArray(new  Object[values.size()  ]);	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
84	[BUG]  [BUGGY]  if(newRecord  ==  true)println();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  true)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  true)println();	  if(newRecord    ==    false)println();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
85	[BUG]  [BUGGY]  if(newRecord  ==  false)print(values[0]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)print(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)print(values[0]);	  if(newRecord    ==    false)println();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
86	[BUG]  [BUGGY]  if(newRecord  ==  false)print(values.length);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)print(values.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)print(values.length);	  if(newRecord    ==    false)println();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
87	[BUG]  [BUGGY]  if(newRecord  ==  false)print(values);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)print(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)print(values);	  if(newRecord    ==    false)println();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
88	[BUG]  [BUGGY]  out.print(values);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(values);	  out.print(quote);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
89	[BUG]  [BUGGY]  out.print(newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(newRecord);	  out.print(quote);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
90	[BUG]  [BUGGY]  out.print(values[quote]);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(values[quote]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(values[quote]);	  out.print(quote);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
91	[BUG]  [BUGGY]  out.print(values[i]);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(values[i]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(values[i]);	  out.print(quote);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
92	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(value  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(value  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(value  -  1);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
93	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(0);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(0);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
94	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(value  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(value  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(value  +  1);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
95	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(value,  quote);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(value,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(value,  quote);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
96	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(newRecord);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
97	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(key);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(key);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(key);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
98	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord()  ||  newRecord  ==  printRecord())println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord()  ||  newRecord  ==  printRecord())println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord()  ||  newRecord  ==  printRecord())println();  else  printRecord();  }	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
99	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord())  printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord())  printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord())  printRecord();  else  printRecord();  }	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
100	[BUG]  [BUGGY]  else  if(newRecord!=  printRecord())println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  printRecord())println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  printRecord())println();  else  printRecord();  }	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
101	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord()  ||  quote)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord()  ||  quote)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord()  ||  quote)println();  else  printRecord();  }	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
102	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord())println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord())println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord())println();  else  printRecord();	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
103	[BUG]  [BUGGY]  else  if(newRecord  ==  null)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
104	[BUG]  [BUGGY]  else  if(newRecord!=  null)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  null)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
105	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
106	[BUG]  [BUGGY]  else  if(newRecord  ==  false)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  false)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  false)printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
107	[BUG]  [BUGGY]  else  if(values!=  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(values!=  null)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(values!=  null)println();  else  printRecord();  }	  else    if(newRecord    >=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
108	[BUG]  [BUGGY]  else  if(values  ==  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(values  ==  null)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(values  ==  null)println();  else  printRecord();  }	  else    if(newRecord    >=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
109	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  out.printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  out.printRecord();  }	  if(newRecord    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
110	[BUG]  [BUGGY]  printRecord(values,  quote,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  quote,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  quote,  newRecord);	  printRecord(values,    quote);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
111	[BUG]  [BUGGY]  printRecord(values,  value);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  value);	  printRecord(values,    quote);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
112	[BUG]  [BUGGY]  printRecord(newRecord,  values);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(newRecord,  values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(newRecord,  values);	  printRecord(values,    quote);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
113	[BUG]  [BUGGY]  printRecord(values,  quote,  true);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  quote,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  quote,  true);	  printRecord(values,    quote);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
114	[BUG]  [BUGGY]  else  if(values!=  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(values!=  null)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(values!=  null)println();  else  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
115	[BUG]  [BUGGY]  if(newRecord  ==  value)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  value)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  value)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
116	[BUG]  [BUGGY]  if(newRecord!=  value)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
117	[BUG]  [BUGGY]  if(newRecord  >=  value)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  value)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  value)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
118	[BUG]  [BUGGY]  else  if(newRecord  ==  value)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  value)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  value)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
119	[BUG]  [BUGGY]  else  if(newRecord!=  value)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  value)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  value)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
120	[BUG]  [BUGGY]  if(!newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  println();  }	  if(!newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
121	[BUG]  [BUGGY]  if(newRecord!=  false)  {  if(!newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  if(!newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  if(!newRecord)  {  println();  }	  if(!newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
122	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
123	[BUG]  [BUGGY]  if(!newRecord)printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
124	[BUG]  [BUGGY]  if(newRecord!=  printRecord())printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  printRecord())printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  printRecord())printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
125	[BUG]  [BUGGY]  if(newRecord  >=  printRecord())printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  printRecord())printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  printRecord())printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
126	[BUG]  [BUGGY]  if(newRecord  ==  printRecord());  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord());  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord());  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
127	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())  {  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())  {  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())  {  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
128	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.clone();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.clone();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.clone();	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
129	[BUG]  [BUGGY]  if(newRecord  <  values)  {  printRecord(values);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  values)  {  printRecord(values);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  values)  {  printRecord(values);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
130	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
131	[BUG]  [BUGGY]  else  if(values  ==  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(values  ==  null)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(values  ==  null)println();  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
132	[BUG]  [BUGGY]  else  if(newRecord  ==  null)  printRecord();  else  printRecord();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)  printRecord();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)  printRecord();  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
133	[BUG]  [BUGGY]  if(newRecord  ==  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println();  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
134	[BUG]  [BUGGY]  else  if(newRecord  ==  null)printrecord();  else  printRecord();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)printrecord();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)printrecord();  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
135	[BUG]  [BUGGY]  if(newRecord  ==  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  0)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  0)  {  println();  }	  if(newRecord    >    0)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
136	[BUG]  [BUGGY]  if(newRecord!=  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  0)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  0)  {  println();  }	  if(newRecord    >    0)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
137	[BUG]  [BUGGY]  if(newRecord  >=  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  0)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  0)  {  println();  }	  if(newRecord    >    0)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
138	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
139	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
140	[BUG]  [BUGGY]  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
141	[BUG]  [BUGGY]  final  Object[]  newRecord  =  values.toArray(new  Object[values.size()  ]);  [CE]  <identifier>  expected  [FE]                                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  newRecord  =  values.toArray(new  Object[values.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  newRecord  =  values.toArray(new  Object[values.size()  ]);	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
142	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
143	[BUG]  [BUGGY]  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  [CE]  <identifier>  expected  [FE]                                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
144	[BUG]  [BUGGY]  if(newRecord!=  null)  {  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[  [CE]  <identifier>  expected  [FE]                                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  final  Object[]  newRecord  =  newRecord.toArray(new  Object[values.size()  ]);  for(final  Object[]  newRecord  :  values)  {  print(newRecord.toArray(new  Object[	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
145	[BUG]  [BUGGY]  out.print(values[1]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(values[1]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(values[1]);	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
146	[BUG]  [BUGGY]  if(newRecord)  {  out.print(values[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  out.print(values[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  out.print(values[0]);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
147	[BUG]  [BUGGY]  if(newRecord)  {  out.print(values[0]);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  out.print(values[0]);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  out.print(values[0]);  }  else  {  throw  new  IllegalStateException( " ");  }	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
148	[BUG]  [BUGGY]  out.print(values[0].toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(values[0].toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(values[0].toString());	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
149	[BUG]  [BUGGY]  if(newRecord)  {  out.print(values[0]);  }  else  {  printRecord(values[1]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  out.print(values[0]);  }  else  {  printRecord(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  out.print(values[0]);  }  else  {  printRecord(values[1]);  }	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
150	[BUG]  [BUGGY]  out.write(values[1]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[1]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[1]);	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
151	[BUG]  [BUGGY]  out.write(values[0].toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0].toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0].toString());	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
152	[BUG]  [BUGGY]  out.write(values[0].getValue());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0].getValue());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0].getValue());	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
153	[BUG]  [BUGGY]  out.write(values[0],  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0],  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0],  newRecord);	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
154	[BUG]  [BUGGY]  out.write(values[0],  quote);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0],  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0],  quote);	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
155	[BUG]  [BUGGY]  if(newRecord  ==  quote)print(values[0]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)print(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)print(values[0]);	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
156	[BUG]  [BUGGY]  if(newRecord  ==  quote)print(values.length);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)print(values.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)print(values.length);	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
157	[BUG]  [BUGGY]  if(newRecord  ==  quote)print(values[0],  values[1]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)print(values[0],  values[1]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)print(values[0],  values[1]);	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
158	[BUG]  [BUGGY]  if(newRecord  ==  quote)print(quote);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)print(quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)print(quote);	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
159	[BUG]  [BUGGY]  if(newRecord  ==  value)println();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  value)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  value)println();	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
160	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  out.println();  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
161	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  out.println();  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  out.println();  }  else  {  out.println();  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
162	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  out.println();  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
163	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  out.flush();  }	  if(newRecord!=    quote)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
164	[BUG]  [BUGGY]  final  OutputStream  println)  {  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  OutputStream  println)  {  if(newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  OutputStream  println)  {  if(newRecord)  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
165	[BUG]  [BUGGY]  PrintStream  println)  {  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  PrintStream  println)  {  if(newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	PrintStream  println)  {  if(newRecord)  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
166	[BUG]  [BUGGY]  InputStream  println)  {  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  InputStream  println)  {  if(newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	InputStream  println)  {  if(newRecord)  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
167	[BUG]  [BUGGY]  Appendable  println)  {  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  println)  {  if(newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  println)  {  if(newRecord)  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
168	[BUG]  [BUGGY]  OutputStream  println)  {  if(newRecord  ||  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  OutputStream  println)  {  if(newRecord  ||  quote)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  if(newRecord  ||  quote)  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
169	[BUG]  [BUGGY]  PrintStream  println)  {  if(newRecord)println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  PrintStream  println)  {  if(newRecord)println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	PrintStream  println)  {  if(newRecord)println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
170	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  print();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  print();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  print();  }	  if(newRecord    ==    false)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
171	[BUG]  [BUGGY]  if(newRecord  ==  quote  ||  newRecord!=  println());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote  ||  newRecord!=  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote  ||  newRecord!=  println());	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
172	[BUG]  [BUGGY]  if(newRecord!=  quote  ||  newRecord!=  println());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote  ||  newRecord!=  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote  ||  newRecord!=  println());	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
173	[BUG]  [BUGGY]  if(newRecord!=  quote());  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote());	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
174	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  out.write(values[0]);  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
175	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.write(values[1]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  out.write(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }  else  {  out.write(values[1]);  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
176	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  println();  }  else  {  out.println();  }	  if(newRecord!=    false)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
177	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
178	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value);  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value);  }  else  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord(value);  }  else  {  out.flush();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
179	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
180	[BUG]  [BUGGY]  out.print( "  <   ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "  <   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "  <   ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
181	[BUG]  [BUGGY]  out.print( "Record: ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "Record: ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "Record: ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
182	[BUG]  [BUGGY]  out.print( "  <  / ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "  <  / ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "  <  / ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
183	[BUG]  [BUGGY]  out.print( "  - ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "  - ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "  - ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
184	[BUG]  [BUGGY]  out.print( "] ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "] ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
185	[BUG]  [BUGGY]  out.print( "   ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "   ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
186	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  quote)  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  out.println();  }	  if(newRecord    <    quote)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
187	[BUG]  [BUGGY]  if(newRecord  ==  quote)println(values);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
188	[BUG]  [BUGGY]  if(newRecord  ==  println(values))  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println(values))  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println(values))  throw  new  IllegalArgumentException( " ");	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
189	[BUG]  [BUGGY]  if(newRecord!=  quote)println(values);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
190	[BUG]  [BUGGY]  if(newRecord  ==  println(values))  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println(values))  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println(values))  throw  new  IllegalStateException( " ");	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
191	[BUG]  [BUGGY]  if(newRecord!=  println(values))  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  println(values))  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  println(values))  throw  new  IllegalArgumentException( " ");	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
192	[BUG]  [BUGGY]  if(println(values))  println(values);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(println(values))  println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(println(values))  println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
193	[BUG]  [BUGGY]  if(println(values))  println(newRecord);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(println(values))  println(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(println(values))  println(newRecord);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
194	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  out.println();  }	  if(newRecord    ==    false)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
195	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  out.println();  }	  if(newRecord    ==    false)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
196	[BUG]  [BUGGY]  printRecord(value,  quote);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  quote);	  printRecord(value);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
197	[BUG]  [BUGGY]  printRecord(this.value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(this.value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(this.value);	  printRecord(value);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
198	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
199	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
200	[BUG]  [BUGGY]  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
201	[BUG]  [BUGGY]  final  Object[]  newRecord  =  values.toArray(newRecord);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  newRecord  =  values.toArray(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  newRecord  =  values.toArray(newRecord);	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
202	[BUG]  [BUGGY]  final  Object[]  newRecord  =  values.toArray();  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  newRecord  =  values.toArray();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  newRecord  =  values.toArray();	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
203	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values)  {  print(newRecord);  }  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
204	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values.toArray())  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values.toArray())  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  values.toArray())  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
205	[BUG]  [BUGGY]  else  if(newRecord  ==  value)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  value)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  value)println();  else  printRecord();  }	  else    if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
206	[BUG]  [BUGGY]  else  if(newRecord!=  value)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  value)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  value)println();  else  printRecord();  }	  else    if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
207	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
208	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
209	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
210	[BUG]  [BUGGY]  if(newRecord!=  printRecord())printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  printRecord())printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  printRecord())printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
211	[BUG]  [BUGGY]  if(newRecord  ==  value)printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  value)printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  value)printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
212	[BUG]  [BUGGY]  if(newRecord!=  value)printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value)printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value)printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
213	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  out.println();  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  out.println();  }  else  {  out.println();  }	  if(newRecord!=    quote)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
214	[BUG]  [BUGGY]  if(newRecord  ==  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    <    =    true)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
215	[BUG]  [BUGGY]  if(newRecord!=  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  true)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    <    =    true)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
216	[BUG]  [BUGGY]  printRecord(values,  false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  false);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
217	[BUG]  [BUGGY]  printRecord(this.values,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(this.values,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(this.values,  true);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
218	[BUG]  [BUGGY]  printRecord(newRecord,  true);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(newRecord,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(newRecord,  true);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
219	[BUG]  [BUGGY]  printRecord(values,  null);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  null);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  null);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
220	[BUG]  [BUGGY]  printRecord(values,  true,  quote);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  true,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  true,  quote);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
221	[BUG]  [BUGGY]  printRecord(values,  true,  newRecord);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  true,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  true,  newRecord);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
222	[BUG]  [BUGGY]  printRecord(this,  values,  true);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(this,  values,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(this,  values,  true);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
223	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
224	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
225	[BUG]  [BUGGY]  if(newRecord!=  false)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
226	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord!=    false)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
227	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    <    quote)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
228	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  quote)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    <    quote)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
229	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  println();  }	  if(newRecord    <    quote)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
230	[BUG]  [BUGGY]  if(values!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
231	[BUG]  [BUGGY]  if(values!=  null)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  println();  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
232	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  out.println();  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
233	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
234	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
235	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
236	[BUG]  [BUGGY]  if(newRecord!=  printRecord())printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  printRecord())printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  printRecord())printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
237	[BUG]  [BUGGY]  if(newRecord  ==  value)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  value)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  value)printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
238	[BUG]  [BUGGY]  Printer  out  =  getPrinter();  if(out!=  null)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getPrinter();  if(out!=  null)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getPrinter();  if(out!=  null)printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
239	[BUG]  [BUGGY]  final  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
240	[BUG]  [BUGGY]  PrintStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  PrintStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	PrintStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
241	[BUG]  [BUGGY]  InputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  InputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	InputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
242	[BUG]  [BUGGY]  if(newRecord)  {  OutputStream  println)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  OutputStream  println)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  OutputStream  println)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
243	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
244	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
245	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "   ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "   ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
246	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( ", ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( ", ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.append( ", ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
247	[BUG]  [BUGGY]  if(!newRecord)print(values);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)print(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)print(values);	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
248	[BUG]  [BUGGY]  if(!newRecord)println(values);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)println(values);	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
249	[BUG]  [BUGGY]  if(!newRecord)print(values[0]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)print(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)print(values[0]);	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
250	[BUG]  [BUGGY]  if(newRecord  <  value)  {  printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  value)  {  printRecord(value);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  value)  {  printRecord(value);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
251	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    ==    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
252	[BUG]  [BUGGY]  out.write( "#n ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "#n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "#n ");	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
253	[BUG]  [BUGGY]  out.write( "  <   ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "  <   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "  <   ");	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
254	[BUG]  [BUGGY]  out.write( "> ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "> ");	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
255	[BUG]  [BUGGY]  out.write( "n ".getBytes());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "n ".getBytes());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "n ".getBytes());	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
256	[BUG]  [BUGGY]  out.write( "  <  / ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "  <  / ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "  <  / ");	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
257	[BUG]  [BUGGY]  out.write( "   ");  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "   ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "   ");	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
258	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.write(values[1]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  out.write(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  out.write(values[1]);  }	  if(newRecord!=    quote)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
259	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  out.write(values[0]);  }	  if(newRecord!=    quote)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
260	[BUG]  [BUGGY]  if(newRecord  ==  null)print(values[0]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)print(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)print(values[0]);	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
261	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  quote)println();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  quote)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  quote)println();	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
262	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  ==  0)println();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  ==  0)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  newRecord.length  ==  0)println();	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
263	[BUG]  [BUGGY]  if(newRecord  ==  null)print();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)print();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)print();	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
264	[BUG]  [BUGGY]  if(newRecord  ==  null)print(values);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)print(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)print(values);	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
265	[BUG]  [BUGGY]  out.print(value.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(value.toString());	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
266	[BUG]  [BUGGY]  if(values!=  null)  {  out.println(value.toString());  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  out.println(value.toString());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  out.println(value.toString());  }	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
267	[BUG]  [BUGGY]  if(values!=  null)  {  out.println(value.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  out.println(value.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  out.println(value.toString());  }  else  {  throw  new  IllegalArgumentException( " ");  }	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
268	[BUG]  [BUGGY]  if(values  ==  null)  {  out.println(value.toString());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values  ==  null)  {  out.println(value.toString());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values  ==  null)  {  out.println(value.toString());  }	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
269	[BUG]  [BUGGY]  if(values!=  null)  {  out.println(value.toString());  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  out.println(value.toString());  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  out.println(value.toString());  }  else  {  throw  new  IllegalStateException( " ");  }	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
270	[BUG]  [BUGGY]  out.println(value.getClass().getName());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(value.getClass().getName());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value.getClass().getName());	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
271	[BUG]  [BUGGY]  Printer  out  =  new  Printer(values);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  new  Printer(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(values);	  Printer    out    =    new    Printer(newRecord);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
272	[BUG]  [BUGGY]  Printer  out  =  new  Printer(newRecord,  quote);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  new  Printer(newRecord,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(newRecord,  quote);	  Printer    out    =    new    Printer(newRecord);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
273	[BUG]  [BUGGY]  Printer  out  =  new  Printer(values,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  new  Printer(values,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(values,  newRecord);	  Printer    out    =    new    Printer(newRecord);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
274	[BUG]  [BUGGY]  Printer  out  =  new  Printer(value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  new  Printer(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(value);	  Printer    out    =    new    Printer(newRecord);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
275	[BUG]  [BUGGY]  Printer  out  =  new  Printer(this.values);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  new  Printer(this.values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(this.values);	  Printer    out    =    new    Printer(newRecord);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
276	[BUG]  [BUGGY]  printRecord(value.toString(),  quote);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  quote);	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
277	[BUG]  [BUGGY]  printRecord(value.toString(),  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  newRecord);	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
278	[BUG]  [BUGGY]  printRecord(values.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values.toString());	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
279	[BUG]  [BUGGY]  printRecord(value.toString(),  true);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  true);	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
280	[BUG]  [BUGGY]  printRecord(value.toString()  + "n ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString()  + "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString()  + "n ");	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
281	[BUG]  [BUGGY]  printRecord(value.toString()  + ": ");  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString()  + ": ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString()  + ": ");	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
282	[BUG]  [BUGGY]  }  else  if(newRecord  ==  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  }  else  if(newRecord  ==  null)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	}  else  if(newRecord  ==  null)println();  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
283	[BUG]  [BUGGY]  if(this.newRecord!=  null)println();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(this.newRecord!=  null)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(this.newRecord!=  null)println();	  if(newRecord!=    null)println();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
284	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord.length!=  0)println();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  newRecord.length!=  0)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  newRecord.length!=  0)println();	  if(newRecord!=    null)println();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
285	[BUG]  [BUGGY]  if(values!=  null)println();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)println();	  if(newRecord!=    null)println();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
286	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.get(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(value);	  Appendable    out    =(Appendable)values.get(newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
287	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(0);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.get(0);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(0);	  Appendable    out    =(Appendable)values.get(newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
288	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(newRecord  +  1);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.get(newRecord  +  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(newRecord  +  1);	  Appendable    out    =(Appendable)values.get(newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
289	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(this);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.get(this);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(this);	  Appendable    out    =(Appendable)values.get(newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
290	[BUG]  [BUGGY]  else  if(newRecord!=  null)  printRecord();  else  printRecord();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  null)  printRecord();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)  printRecord();  else  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
291	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println();  printRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)println();  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println();  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
292	[BUG]  [BUGGY]  else  if(newRecord  ==  false)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  false)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  false)println();  else  printRecord();  }	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
293	[BUG]  [BUGGY]  else  if(newRecord  ==  false)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  false)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  false)println();  else  printRecord();	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
294	[BUG]  [BUGGY]  if(newRecord  ==  true)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  true)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  true)println();  else  printRecord();  }	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
295	[BUG]  [BUGGY]  if(newRecord!=  false)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)println();  else  printRecord();  }	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
296	[BUG]  [BUGGY]  printRecord(false);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(false);	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
297	[BUG]  [BUGGY]  printRecord(values,  newRecord,  quote);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  newRecord,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  newRecord,  quote);	  printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
298	[BUG]  [BUGGY]  printRecord(values,  quotes);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  quotes);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  quotes);	  printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
299	[BUG]  [BUGGY]  append(values,  newRecord);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  append(values,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	append(values,  newRecord);	  printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
300	[BUG]  [BUGGY]  printRecord(values,  Quote.None.class);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  Quote.None.class);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  Quote.None.class);	  printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
301	[BUG]  [BUGGY]  if(newRecord  ==  println()  ||  println());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println()  ||  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println()  ||  println());	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
302	[BUG]  [BUGGY]  if(newRecord  ==  printLen())println();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printLen())println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printLen())println();	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
303	[BUG]  [BUGGY]  if(println()  ==  newRecord)println();  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(println()  ==  newRecord)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(println()  ==  newRecord)println();	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
304	[BUG]  [BUGGY]  if(newRecord  ==  println()  ||  println())println();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println()  ||  println())println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println()  ||  println())println();	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
305	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values.toArray())  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values.toArray())  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  newRecord  :  values.toArray())  {  print(newRecord);  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
306	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values.length)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  for(final  Object[]  newRecord  :  values.length)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  newRecord  :  values.length)  {  print(newRecord);  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
307	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
308	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
309	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
310	[BUG]  [BUGGY]  if(newRecord!=  false)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
311	[BUG]  [BUGGY]  getFormat().printRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  getFormat().printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	getFormat().printRecord();	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
312	[BUG]  [BUGGY]  printRecord(false,  true);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(false,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(false,  true);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
313	[BUG]  [BUGGY]  printRecord(false,  false);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(false,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(false,  false);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
314	[BUG]  [BUGGY]  printRecord(false,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(false,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(false,  newRecord);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
315	[BUG]  [BUGGY]  printRecord(true,  quote);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(true,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(true,  quote);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
316	[BUG]  [BUGGY]  printRecord(false,  quote);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(false,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(false,  quote);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
317	[BUG]  [BUGGY]  printRecord(false,  value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(false,  value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(false,  value);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
318	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
319	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.print(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  out.print(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  out.print(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
320	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
321	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( ". ");  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( ". ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
322	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2]);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
323	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2]);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
324	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(values,  values[0],  values[1],  values[2]);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(values,  values[0],  values[1],  values[2]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(values,  values[0],  values[1],  values[2]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2]);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
325	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  out.write(values[0]);  }	  if(newRecord    ==    false)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
326	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord    ==    false)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
327	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
328	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
329	[BUG]  [BUGGY]  if(newRecord!=  false)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
330	[BUG]  [BUGGY]  if(newRecord  ==  false)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
331	[BUG]  [BUGGY]  else  if(values!=  null)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(values!=  null)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(values!=  null)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
332	[BUG]  [BUGGY]  out.write('0');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write('0');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write('0');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	51	None	replace
333	[BUG]  [BUGGY]  out.write('#');  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write('#');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write('#');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	51	None	replace
334	[BUG]  [BUGGY]  out.write('$');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write('$');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write('$');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	51	None	replace
335	[BUG]  [BUGGY]  out.write('/');  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write('/');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write('/');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	51	None	replace
336	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  out.flush();  }	  if(newRecord    ==    false)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
337	[BUG]  [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  println();  }  else  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  println();  }  else  {  out.flush();  }	  if(newRecord    ==    false)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
338	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  out.close();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  out.close();  }	  if(newRecord    ==    false)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
339	[BUG]  [BUGGY]  printRecord(value,  newRecord,  quote);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value,  newRecord,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  newRecord,  quote);	  printRecord(value,    newRecord);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
340	[BUG]  [BUGGY]  printRecord(newRecord,  value);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(newRecord,  value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(newRecord,  value);	  printRecord(value,    newRecord);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
341	[BUG]  [BUGGY]  printRecord(value,  quotes);  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value,  quotes);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  quotes);	  printRecord(value,    newRecord);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
342	[BUG]  [BUGGY]  printRecord(value,  value);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value,  value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  value);	  printRecord(value,    newRecord);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
343	[BUG]  [BUGGY]  final  OutputStream  println)  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  OutputStream  println)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  OutputStream  println)  {  println();  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
344	[BUG]  [BUGGY]  Appendable  println)  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  println)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  println)  {  println();  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
345	[BUG]  [BUGGY]  final  OutputStream  println)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  OutputStream  println)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  OutputStream  println)  {  println();  }  else  {  out.write(values[0]);  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
346	[BUG]  [BUGGY]  Appendable  println)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  println)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  println)  {  println();  }  else  {  out.write(values[0]);  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
347	[BUG]  [BUGGY]  InputStream  println)  {  println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  InputStream  println)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	InputStream  println)  {  println();  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
348	[BUG]  [BUGGY]  OutputStream  println)  {  println();  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  OutputStream  println)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  println();  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
349	[BUG]  [BUGGY]  PrintStream  println)  {  println();  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  PrintStream  println)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	PrintStream  println)  {  println();  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
350	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  out.println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    ==    false)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
351	[BUG]  [BUGGY]  if(newRecord!=  printRecord())println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  printRecord())println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  printRecord())println();  else  printRecord();  }	  if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
352	[BUG]  [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
353	[BUG]  [BUGGY]  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
354	[BUG]  [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
355	[BUG]  [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[size()  ]);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  out  =  values.toArray(new  Object[size()  ]);	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
356	[BUG]  [BUGGY]  if(newRecord!=  true)println();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  true)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  true)println();	  if(newRecord!=    false)println();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
357	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  if(!newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  if(!newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  if(!newRecord)  {  println();  }	  if(!newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
358	[BUG]  [BUGGY]  out.println( "  <  =  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "  <  =  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "  <  =  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    <    =    false)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
359	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println();  }  else  {  throw  new  IllegalStateException( " ".);  }	  if(newRecord    <    =    false)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
360	[BUG]  [BUGGY]  out.append('n');  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.append('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.append('n');	  out.write('n');    	non-compiled	[CE]  <identifier>  expected	51	None	replace
361	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord();  else  printRecord();  }	  if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
362	[BUG]  [BUGGY]  if(newRecord!=  null  ||  newRecord!=  println());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  newRecord!=  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  newRecord!=  println());	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
363	[BUG]  [BUGGY]  if(newRecord!=  value)  {  println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value)  {  println();  }	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
364	[BUG]  [BUGGY]  if(newRecord  ==  println())  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println())  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println())	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
365	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    ==    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
366	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  quote)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  quote)  {  println();  }	  if(newRecord    ==    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
367	[BUG]  [BUGGY]  out.write(values[0]  ==  null?  values[1]  :  value.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0]  ==  null?  values[1]  :  value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]  ==  null?  values[1]  :  value.toString());	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
368	[BUG]  [BUGGY]  out.write(values[0]!=  null?  values[1]  :  value.toString());  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0]!=  null?  values[1]  :  value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]!=  null?  values[1]  :  value.toString());	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
369	[BUG]  [BUGGY]  out.write(values[0]  ==  null? " "  :  values[1]);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0]  ==  null? " "  :  values[1]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]  ==  null? " "  :  values[1]);	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
370	[BUG]  [BUGGY]  out.write(values[0]  ==  null? " "  :  value.toString());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0]  ==  null? " "  :  value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]  ==  null? " "  :  value.toString());	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
371	[BUG]  [BUGGY]  out.write(values[0]!=  null?  values[1]  :  value);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0]!=  null?  values[1]  :  value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]!=  null?  values[1]  :  value);	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
372	[BUG]  [BUGGY]  out.write( "] ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "] ");	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
373	[BUG]  [BUGGY]  if(newRecord  >  0)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >  0)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  0)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
374	[BUG]  [BUGGY]  if(newRecord  >  0)  {  printRecord(values);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >  0)  {  printRecord(values);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  0)  {  printRecord(values);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
375	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  printRecord(values);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  quote)  {  printRecord(values);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  printRecord(values);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
376	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.append( "n   ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.append( "n   ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  printRecord(newRecord);  }  else  {  out.append( "n   ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
377	[BUG]  [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value!=  null)  {  printRecord(newRecord);  }  else  {  out.append( "null ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.append(   "n   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
378	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(value,  newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(value,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(value,  newRecord);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
379	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(value  /  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(value  /  2);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(value  /  2);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
380	[BUG]  [BUGGY]  getFormat().println( ">> ");  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  getFormat().println( ">> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	getFormat().println( ">> ");	  if(newRecord!=    false)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
381	[BUG]  [BUGGY]  if(newRecord  ==  false)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println(value);  else  printRecord();  }	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
382	[BUG]  [BUGGY]  printRecord(true,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(true,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(true,  newRecord);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
383	[BUG]  [BUGGY]  if(newRecord  ==  null)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
384	[BUG]  [BUGGY]  if(newRecord!=  false)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
385	[BUG]  [BUGGY]  if(newRecord)println(value,  quote);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)println(value,  quote);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)println(value,  quote);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
386	[BUG]  [BUGGY]  out.println(value);  else  printRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(value);  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value);  else  printRecord();	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
387	[BUG]  [BUGGY]  if(newRecord!=  false)println(values);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)println(values);	  if(newRecord!=    false)println();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
388	[BUG]  [BUGGY]  if(!newRecord)  {  out.println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)  {  out.println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  out.println();  }  else  {  out.write(values[0]);  }	  if(!newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
389	[BUG]  [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.write(values[1]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.write(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  println();  }  else  {  out.write(values[1]);  }	  if(!newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
390	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println(value);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  println(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println(value);  }	  if(newRecord    ==    false)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
391	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  println( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  println( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  println( " ");  }	  if(newRecord    ==    false)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
392	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord  ==  println());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  newRecord  ==  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  newRecord  ==  println());	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
393	[BUG]  [BUGGY]  else  if(value!=  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(value!=  null)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(value!=  null)println();  else  printRecord();  }	  else    if(newRecord    >=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
394	[BUG]  [BUGGY]  if(newRecord  ==  printRecord()  ||  quote)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord()  ||  quote)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord()  ||  quote)println();  else  printRecord();  }	  if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
395	[BUG]  [BUGGY]  printRecord(values,  newRecord  +  quote);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  newRecord  +  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  newRecord  +  quote);	  printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
396	[BUG]  [BUGGY]  printRecord(value,  newRecord  +  quote);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value,  newRecord  +  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  newRecord  +  quote);	  printRecord(value,    newRecord);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
397	[BUG]  [BUGGY]  printRecord(value,  values);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value,  values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  values);	  printRecord(value,    newRecord);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
398	[BUG]  [BUGGY]  Printer  out  =  new  Printer(value,  newRecord);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  new  Printer(value,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(value,  newRecord);	  Printer    out    =    new    Printer(newRecord);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
399	[BUG]  [BUGGY]  if(newRecord!=  quote)print(value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)print(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)print(value);	  if(newRecord!=    quote)println();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
400	[BUG]  [BUGGY]  if(newRecord!=  quote)print();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)print();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)print();	  if(newRecord!=    quote)println();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
401	[BUG]  [BUGGY]  if(newRecord  ==  false)println(values);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
402	[BUG]  [BUGGY]  if(newRecord  ==  printRecord)println(values);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord)println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
403	[BUG]  [BUGGY]  if(newRecord!=  println(values))  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  println(values))  throw  new  IllegalStateException( " ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  println(values))  throw  new  IllegalStateException( " ");	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
404	[BUG]  [BUGGY]  else  if(value  ==  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(value  ==  null)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(value  ==  null)println();  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
405	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println( " ");  else  printRecord();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)println( " ");  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println( " ");  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
406	[BUG]  [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value!=  null)  {  printRecord(newRecord);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
407	[BUG]  [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value!=  null)  {  printRecord(newRecord);  }  else  {  out.println();  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
408	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord())println( " ");  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord())println( " ");  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord())println( " ");  else  printRecord();  }	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
409	[BUG]  [BUGGY]  TextUtilities.printRecord(out,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  TextUtilities.printRecord(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	TextUtilities.printRecord(out,  newRecord);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
410	[BUG]  [BUGGY]  TextUtilities.printRecord(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  TextUtilities.printRecord(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	TextUtilities.printRecord(newRecord);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
411	[BUG]  [BUGGY]  if(newRecord  ==  quote)print(value);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)print(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)print(value);	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
412	[BUG]  [BUGGY]  if(newRecord  ==  quote)print(values);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)print(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)print(values);	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
413	[BUG]  [BUGGY]  if(newRecord  ==  quote)print(value.toString());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)print(value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)print(value.toString());	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
414	[BUG]  [BUGGY]  if(newRecord!=  null  ||  quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  quote)  {  printRecord();  }	  if(newRecord!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
415	[BUG]  [BUGGY]  Printer  out  =  getFormat().printRecord(value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getFormat().printRecord(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getFormat().printRecord(value);	  if(newRecord!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
416	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord(newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord(newRecord);	  if(newRecord!=    null)    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
417	[BUG]  [BUGGY]  if(newRecord  ==  false)println(value);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
418	[BUG]  [BUGGY]  if(newRecord!=  false)println(value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
419	[BUG]  [BUGGY]  if(newRecord  ==  printRecord)println(value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
420	[BUG]  [BUGGY]  if(newRecord  ==  null)println(value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
421	[BUG]  [BUGGY]  if(newRecord!=  null)println(value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
422	[BUG]  [BUGGY]  if(newRecord  ==  println(value))  println(value);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println(value))  println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println(value))  println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
423	[BUG]  [BUGGY]  if(newRecord  ==  println(value);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
424	[BUG]  [BUGGY]  out.print( "  : ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "  : ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "  : ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
425	[BUG]  [BUGGY]  out.print( "> ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "> ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "> ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
426	[BUG]  [BUGGY]  if(!newRecord)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  out.flush();  }	  if(!newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
427	[BUG]  [BUGGY]  if(newRecord)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  out.flush();  }	  if(!newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
428	[BUG]  [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)  {  println();  }  else  {  out.close();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  println();  }  else  {  out.close();  }	  if(!newRecord)    {    println();    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
429	[BUG]  [BUGGY]  if(newRecord  ==  println()  ||  quote)println();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println()  ||  quote)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println()  ||  quote)println();	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
430	[BUG]  [BUGGY]  if(newRecord  ==  print())println();  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  print())println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  print())println();	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
431	[BUG]  [BUGGY]  if(newRecord  ==  println())println(values);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println())println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println())println(values);	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
432	[BUG]  [BUGGY]  if(newRecord  ==  printObject())println();  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printObject())println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printObject())println();	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
433	[BUG]  [BUGGY]  out.print('n');  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print('n');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print('n');	  out.print(quote);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
434	[BUG]  [BUGGY]  out.append(value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.append(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.append(value);	  out.print(quote);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
435	[BUG]  [BUGGY]  out.print(this.value);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(this.value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(this.value);	  out.print(quote);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
436	[BUG]  [BUGGY]  else  if(value!=  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(value!=  null)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(value!=  null)println();  else  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
437	[BUG]  [BUGGY]  else  if(newRecord!=  null)printrecord();  else  printRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  null)printrecord();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)printrecord();  else  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
438	[BUG]  [BUGGY]  if(newRecord!=  null)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)println();  else  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
439	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2]);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
440	[BUG]  [BUGGY]  Printer  out  =  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  FormatUtils.writePaddedInteger(values[0],  values[1],  values[2]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2]);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
441	[BUG]  [BUGGY]  Printer  out  =  FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2]);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  FormatUtils.writePaddedInteger(value,  values[0],  values[1],  values[2]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2]);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
442	[BUG]  [BUGGY]  printRecord(value.toString(),  false);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  false);	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
443	[BUG]  [BUGGY]  printRecord(value.toString(),  value);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  value);	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
444	[BUG]  [BUGGY]  printRecord(value.getClass());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.getClass());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.getClass());	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
445	[BUG]  [BUGGY]  out.print(values[index]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print(values[index]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print(values[index]);	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
446	[BUG]  [BUGGY]  print(values[0]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  print(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	print(values[0]);	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
447	[BUG]  [BUGGY]  if(newRecord  <  quote)println();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  quote)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)println();	  if(newRecord    >=    quote)println();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
448	[BUG]  [BUGGY]  if(newRecord!=  quote)printLen();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)printLen();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)printLen();	  if(newRecord    >=    quote)println();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
449	[BUG]  [BUGGY]  else  if(newRecord!=  false)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  false)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  false)println();  else  printRecord();  }	  else    if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
450	[BUG]  [BUGGY]  Printer  out  =  getFormat().println(quote);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getFormat().println(quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getFormat().println(quote);	  if(newRecord    ==    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
451	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  print();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  print();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  print();  }	  if(newRecord    ==    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
452	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printLen();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printLen();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printLen();  }	  if(newRecord    ==    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
453	[BUG]  [BUGGY]  out.println(value.toString()  + "n ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(value.toString()  + "n ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value.toString()  + "n ");	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
454	[BUG]  [BUGGY]  out.println(value.toString(),  newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(value.toString(),  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value.toString(),  newRecord);	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
455	[BUG]  [BUGGY]  out.println(value.toExternalFormat());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(value.toExternalFormat());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value.toExternalFormat());	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
456	[BUG]  [BUGGY]  out.println(value.toString(),  quote);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(value.toString(),  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value.toString(),  quote);	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
457	[BUG]  [BUGGY]  if(newRecord  ==  false)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
458	[BUG]  [BUGGY]  else  if(newRecord)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord)printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
459	[BUG]  [BUGGY]  if(newRecord!=  false)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
460	[BUG]  [BUGGY]  if(newRecord)  {  OutputStream  println)  {  println();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  OutputStream  println)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  OutputStream  println)  {  println();  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
461	[BUG]  [BUGGY]  OutputStream  println)  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  OutputStream  println)  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  out.write(values[0]);  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
462	[BUG]  [BUGGY]  if(newRecord  ==  true)  {  println();  }  else  {  out.write(values[1]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  true)  {  println();  }  else  {  out.write(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  true)  {  println();  }  else  {  out.write(values[1]);  }	  if(newRecord    <    =    true)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
463	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(value,  values[0],  values[1],  values[2],  values[3]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  TextUtils.writePaddedInteger(value,  values[0],  values[1],  values[2],  values[3]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	TextUtils.writePaddedInteger(value,  values[0],  values[1],  values[2],  values[3]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
464	[BUG]  [BUGGY]  TextUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  TextUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	TextUtils.writePaddedInteger(values[0],  values[1],  values[2],  values[3]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
465	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(value,  values[1],  values[2],  values[3]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(value,  values[1],  values[2],  values[3]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(value,  values[1],  values[2],  values[3]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
466	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(this.value);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.get(this.value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(this.value);	  Appendable    out    =(Appendable)values.get(newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
467	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(index);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.get(index);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(index);	  Appendable    out    =(Appendable)values.get(newRecord);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
468	[BUG]  [BUGGY]  Printer  out  =  getFormat().printRecord(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getFormat().printRecord(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getFormat().printRecord(newRecord);	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
469	[BUG]  [BUGGY]  out.write('ufffd');  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write('ufffd');  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write('ufffd');	  out.flush();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
470	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
471	[BUG]  [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[out.size()  ]));  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  out  =  values.toArray(new  Object[out.size()  ]));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  out  =  values.toArray(new  Object[out.size()  ]));	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
472	[BUG]  [BUGGY]  Appendable  out  =(Appendable)values.get(out.size()  -  1);  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)values.get(out.size()  -  1);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)values.get(out.size()  -  1);	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
473	[BUG]  [BUGGY]  final  Object[]  out  =  value.toArray(new  Object[out.size()  ]);  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  out  =  value.toArray(new  Object[out.size()  ]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  out  =  value.toArray(new  Object[out.size()  ]);	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
474	[BUG]  [BUGGY]  final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  newRecord  :  values)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  newRecord  :  values)  {  print(newRecord);  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
475	[BUG]  [BUGGY]  final  Object[]  newRecord  =  values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  Object[]  newRecord  =  values)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  Object[]  newRecord  =  values)  {  print(newRecord);  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
476	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  items)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  items)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  items)  {  print(newRecord);  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
477	[BUG]  [BUGGY]  if(newRecord)  {  out.println(values[0]);  }  else  {  printRecord(values[1]);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  out.println(values[0]);  }  else  {  printRecord(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  out.println(values[0]);  }  else  {  printRecord(values[1]);  }	  out.println(values[0]);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
478	[BUG]  [BUGGY]  if(newRecord)  {  out.println(values[0]);  }  else  {  format.printRecord(values[1]);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  out.println(values[0]);  }  else  {  format.printRecord(values[1]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  out.println(values[0]);  }  else  {  format.printRecord(values[1]);  }	  out.println(values[0]);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
479	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
480	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  printRecord(value,  newRecord);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  printRecord(value,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  printRecord(value,  newRecord);  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
481	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(value,  newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(value,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(value,  newRecord);  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
482	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
483	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value.getClass()));  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value.getClass()));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value.getClass()));  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
484	[BUG]  [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
485	[BUG]  [BUGGY]  Printer  out  =  getFormat().println(newRecord);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getFormat().println(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getFormat().println(newRecord);	  if(newRecord    >=    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
486	[BUG]  [BUGGY]  if(newRecord  >=  null)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  null)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  null)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
487	[BUG]  [BUGGY]  if(newRecord)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
488	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printLn();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printLn();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printLn();  }	  if(newRecord!=    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
489	[BUG]  [BUGGY]  if(newRecord  >=  true)  {  println();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  true)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  true)  {  println();  }	  if(newRecord    <    =    true)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
490	[BUG]  [BUGGY]  out.println( "Record:  missing ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Record:  missing ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Record:  missing ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
491	[BUG]  [BUGGY]  out.println( "Record  ' "  +  quote);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Record  ' "  +  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Record  ' "  +  quote);	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
492	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    <    quote)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
493	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord    <    quote)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
494	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }	  if(newRecord    <    quote)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
495	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value));  }	  if(newRecord    <    quote)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
496	[BUG]  [BUGGY]  if(newRecord!=  null)  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  out.flush();  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
497	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.close();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.close();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord);  }  else  {  out.close();  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
498	[BUG]  [BUGGY]  if(values  ==  null)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values  ==  null)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values  ==  null)  {  printRecord(values);  }	  if(values!=    null)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
499	[BUG]  [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value!=  null)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
500	[BUG]  [BUGGY]  else  if(value  ==  null)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(value  ==  null)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(value  ==  null)println();  else  printRecord();  }	  else    if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
501	[BUG]  [BUGGY]  else  if(newRecord  ==  null)printrecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)printrecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)printrecord();  else  printRecord();  }	  else    if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
502	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
503	[BUG]  [BUGGY]  if(newRecord!=  false)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
504	[BUG]  [BUGGY]  if(newRecord  >  0)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >  0)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  0)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
505	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  false)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  false)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
506	[BUG]  [BUGGY]  if(newRecord  >  0)  {  printRecord(value);  }  else  {  out.flush();  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >  0)  {  printRecord(value);  }  else  {  out.flush();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  0)  {  printRecord(value);  }  else  {  out.flush();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
507	[BUG]  [BUGGY]  if(newRecord  ==  null)println(values);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println(values);	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
508	[BUG]  [BUGGY]  if(newRecord  ==  null)print(value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)print(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)print(value);	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
509	[BUG]  [BUGGY]  if(value  instanceof  Number)  {  if(newRecord  ==  null)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value  instanceof  Number)  {  if(newRecord  ==  null)  {  printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value  instanceof  Number)  {  if(newRecord  ==  null)  {  printRecord(newRecord);  }	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
510	[BUG]  [BUGGY]  Appendable  out)  {  if(newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out)  {  if(newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out)  {  if(newRecord)  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
511	[BUG]  [BUGGY]  OutputStream  println)  {  if(newRecord  ||  println())  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  OutputStream  println)  {  if(newRecord  ||  println())  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  if(newRecord  ||  println())  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
512	[BUG]  [BUGGY]  OutputStream  println)  {  if(!newRecord)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  OutputStream  println)  {  if(!newRecord)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  if(!newRecord)  {  println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
513	[BUG]  [BUGGY]  if(newRecord  >  0)  {  printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >  0)  {  printRecord(value);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  0)  {  printRecord(value);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
514	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  value)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  value)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  value)  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
515	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray(new  Object[values.size()  ]))  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray(new  Object[values.size()  ]))  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray(new  Object[values.size()  ]))  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
516	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
517	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
518	[BUG]  [BUGGY]  if(println!=  null)println();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(println!=  null)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(println!=  null)println();	  if(newRecord!=    null)println();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
519	[BUG]  [BUGGY]  if(value!=  null)println();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value!=  null)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value!=  null)println();	  if(newRecord!=    null)println();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
520	[BUG]  [BUGGY]  if(newRecord  ==  false)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
521	[BUG]  [BUGGY]  if(newRecord!=  value)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value)printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
522	[BUG]  [BUGGY]  if(newRecord!=  false)printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
523	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  printRecord(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
524	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  printRecord(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  printRecord(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
525	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  false)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  false)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
526	[BUG]  [BUGGY]  if(!newRecord)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
527	[BUG]  [BUGGY]  if(newRecord  >  0)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >  0)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  0)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
528	[BUG]  [BUGGY]  if(newRecord  >=  false)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  false)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  false)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
529	[BUG]  [BUGGY]  if(newRecord  <  =  true)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  true)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  true)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
530	[BUG]  [BUGGY]  if(newRecord  <  =  false)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  false)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  false)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
531	[BUG]  [BUGGY]  TextUtilities.println(out,  newRecord);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  TextUtilities.println(out,  newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	TextUtilities.println(out,  newRecord);	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
532	[BUG]  [BUGGY]  printRecord(value,  false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value,  false);	  printRecord(values,    true);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
533	[BUG]  [BUGGY]  Printer  out  =  getFormat();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  getFormat();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  getFormat();	  Printer    out    =    getPrinter();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
534	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  out.write( "n ");  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  out.write( "n ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(value);  }  else  {  out.write( "n ");  }	  printRecord(value);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
535	[BUG]  [BUGGY]  if(!newRecord)println(value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)println(value);	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
536	[BUG]  [BUGGY]  if(!newRecord)print(value);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)print(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)print(value);	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
537	[BUG]  [BUGGY]  if(newRecord  ==  null)printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
538	[BUG]  [BUGGY]  if(newRecord!=  null)printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
539	[BUG]  [BUGGY]  if(newRecord!=  value)printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value)printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value)printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
540	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())record();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())record();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())record();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
541	[BUG]  [BUGGY]  if(newRecord  ==  false)printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
542	[BUG]  [BUGGY]  if(newRecord!=  false)printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
543	[BUG]  [BUGGY]  else  if(newRecord!=  null)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  null)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)println(value);  else  printRecord();  }	  else    if(newRecord!=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
544	[BUG]  [BUGGY]  else  if(newRecord!=  null)println( " ");  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  null)println( " ");  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)println( " ");  else  printRecord();  }	  else    if(newRecord!=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
545	[BUG]  [BUGGY]  if(value  ==  null)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value  ==  null)  {  printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value  ==  null)  {  printRecord(newRecord);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
546	[BUG]  [BUGGY]  if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord(newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
547	[BUG]  [BUGGY]  if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord(newRecord);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
548	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord,  newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord,  newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord,  newRecord);  }  else  {  throw  new  IllegalStateException( " ");  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
549	[BUG]  [BUGGY]  if(this.values!=  null)  {  printRecord(this.values);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(this.values!=  null)  {  printRecord(this.values);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(this.values!=  null)  {  printRecord(this.values);  }  else  {  out.println();  }	  printRecord(this.values);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
550	[BUG]  [BUGGY]  out.println( "  => ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "  => ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "  => ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
551	[BUG]  [BUGGY]  out.println( "Recording: ");  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Recording: ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Recording: ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
552	[BUG]  [BUGGY]  out.println( "Recording  quote: ");  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println( "Recording  quote: ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println( "Recording  quote: ");	  out.println(   "n   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
553	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray(new  Object[values.size()  ]));  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
554	[BUG]  [BUGGY]  print(newRecord.toArray(new  Object[values.size()  ]));  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  print(newRecord.toArray(new  Object[values.size()  ]));  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	print(newRecord.toArray(new  Object[values.size()  ]));	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
555	[BUG]  [BUGGY]  FormatUtils.writePaddedInteger(values[0],  value,  values[1],  values[2],  values[3]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  FormatUtils.writePaddedInteger(values[0],  value,  values[1],  values[2],  values[3]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	FormatUtils.writePaddedInteger(values[0],  value,  values[1],  values[2],  values[3]);	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    FormatUtils.writePaddedInteger(values[0],    values[1],    values[2],    values[3]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
556	[BUG]  [BUGGY]  if(newRecord!=  values)printRecord(values);  else  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  values)printRecord(values);  else  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  values)printRecord(values);  else  printRecord(values);  }	  if(values!=    null)    printRecord(values);    else    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
557	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord())println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord())println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord())println(value);  else  printRecord();  }	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
558	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord())println(value.toString());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord())println(value.toString());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord())println(value.toString());  else  printRecord();  }	  else    if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
559	[BUG]  [BUGGY]  if(newRecord!=  null)println(value.toString());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)println(value.toString());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)println(value.toString());  else  printRecord();  }	  if(newRecord!=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
560	[BUG]  [BUGGY]  if(newRecord!=  null)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)println(value);  else  printRecord();  }	  if(newRecord!=    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
561	[BUG]  [BUGGY]  printRecord(values,  newRecord  + "] ");  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values,  newRecord  + "] ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values,  newRecord  + "] ");	  printRecord(values,    newRecord);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
562	[BUG]  [BUGGY]  OutputStream  println)  {  if(newRecord)println();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  OutputStream  println)  {  if(newRecord)println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	OutputStream  println)  {  if(newRecord)println();  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
563	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
564	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  printRecord();  }	  if(newRecord)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
565	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  print(value);  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  quote)  {  print(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  print(value);  }	  if(newRecord    <    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
566	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println(value);  else  printRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)println(value);  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println(value);  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
567	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println(value.toString());  else  printRecord();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)println(value.toString());  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println(value.toString());  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
568	[BUG]  [BUGGY]  else  if(newRecord  ==  value)println();  else  printRecord();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  value)println();  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  value)println();  else  printRecord();	  else    if(newRecord    ==    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
569	[BUG]  [BUGGY]  if(newRecord!=  quote)flush();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)flush();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)flush();	  if(newRecord!=    quote)println();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
570	[BUG]  [BUGGY]  if(!newRecord)  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)  {  out.write(values[0]);  }	  if(!newRecord)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
571	[BUG]  [BUGGY]  printRecord(value.toString(),  value.toLowerCase());  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  value.toLowerCase());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  value.toLowerCase());	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
572	[BUG]  [BUGGY]  printRecord(value.toString(),  value.toString());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  value.toString());	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
573	[BUG]  [BUGGY]  printRecord(value.toString(),  value.toUpperCase());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(value.toString(),  value.toUpperCase());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(value.toString(),  value.toUpperCase());	  printRecord(value.toString());    	non-compiled	[CE]  <identifier>  expected	81	None	replace
574	[BUG]  [BUGGY]  if(newRecord!=  null  ||  quote)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  quote)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  quote)  {  println();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
575	[BUG]  [BUGGY]  if(newRecord!=  null)  {  print();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  print();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  print();  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
576	[BUG]  [BUGGY]  if(newRecord!=  null)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  print(newRecord);  }	  if(newRecord!=    null)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
577	[BUG]  [BUGGY]  out.print( "  => ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.print( "  => ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.print( "  => ");	  out.print(   "n   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
578	[BUG]  [BUGGY]  InputStream  println)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  InputStream  println)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	InputStream  println)  {  println();  }  else  {  out.write(values[0]);  }	  OutputStream    println)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
579	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())  {  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())  {  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())  {  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
580	[BUG]  [BUGGY]  if(newRecord!=  values)  {  printRecord();  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  values)  {  printRecord();  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  values)  {  printRecord();  if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
581	[BUG]  [BUGGY]  if(values!=  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
582	[BUG]  [BUGGY]  if(newRecord!=  values)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  values)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  values)  {  printRecord();  }	  if(newRecord)printRecord();    if(values!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
583	[BUG]  [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  FormatUtils.writePaddedInteger(value,  newRecord);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  printRecord(value);  }  else  {  FormatUtils.writePaddedInteger(value,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  printRecord(value);  }  else  {  FormatUtils.writePaddedInteger(value,  newRecord);  }	  printRecord(value);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
584	[BUG]  [BUGGY]  if(newRecord)  printRecord(value);  else  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  printRecord(value);  else  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  printRecord(value);  else  printRecord(value);  }	  printRecord(value);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
585	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
586	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  for(final  Object[]  newRecord  :  newRecords)  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
587	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord)  {  print(newRecord);  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
588	[BUG]  [BUGGY]  if(newRecord  ==  null)println(value.toString());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)println(value.toString());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println(value.toString());  else  printRecord();  }	  if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
589	[BUG]  [BUGGY]  if(newRecord  ==  printRecord(value))  println(value);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord(value))  println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord(value))  println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
590	[BUG]  [BUGGY]  if(newRecord!=  printRecord)println(value);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  printRecord)println(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  printRecord)println(value);	  if(newRecord)println(value);    	non-compiled	[CE]  <identifier>  expected	115	None	replace
591	[BUG]  [BUGGY]  if(newRecord  ==  false)println(value.toString());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)println(value.toString());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println(value.toString());  else  printRecord();  }	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
592	[BUG]  [BUGGY]  if(newRecord  ==  false)println(value.getClass().getName());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)println(value.getClass().getName());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println(value.getClass().getName());  else  printRecord();  }	  if(newRecord    ==    false)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
593	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  print();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  print();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  print();  }	  if(newRecord!=    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
594	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printList();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printList();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printList();  }	  if(newRecord!=    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
595	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printLenient();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printLenient();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printLenient();  }	  if(newRecord!=    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
596	[BUG]  [BUGGY]  else  if(newRecord!=  null)println(value);  else  printRecord();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  null)println(value);  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)println(value);  else  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
597	[BUG]  [BUGGY]  else  if(newRecord!=  null)println(value.toString());  else  printRecord();  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  null)println(value.toString());  else  printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  null)println(value.toString());  else  printRecord();	  else    if(newRecord!=    null)println();    else    printRecord();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
598	[BUG]  [BUGGY]  else  if(newRecord)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord)println(value);  else  printRecord();  }	  else    if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
599	[BUG]  [BUGGY]  else  if(!newRecord)println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(!newRecord)println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(!newRecord)println();  else  printRecord();  }	  else    if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
600	[BUG]  [BUGGY]  else  if(newRecord)println(value.toString());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord)println(value.toString());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord)println(value.toString());  else  printRecord();  }	  else    if(newRecord)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
601	[BUG]  [BUGGY]  if(newRecord!=  value  ||  newRecord!=  println());  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value  ||  newRecord!=  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value  ||  newRecord!=  println());	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
602	[BUG]  [BUGGY]  if(newRecord!=  value  ||  newRecord  ==  println());  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  value  ||  newRecord  ==  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  value  ||  newRecord  ==  println());	  if(newRecord!=    println());    	non-compiled	[CE]  <identifier>  expected	34	None	replace
603	[BUG]  [BUGGY]  if(newRecord  <  quote)  {  println();  }  else  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  quote)  {  println();  }  else  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  quote)  {  println();  }  else  {  out.write(values[0]);  }	  if(newRecord    ==    quote)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
604	[BUG]  [BUGGY]  if(newRecord  ==  quote())println();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote())println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote())println();	  if(newRecord    ==    println())println();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
605	[BUG]  [BUGGY]  if(newRecord!=  false)println(value.toString());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)println(value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)println(value.toString());	  if(newRecord!=    false)println();    	non-compiled	[CE]  <identifier>  expected	72	None	replace
606	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
607	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
608	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(value);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  printRecord(value);  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
609	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.get(index);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.get(index);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.get(index);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
610	[BUG]  [BUGGY]  Appendable  out  =(Appendable)this.values.remove(value);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Appendable  out  =(Appendable)this.values.remove(value);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Appendable  out  =(Appendable)this.values.remove(value);	  Appendable    out    =(Appendable)this.values.get(value);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
611	[BUG]  [BUGGY]  if(newRecord  ==  println(values);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
612	[BUG]  [BUGGY]  if(newRecord!=  values)println(values);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  values)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  values)println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
613	[BUG]  [BUGGY]  if(newRecord)println(values,  quote);  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)println(values,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)println(values,  quote);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
614	[BUG]  [BUGGY]  if(newRecord  <  =  true)println(values);  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  true)println(values);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  true)println(values);	  if(newRecord)println(values);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
615	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord.cloneTree());  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord.cloneTree());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord.cloneTree());  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
616	[BUG]  [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord.clone());  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  printRecord(newRecord.clone());  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  printRecord(newRecord.clone());  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
617	[BUG]  [BUGGY]  out.println(value.toString()  + ": ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(value.toString()  + ": ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(value.toString()  + ": ");	  out.println(value.toString());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
618	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]),  newRecord)  {  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]),  newRecord)  {  printRecord(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]),  newRecord)  {  printRecord(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
619	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  printRecord(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  printRecord(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
620	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  printRecord(out);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  printRecord(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  printRecord(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    printRecord(out);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
621	[BUG]  [BUGGY]  printRecord(values[0]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(values[0]);	  out.print(values[0]);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
622	[BUG]  [BUGGY]  else  if(newRecord  ==  printRecord())printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  printRecord())printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  printRecord())printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
623	[BUG]  [BUGGY]  else  if(newRecord!=  value)printRecord();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord!=  value)printRecord();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord!=  value)printRecord();  else  printRecord();  }	  if(newRecord)printRecord();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
624	[BUG]  [BUGGY]  Printer  out  =  new  Printer(values,  quote);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Printer  out  =  new  Printer(values,  quote);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Printer  out  =  new  Printer(values,  quote);	  printRecord(values,    quote);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
625	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.values)  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.values)  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.values)  {  print(newRecord);  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
626	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray())  {  print(newRecord);  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray())  {  print(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecord.toArray())  {  print(newRecord);  }	  if(values!=    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
627	[BUG]  [BUGGY]  if(newRecord!=  null)flush();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)flush();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)flush();	  if(newRecord!=    null)println();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
628	[BUG]  [BUGGY]  out.write( "# ");  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write( "# ");  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write( "# ");	  out.write(   "n   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
629	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  ==  0)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  ==  0)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  newRecord.length  ==  0)  {  printRecord();  }	  if(newRecord    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
630	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  printRecord();  }	  if(newRecord    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
631	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord.length!=  0)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  newRecord.length!=  0)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  newRecord.length!=  0)  {  printRecord();  }	  if(newRecord    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
632	[BUG]  [BUGGY]  if(newRecord  >  quote)println();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >  quote)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >  quote)println();	  if(newRecord    >=    quote)println();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
633	[BUG]  [BUGGY]  if(newRecord  <  =  quote)println();  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)println();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)println();	  if(newRecord    >=    quote)println();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
634	[BUG]  [BUGGY]  if(newRecord  <  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  0)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  0)  {  println();  }	  if(newRecord    >    0)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
635	[BUG]  [BUGGY]  if(newRecord  <  =  0)  {  println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  0)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  0)  {  println();  }	  if(newRecord    >    0)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
636	[BUG]  [BUGGY]  ((  CSVFormat)value).println(newRecord);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  ((  CSVFormat)value).println(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	((  CSVFormat)value).println(newRecord);	  if(newRecord!=    quote)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
637	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  print(value);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  print(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  print(value);  }	  if(newRecord    ==    quote)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
638	[BUG]  [BUGGY]  if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  newRecord.length  ==  0)  {  printRecord();  }	  if(newRecord!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
639	[BUG]  [BUGGY]  if(newRecord!=  null  ||  newRecord.length  <  =  0)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  newRecord.length  <  =  0)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  newRecord.length  <  =  0)  {  printRecord();  }	  if(newRecord!=    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
640	[BUG]  [BUGGY]  out.write(values[0]  ==  null?  values[1]  :  values[1]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0]  ==  null?  values[1]  :  values[1]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]  ==  null?  values[1]  :  values[1]);	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
641	[BUG]  [BUGGY]  out.write(values[0]!=  null?  values[1]  :  values[1]);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.write(values[0]!=  null?  values[1]  :  values[1]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.write(values[0]!=  null?  values[1]  :  values[1]);	  out.write(values[0]);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
642	[BUG]  [BUGGY]  if(newRecord!=  null  ||  newRecord.length  <  =  0)  {  printRecord(newRecord);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null  ||  newRecord.length  <  =  0)  {  printRecord(newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null  ||  newRecord.length  <  =  0)  {  printRecord(newRecord);  }	  if(newRecord!=    null)    {    printRecord(newRecord);    }    else    {    out.flush();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
643	[BUG]  [BUGGY]  Iterator  <  Object>  out  =  newRecords.iterator();  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  Iterator  <  Object>  out  =  newRecords.iterator();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	Iterator  <  Object>  out  =  newRecords.iterator();	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
644	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord(value);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord(value);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
645	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  printRecord(value);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
646	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(value);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  printRecord(value);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
647	[BUG]  [BUGGY]  if(newRecord!=  quote)  {  printRecord(value);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  quote)  {  printRecord(value);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  quote)  {  printRecord(value);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
648	[BUG]  [BUGGY]  if(newRecord  <  =  false)  {  println();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  false)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  false)  {  println();  }	  if(newRecord    <    =    true)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
649	[BUG]  [BUGGY]  final  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  final  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	final  OutputStream  println)  {  if(newRecord)  {  println();  }  else  {  throw  new  IllegalStateException( " ".);  }	  OutputStream    println)    {    if(newRecord)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
650	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  out.println();  }	  if(newRecord!=    false)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
651	[BUG]  [BUGGY]  if(newRecord  ==  null)println(value.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)println(value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)println(value.toString());	  if(newRecord    ==    null)println();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
652	[BUG]  [BUGGY]  if(newRecord!=  false)  {  out.write(values[0]);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  false)  {  out.write(values[0]);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  false)  {  out.write(values[0]);  }	  if(newRecord!=    false)    {    println();    }    else    {    out.write(values[0]);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
653	[BUG]  [BUGGY]  if(value  ==  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(value  ==  null)  {  printRecord(newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(value  ==  null)  {  printRecord(newRecord);  }  else  {  out.println();  }	  if(newRecord    ==    null)    {    printRecord(newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
654	[BUG]  [BUGGY]  if(newRecord!=  values)  {  printRecord();  if(values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  values)  {  printRecord();  if(values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  values)  {  printRecord();  if(values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
655	[BUG]  [BUGGY]  if(newRecord  ==  printRecord()  ||  values  ==  null)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord()  ||  values  ==  null)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord()  ||  values  ==  null)  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
656	[BUG]  [BUGGY]  if(values  ==  null)printRecord();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values  ==  null)printRecord();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values  ==  null)printRecord();	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
657	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())  {  printRecord();  }	  if(newRecord)printRecord();    if(values    ==    null)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
658	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]),  newRecord)  {  print(out);  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]),  newRecord)  {  print(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]),  newRecord)  {  print(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
659	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out,  newRecord);  }  [CE]  <identifier>  expected  [FE]                                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out,  newRecord);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
660	[BUG]  [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  print(out);  }  [CE]  <identifier>  expected  [FE]                                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  print(out);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(values!=  null)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  +  1]))  {  print(out);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
661	[BUG]  [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out,  newRecord);  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord)  {  for(final  Object[]  out  :  values.toArray(new  Object[out.size()  ]))  {  print(out,  newRecord);  }	  if(values!=    null)    {    for(final    Object[]    out    :    values.toArray(new    Object[out.size()    ]))    {    print(out);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
662	[BUG]  [BUGGY]  if(newRecord  ==  printRecord(value))  println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord(value))  println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord(value))  println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
663	[BUG]  [BUGGY]  if(!newRecord)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
664	[BUG]  [BUGGY]  if(newRecord  <  =  true)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  true)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  true)println(value);  else  printRecord();  }	  if(newRecord)println(value);    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
665	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value,  newRecord);  }  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value,  newRecord);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  printRecord(value,  newRecord);  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
666	[BUG]  [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  >=  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  >=  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
667	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  printRecord(value,  newRecord);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(value,    newRecord);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
668	[BUG]  [BUGGY]  if(newRecord  ==  quote)flush();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)flush();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)flush();	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
669	[BUG]  [BUGGY]  if(newRecord  ==  quote)println(value.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)println(value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)println(value.toString());	  if(newRecord    ==    quote)println();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
670	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  println();  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  println();  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  println();  }  else  {  out.println();  }	  if(newRecord    <    quote)    {    println();    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
671	[BUG]  [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecordes)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [CE]  <identifier>  expected  [FE]                                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecordes)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  null)  {  for(final  Object[]  newRecord  :  newRecordes)  {  print(newRecord.toArray(new  Object[values.size()  ]));  }	  if(values    ==    null)    {    for(final    Object[]    newRecord    :    values)    {    print(newRecord.toArray(new    Object[values.size()    ]));    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
672	[BUG]  [BUGGY]  if(newRecord!=  values)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  values)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  values)  {  printRecord(values);  }	  if(values!=    null)    {    printRecord(values);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
673	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println(value);  else  printRecord();  }	  else    if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
674	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println(value.toString());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)println(value.toString());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println(value.toString());  else  printRecord();  }	  else    if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
675	[BUG]  [BUGGY]  else  if(newRecord  ==  null)println( " ");  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  else  if(newRecord  ==  null)println( " ");  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	else  if(newRecord  ==  null)println( " ");  else  printRecord();  }	  else    if(newRecord    ==    null)println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
676	[BUG]  [BUGGY]  printRecord(true,  false);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(true,  false);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(true,  false);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
677	[BUG]  [BUGGY]  printRecord(true,  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  printRecord(true,  true);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	printRecord(true,  true);	  printRecord(true);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
678	[BUG]  [BUGGY]  out.println(newRecord);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  out.println(newRecord);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	out.println(newRecord);	  out.println(value);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
679	[BUG]  [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  println();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null  ||  newRecord.length  <  =  0)  {  println();  }	  if(newRecord    ==    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
680	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value);  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value);  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
681	[BUG]  [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value.toString()));  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value.toString()));  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  null)  {  println();  }  else  {  throw  new  IllegalStateException( " ".equals(value.toString()));  }	  if(newRecord!=    null)    {    println();    }    else    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
682	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())println(value);  else  printRecord();  }  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())println(value);  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())println(value);  else  printRecord();  }	  if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
683	[BUG]  [BUGGY]  if(newRecord  ==  printRecord()  ||  newRecord  ==  printRecord())println();  else  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord()  ||  newRecord  ==  printRecord())println();  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord()  ||  newRecord  ==  printRecord())println();  else  printRecord();  }	  if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
684	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())println(value.toString());  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())println(value.toString());  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())println(value.toString());  else  printRecord();  }	  if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
685	[BUG]  [BUGGY]  if(newRecord  ==  printRecord())println( " ");  else  printRecord();  }  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord())println( " ");  else  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord())println( " ");  else  printRecord();  }	  if(newRecord    ==    printRecord())println();    else    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
686	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(values);  }  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(values);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  printRecord(values);  }	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
687	[BUG]  [BUGGY]  if(newRecord  ==  quote)  {  printRecord(values);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                            AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote)  {  printRecord(values);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote)  {  printRecord(values);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
688	[BUG]  [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(values);  }  else  {  out.println();  }  [CE]  <identifier>  expected  [FE]                              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  <  =  quote)  {  printRecord(values);  }  else  {  out.println();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  <  =  quote)  {  printRecord(values);  }  else  {  out.println();  }	  if(newRecord)    {    printRecord(values);    }    else    {    out.println();    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
689	[BUG]  [BUGGY]  if(newRecord!=  values)  {  printRecord();  if(!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord!=  values)  {  printRecord();  if(!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord!=  values)  {  printRecord();  if(!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
690	[BUG]  [BUGGY]  if(newRecord  ==  printRecord()  ||!quote)  {  printRecord();  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord()  ||!quote)  {  printRecord();  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord()  ||!quote)  {  printRecord();  }	  if(newRecord)printRecord();    if(!quote)    {    printRecord();    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
691	[BUG]  [BUGGY]  if(!newRecord)println(value.toString());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)println(value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)println(value.toString());	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
692	[BUG]  [BUGGY]  if(!newRecord)flush();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)flush();  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)flush();	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
693	[BUG]  [BUGGY]  if(!newRecord)println(values[0]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)println(values[0]);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)println(values[0]);	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
694	[BUG]  [BUGGY]  if(!newRecord)println(values.length);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(!newRecord)println(values.length);  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(!newRecord)println(values.length);	  if(!newRecord)println();    	non-compiled	[CE]  <identifier>  expected	116	None	replace
695	[BUG]  [BUGGY]  if(newRecord  ==  false)println(value.toString());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)println(value.toString());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)println(value.toString());	  if(newRecord    ==    false)println();    	non-compiled	[CE]  <identifier>  expected	69	None	replace
696	[BUG]  [BUGGY]  if(newRecord  ==  false)  {  print(value);  }  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  false)  {  print(value);  }  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  false)  {  print(value);  }	  if(newRecord    ==    false)    {    println();    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
697	[BUG]  [BUGGY]  if(newRecord  ==  quote  ||  println());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  quote  ||  println());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  quote  ||  println());	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
698	[BUG]  [BUGGY]  if(newRecord  ==  printRecord());  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      public  void  printRecord(final  Object...  values)  throws  IOException  {  for  (final  Object  value  :  values)  {  print(value);  }      [BUGGY]  if(newRecord  ==  printRecord());  [BUGGY]      }  [CLASS]  CSVPrinter  [METHOD]  printRecord  [RETURN_TYPE]  void  values  [VARIABLES]  CSVFormat  format  Object  value  boolean  newRecord  quote  Object[]  values  Appendable  out  	projects/Csv5/src/main/java/org/apache/commons/csv/CSVPrinter.java	0.7071067811865475	358	358	1	replace	if(newRecord  ==  printRecord());	  if(newRecord    ==    println());    	non-compiled	[CE]  <identifier>  expected	31	None	replace
